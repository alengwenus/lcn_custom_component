{"version":3,"file":"893.0f4680ecb47f7ce1.js","sources":["webpack://lcn-frontend/mwc-list-item.ts","webpack://lcn-frontend/keyboard.ts","webpack://lcn-frontend/constants.ts","webpack://lcn-frontend/mwc-list-foundation.ts","webpack://lcn-frontend/mwc-list-base.ts","webpack://lcn-frontend/mwc-list-item-base.ts","webpack://lcn-frontend/mwc-list-item.css.ts","webpack://lcn-frontend/mwc-list.css.ts","webpack://lcn-frontend/../src/directives/repeat.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {customElement} from 'lit/decorators.js';\n\nimport {ListItemBase} from './mwc-list-item-base.js';\nimport {styles} from './mwc-list-item.css.js';\n\nexport {GraphicType, RequestSelectedDetail} from './mwc-list-item-base.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mwc-list-item': ListItem;\n  }\n}\n\n@customElement('mwc-list-item')\nexport class ListItem extends ListItemBase {\n  static override styles = [styles];\n}\n","","","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport {MDCFoundation} from '@material/base/foundation.js';\nimport {normalizeKey} from '@material/dom/keyboard.js';\nimport {numbers, strings} from '@material/list/constants.js';\n\nimport {MDCListAdapter} from './mwc-list-adapter.js';\n\nexport type MWCListIndex = number|Set<number>;\n\nexport interface IndexDiff {\n  added: number[];\n  removed: number[];\n}\n\nexport interface SelectedDetail<T extends MWCListIndex = MWCListIndex> {\n  index: T;\n  diff: T extends Set<number>? IndexDiff: undefined;\n}\n\nexport interface ActionDetail {\n  index: number;\n}\n\nconst integerSort = (a: number, b: number) => {\n  return a - b;\n};\n\nexport type SingleSelectedEvent = CustomEvent<SelectedDetail<number>>;\nexport type MultiSelectedEvent = CustomEvent<SelectedDetail<Set<number>>>;\nexport type SelectedEvent = SingleSelectedEvent|MultiSelectedEvent;\n\nconst findIndexDiff = (oldSet: Set<number>, newSet: Set<number>): IndexDiff => {\n  const oldArr = Array.from(oldSet);\n  const newArr = Array.from(newSet);\n  const diff: IndexDiff = {added: [], removed: []};\n  const oldSorted = oldArr.sort(integerSort);\n  const newSorted = newArr.sort(integerSort);\n\n  let i = 0;\n  let j = 0;\n  while (i < oldSorted.length || j < newSorted.length) {\n    const oldVal = oldSorted[i];\n    const newVal = newSorted[j];\n\n    if (oldVal === newVal) {\n      i++;\n      j++;\n      continue;\n    }\n\n    if (oldVal !== undefined && (newVal === undefined || oldVal < newVal)) {\n      diff.removed.push(oldVal);\n      i++;\n      continue;\n    }\n\n    if (newVal !== undefined && (oldVal === undefined || newVal < oldVal)) {\n      diff.added.push(newVal);\n      j++;\n      continue;\n    }\n  }\n\n  return diff;\n};\n\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n\nexport function isIndexSet(selectedIndex: MWCListIndex):\n    selectedIndex is Set<number> {\n  return selectedIndex instanceof Set;\n}\n\nexport function isEventMulti(evt: SelectedEvent): evt is MultiSelectedEvent {\n  return isIndexSet(evt.detail.index);\n}\n\nexport const createSetFromIndex = (index: MWCListIndex) => {\n  const entry = index === numbers.UNSET_INDEX ? new Set<number>() : index;\n  return isIndexSet(entry) ? new Set(entry) : new Set([entry]);\n};\n\nexport class MDCListFoundation extends MDCFoundation<MDCListAdapter> {\n  static override get strings() {\n    return strings;\n  }\n\n  static override get numbers() {\n    return numbers;\n  }\n\n\n  static override get defaultAdapter(): MDCListAdapter {\n    return {\n      focusItemAtIndex: () => undefined,\n      getFocusedElementIndex: () => 0,\n      getListItemCount: () => 0,\n      isFocusInsideList: () => false,\n      isRootFocused: () => false,\n      notifyAction: () => undefined,\n      notifySelected: () => undefined,\n      getSelectedStateForElementIndex: () => false,\n      setDisabledStateForElementIndex: () => undefined,\n      getDisabledStateForElementIndex: () => false,\n      setSelectedStateForElementIndex: () => undefined,\n      setActivatedStateForElementIndex: () => undefined,\n      setTabIndexForElementIndex: () => undefined,\n      setAttributeForElementIndex: () => undefined,\n      getAttributeForElementIndex: () => null,\n    };\n  }\n\n  protected isMulti_ = false;\n  private wrapFocus_ = false;\n  private isVertical_ = true;\n  private selectedIndex_: MWCListIndex = numbers.UNSET_INDEX;\n  private focusedItemIndex_ = numbers.UNSET_INDEX;\n  private useActivatedClass_ = false;\n  private ariaCurrentAttrValue_: string|null = null;\n\n  constructor(adapter?: Partial<MDCListAdapter>) {\n    super({...MDCListFoundation.defaultAdapter, ...adapter});\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   */\n  setWrapFocus(value: boolean) {\n    this.wrapFocus_ = value;\n  }\n\n  /**\n   * Sets the private wrapFocus_ variable.\n   */\n  setMulti(value: boolean) {\n    this.isMulti_ = value;\n\n    const currentIndex = this.selectedIndex_;\n\n    if (value) {\n      // number to set\n      if (!isIndexSet(currentIndex)) {\n        const isUnset = currentIndex === numbers.UNSET_INDEX;\n        this.selectedIndex_ = isUnset ? new Set() : new Set([currentIndex]);\n      }\n    } else {\n      // set to first sorted number in set\n      if (isIndexSet(currentIndex)) {\n        if (currentIndex.size) {\n          const vals = Array.from(currentIndex).sort(integerSort);\n          this.selectedIndex_ = vals[0];\n        } else {\n          this.selectedIndex_ = numbers.UNSET_INDEX;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the isVertical_ private variable.\n   */\n  setVerticalOrientation(value: boolean) {\n    this.isVertical_ = value;\n  }\n\n  /**\n   * Sets the useActivatedClass_ private variable.\n   */\n  setUseActivatedClass(useActivated: boolean) {\n    this.useActivatedClass_ = useActivated;\n  }\n\n  getSelectedIndex(): MWCListIndex {\n    return this.selectedIndex_;\n  }\n\n  setSelectedIndex(index: MWCListIndex) {\n    if (!this.isIndexValid_(index)) {\n      return;\n    }\n\n    if (this.isMulti_) {\n      this.setMultiSelectionAtIndex_(createSetFromIndex(index));\n    } else {\n      this.setSingleSelectionAtIndex_(index as number);\n    }\n  }\n\n  /**\n   * Focus in handler for the list items.\n   */\n  handleFocusIn(_: FocusEvent, listItemIndex: number) {\n    if (listItemIndex >= 0) {\n      this.adapter.setTabIndexForElementIndex(listItemIndex, 0);\n    }\n  }\n\n  /**\n   * Focus out handler for the list items.\n   */\n  handleFocusOut(_: FocusEvent, listItemIndex: number) {\n    if (listItemIndex >= 0) {\n      this.adapter.setTabIndexForElementIndex(listItemIndex, -1);\n    }\n\n    /**\n     * Between Focusout & Focusin some browsers do not have focus on any\n     * element. Setting a delay to wait till the focus is moved to next element.\n     */\n    setTimeout(() => {\n      if (!this.adapter.isFocusInsideList()) {\n        this.setTabindexToFirstSelectedItem_();\n      }\n    }, 0);\n  }\n\n  /**\n   * Key handler for the list.\n   */\n  handleKeydown(\n      event: KeyboardEvent, isRootListItem: boolean, listItemIndex: number) {\n    const isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n    const isArrowUp = normalizeKey(event) === 'ArrowUp';\n    const isArrowRight = normalizeKey(event) === 'ArrowRight';\n    const isArrowDown = normalizeKey(event) === 'ArrowDown';\n    const isHome = normalizeKey(event) === 'Home';\n    const isEnd = normalizeKey(event) === 'End';\n    const isEnter = normalizeKey(event) === 'Enter';\n    const isSpace = normalizeKey(event) === 'Spacebar';\n\n    if (this.adapter.isRootFocused()) {\n      if (isArrowUp || isEnd) {\n        event.preventDefault();\n        this.focusLastElement();\n      } else if (isArrowDown || isHome) {\n        event.preventDefault();\n        this.focusFirstElement();\n      }\n\n      return;\n    }\n\n    let currentIndex = this.adapter.getFocusedElementIndex();\n    if (currentIndex === -1) {\n      currentIndex = listItemIndex;\n      if (currentIndex < 0) {\n        // If this event doesn't have a mdc-deprecated-list-item ancestor from\n        // the current list (not from a sublist), return early.\n        return;\n      }\n    }\n\n    let nextIndex;\n    if ((this.isVertical_ && isArrowDown) ||\n        (!this.isVertical_ && isArrowRight)) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusNextElement(currentIndex);\n    } else if (\n        (this.isVertical_ && isArrowUp) || (!this.isVertical_ && isArrowLeft)) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusPrevElement(currentIndex);\n    } else if (isHome) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusFirstElement();\n    } else if (isEnd) {\n      this.preventDefaultEvent(event);\n      nextIndex = this.focusLastElement();\n    } else if (isEnter || isSpace) {\n      if (isRootListItem) {\n        // Return early if enter key is pressed on anchor element which triggers\n        // synthetic MouseEvent event.\n        const target = event.target as Element | null;\n        if (target && target.tagName === 'A' && isEnter) {\n          return;\n        }\n        this.preventDefaultEvent(event);\n        this.setSelectedIndexOnAction_(currentIndex, true);\n      }\n    }\n\n    this.focusedItemIndex_ = currentIndex;\n\n    if (nextIndex !== undefined) {\n      this.setTabindexAtIndex_(nextIndex);\n      this.focusedItemIndex_ = nextIndex;\n    }\n  }\n\n  /**\n   * Click handler for the list.\n   */\n  handleSingleSelection(\n      index: number, isInteraction: boolean, force?: boolean) {\n    if (index === numbers.UNSET_INDEX) {\n      return;\n    }\n\n    this.setSelectedIndexOnAction_(index, isInteraction, force);\n    this.setTabindexAtIndex_(index);\n    this.focusedItemIndex_ = index;\n  }\n\n  /**\n   * Focuses the next element on the list.\n   */\n  focusNextElement(index: number) {\n    const count = this.adapter.getListItemCount();\n    let nextIndex = index + 1;\n    if (nextIndex >= count) {\n      if (this.wrapFocus_) {\n        nextIndex = 0;\n      } else {\n        // Return early because last item is already focused.\n        return index;\n      }\n    }\n    this.adapter.focusItemAtIndex(nextIndex);\n\n    return nextIndex;\n  }\n\n  /**\n   * Focuses the previous element on the list.\n   */\n  focusPrevElement(index: number) {\n    let prevIndex = index - 1;\n    if (prevIndex < 0) {\n      if (this.wrapFocus_) {\n        prevIndex = this.adapter.getListItemCount() - 1;\n      } else {\n        // Return early because first item is already focused.\n        return index;\n      }\n    }\n    this.adapter.focusItemAtIndex(prevIndex);\n\n    return prevIndex;\n  }\n\n  focusFirstElement() {\n    this.adapter.focusItemAtIndex(0);\n    return 0;\n  }\n\n  focusLastElement() {\n    const lastIndex = this.adapter.getListItemCount() - 1;\n    this.adapter.focusItemAtIndex(lastIndex);\n    return lastIndex;\n  }\n\n  /**\n   * @param itemIndex Index of the list item\n   * @param isEnabled Sets the list item to enabled or disabled.\n   */\n  setEnabled(itemIndex: number, isEnabled: boolean): void {\n    if (!this.isIndexValid_(itemIndex)) {\n      return;\n    }\n\n    this.adapter.setDisabledStateForElementIndex(itemIndex, !isEnabled);\n  }\n\n  /**\n   * Ensures that preventDefault is only called if the containing element\n   * doesn't consume the event, and it will cause an unintended scroll.\n   */\n  private preventDefaultEvent(evt: KeyboardEvent) {\n    const target = evt.target as Element;\n    const tagName = `${target.tagName}`.toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n      evt.preventDefault();\n    }\n  }\n\n  private setSingleSelectionAtIndex_(index: number, isInteraction = true) {\n    if (this.selectedIndex_ === index) {\n      return;\n    }\n\n    // unset previous\n    if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      this.adapter.setSelectedStateForElementIndex(\n          this.selectedIndex_ as number, false);\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(\n            this.selectedIndex_ as number, false);\n      }\n    }\n\n    // set new\n    if (isInteraction) {\n      this.adapter.setSelectedStateForElementIndex(index, true);\n    }\n    if (this.useActivatedClass_) {\n      this.adapter.setActivatedStateForElementIndex(index, true);\n    }\n    this.setAriaForSingleSelectionAtIndex_(index);\n\n    this.selectedIndex_ = index;\n\n    this.adapter.notifySelected(index);\n  }\n\n  private setMultiSelectionAtIndex_(\n      newIndex: Set<number>, isInteraction = true) {\n    const oldIndex = createSetFromIndex(this.selectedIndex_);\n    const diff = findIndexDiff(oldIndex, newIndex);\n\n    if (!diff.removed.length && !diff.added.length) {\n      return;\n    }\n\n    for (const removed of diff.removed) {\n      if (isInteraction) {\n        this.adapter.setSelectedStateForElementIndex(removed, false);\n      }\n\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(removed, false);\n      }\n    }\n\n    for (const added of diff.added) {\n      if (isInteraction) {\n        this.adapter.setSelectedStateForElementIndex(added, true);\n      }\n\n      if (this.useActivatedClass_) {\n        this.adapter.setActivatedStateForElementIndex(added, true);\n      }\n    }\n\n    this.selectedIndex_ = newIndex;\n\n    this.adapter.notifySelected(newIndex, diff);\n  }\n\n  /**\n   * Sets aria attribute for single selection at given index.\n   */\n  private setAriaForSingleSelectionAtIndex_(index: number) {\n    // Detect the presence of aria-current and get the value only during list\n    // initialization when it is in unset state.\n    if (this.selectedIndex_ === numbers.UNSET_INDEX) {\n      this.ariaCurrentAttrValue_ =\n          this.adapter.getAttributeForElementIndex(index, strings.ARIA_CURRENT);\n    }\n\n    const isAriaCurrent = this.ariaCurrentAttrValue_ !== null;\n    const ariaAttribute =\n        isAriaCurrent ? strings.ARIA_CURRENT : strings.ARIA_SELECTED;\n\n    if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      this.adapter.setAttributeForElementIndex(\n          this.selectedIndex_ as number, ariaAttribute, 'false');\n    }\n\n    const ariaAttributeValue =\n        isAriaCurrent ? this.ariaCurrentAttrValue_ : 'true';\n    this.adapter.setAttributeForElementIndex(\n        index, ariaAttribute, ariaAttributeValue as string);\n  }\n\n  private setTabindexAtIndex_(index: number) {\n    if (this.focusedItemIndex_ === numbers.UNSET_INDEX && index !== 0) {\n      // If no list item was selected set first list item's tabindex to -1.\n      // Generally, tabindex is set to 0 on first list item of list that has no\n      // preselected items.\n      this.adapter.setTabIndexForElementIndex(0, -1);\n    } else if (\n        this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n      this.adapter.setTabIndexForElementIndex(this.focusedItemIndex_, -1);\n    }\n\n    this.adapter.setTabIndexForElementIndex(index, 0);\n  }\n\n  private setTabindexToFirstSelectedItem_() {\n    let targetIndex = 0;\n\n    if (typeof this.selectedIndex_ === 'number' &&\n        this.selectedIndex_ !== numbers.UNSET_INDEX) {\n      targetIndex = this.selectedIndex_;\n    } else if (\n        isIndexSet(this.selectedIndex_) && this.selectedIndex_.size > 0) {\n      targetIndex = Math.min(...this.selectedIndex_);\n    }\n\n    this.setTabindexAtIndex_(targetIndex);\n  }\n\n  private isIndexValid_(index: MWCListIndex) {\n    if (index instanceof Set) {\n      if (!this.isMulti_) {\n        throw new Error(\n            'MDCListFoundation: Array of index is only supported for checkbox based list');\n      }\n\n      if (index.size === 0) {\n        return true;\n      } else {\n        let isOneInRange = false;\n\n        for (const entry of index) {\n          isOneInRange = this.isIndexInRange_(entry);\n\n          if (isOneInRange) {\n            break;\n          }\n        }\n\n        return isOneInRange;\n      }\n    } else if (typeof index === 'number') {\n      if (this.isMulti_) {\n        throw new Error(\n            'MDCListFoundation: Expected array of index for checkbox based list but got number: ' +\n            index);\n      }\n      return index === numbers.UNSET_INDEX || this.isIndexInRange_(index);\n    } else {\n      return false;\n    }\n  }\n\n  private isIndexInRange_(index: number) {\n    const listSize = this.adapter.getListItemCount();\n    return index >= 0 && index < listSize;\n  }\n\n  /**\n   * Sets selected index on user action, toggles checkbox / radio based on\n   * toggleCheckbox value. User interaction should not toggle list item(s) when\n   * disabled.\n   */\n  private setSelectedIndexOnAction_(\n      index: number, isInteraction: boolean, force?: boolean) {\n    if (this.adapter.getDisabledStateForElementIndex(index)) {\n      return;\n    }\n\n    let checkedIndex: MWCListIndex = index;\n\n    if (this.isMulti_) {\n      checkedIndex = new Set([index]);\n    }\n\n    if (!this.isIndexValid_(checkedIndex)) {\n      return;\n    }\n\n    if (this.isMulti_) {\n      this.toggleMultiAtIndex(index, force, isInteraction);\n    } else {\n      if (isInteraction || force) {\n        this.setSingleSelectionAtIndex_(index, isInteraction);\n      } else {\n        const isDeselection = this.selectedIndex_ === index;\n        if (isDeselection) {\n          this.setSingleSelectionAtIndex_(numbers.UNSET_INDEX);\n        }\n      }\n    }\n\n    if (isInteraction) {\n      this.adapter.notifyAction(index);\n    }\n  }\n\n  toggleMultiAtIndex(index: number, force?: boolean, isInteraction = true) {\n    let newSelectionValue = false;\n\n    if (force === undefined) {\n      newSelectionValue = !this.adapter.getSelectedStateForElementIndex(index);\n    } else {\n      newSelectionValue = force;\n    }\n\n    const newSet = createSetFromIndex(this.selectedIndex_);\n\n    if (newSelectionValue) {\n      newSet.add(index);\n    } else {\n      newSet.delete(index);\n    }\n\n    this.setMultiSelectionAtIndex_(newSet, isInteraction);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility\n// with MDC Web v0.44.0 and earlier.\nexport default MDCListFoundation;\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\nimport './mwc-list-item.js';\n\nimport {BaseElement} from '@material/mwc-base/base-element.js';\nimport {observer} from '@material/mwc-base/observer.js';\nimport {deepActiveElementPath, doesElementContainFocus, isNodeElement} from '@material/mwc-base/utils.js';\nimport {html} from 'lit';\nimport {property, query, queryAssignedNodes} from 'lit/decorators.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\n\nimport {MDCListAdapter} from './mwc-list-adapter.js';\nimport MDCListFoundation, {ActionDetail, isIndexSet, SelectedDetail} from './mwc-list-foundation.js';\nimport {MWCListIndex} from './mwc-list-foundation.js';\nimport {Layoutable, ListItemBase, RequestSelectedDetail} from './mwc-list-item-base.js';\n\nexport {ActionDetail, createSetFromIndex, isEventMulti, isIndexSet, MultiSelectedEvent, MWCListIndex, SelectedDetail, SelectedEvent, SingleSelectedEvent} from './mwc-list-foundation.js';\n\nfunction debounceLayout(\n    callback: (updateItems: boolean) => void, waitInMS = 50) {\n  let timeoutId: number;\n  // tslint:disable-next-line\n  return function(updateItems = true) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n                  callback(updateItems);\n                }, waitInMS) as unknown as number;\n  };\n}\n\nconst isListItem = (element: Element): element is ListItemBase => {\n  return element.hasAttribute('mwc-list-item');\n};\n\nfunction clearAndCreateItemsReadyPromise(this: ListBase) {\n  const oldResolver = this.itemsReadyResolver;\n  this.itemsReady = new Promise((res) => {\n    // TODO(b/175626389): Type '(value: never[] | PromiseLike<never[]>) => void'\n    // is not assignable to type '(value?: never[] | PromiseLike<never[]> |\n    // undefined) => void'.\n    return this.itemsReadyResolver = res as any;\n  });\n  oldResolver();\n}\n\n/**\n * @fires selected {SelectedDetail}\n * @fires action {ActionDetail}\n * @fires items-updated\n */\nexport abstract class ListBase extends BaseElement implements Layoutable {\n  protected mdcFoundation!: MDCListFoundation;\n  protected mdcAdapter: MDCListAdapter|null = null;\n\n  protected readonly mdcFoundationClass = MDCListFoundation;\n\n  @property({type: String}) emptyMessage: string|undefined;\n\n  @query('.mdc-deprecated-list') protected mdcRoot!: HTMLElement;\n\n  @queryAssignedNodes('', true, '*')\n  protected assignedElements!: HTMLElement[]|null;\n  @queryAssignedNodes('', true, '[tabindex=\"0\"]')\n  protected tabbableElements!: HTMLElement[]|null;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, value: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setUseActivatedClass(value);\n    }\n  })\n  activatable = false;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, newValue: boolean, oldValue: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setMulti(newValue);\n    }\n\n    if (oldValue !== undefined) {\n      this.layout();\n    }\n  })\n  multi = false;\n\n  @property({type: Boolean})\n  @observer(function(this: ListBase, value: boolean) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setWrapFocus(value);\n    }\n  })\n  wrapFocus = false;\n\n  @property({type: String})\n  @observer(function(this: ListBase, _newValue, oldValue: string|null) {\n    if (oldValue !== undefined) {\n      this.updateItems();\n    }\n  })\n  itemRoles: string|null = null;\n\n  @property({type: String}) innerRole: string|null = null;\n\n  @property({type: String}) innerAriaLabel: string|null = null;\n\n  @property({type: Boolean}) rootTabbable = false;\n\n  protected previousTabindex: Element|null = null;\n\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: ListBase, value: boolean) {\n    if (value) {\n      const tabbable = this.tabbableElements?.[0] ?? null;\n      this.previousTabindex = tabbable;\n      if (tabbable) {\n        tabbable.setAttribute('tabindex', '-1');\n      }\n    } else if (!value && this.previousTabindex) {\n      this.previousTabindex.setAttribute('tabindex', '0');\n      this.previousTabindex = null;\n    }\n  })\n  noninteractive = false;\n\n  debouncedLayout: (updateItems?: boolean) => void | undefined;\n  protected itemsReadyResolver:\n      (value?: (PromiseLike<never[]>|never[]|undefined)) => void =\n          (() => {\n               //\n           }) as(value?: (PromiseLike<unknown[]>|unknown[])) => void;\n\n  constructor() {\n    super();\n    const debouncedFunction = debounceLayout(this.layout.bind(this));\n    this.debouncedLayout = (updateItems = true) => {\n      clearAndCreateItemsReadyPromise.call(this);\n\n      debouncedFunction(updateItems);\n    };\n  }\n\n  itemsReady = Promise.resolve([]);\n\n  // tslint:disable:ban-ts-ignore\n  protected override async getUpdateComplete() {\n    // @ts-ignore\n    const result = await super.getUpdateComplete();\n    await this.itemsReady;\n    return result;\n  }\n  // tslint:enable:ban-ts-ignore\n\n\n  protected items_: ListItemBase[] = [];\n\n  get items(): ListItemBase[] {\n    return this.items_;\n  }\n\n  protected updateItems() {\n    const nodes = this.assignedElements ?? [];\n    const listItems: ListItemBase[] = [];\n\n    for (const node of nodes) {\n      if (isListItem(node)) {\n        listItems.push(node);\n        node._managingList = this;\n      }\n\n      if (node.hasAttribute('divider') && !node.hasAttribute('role')) {\n        node.setAttribute('role', 'separator');\n      }\n    }\n\n    this.items_ = listItems;\n    const selectedIndices = new Set<number>();\n\n    this.items_.forEach((item, index) => {\n      if (this.itemRoles) {\n        item.setAttribute('role', this.itemRoles);\n      } else {\n        item.removeAttribute('role');\n      }\n\n      if (item.selected) {\n        selectedIndices.add(index);\n      }\n    });\n\n    if (this.multi) {\n      this.select(selectedIndices);\n    } else {\n      const index =\n          selectedIndices.size ? selectedIndices.entries().next().value[1] : -1;\n      this.select(index);\n    }\n\n    const itemsUpdatedEv =\n        new Event('items-updated', {bubbles: true, composed: true});\n    this.dispatchEvent(itemsUpdatedEv);\n  }\n\n  get selected(): ListItemBase|ListItemBase[]|null {\n    const index = this.index;\n\n    if (!isIndexSet(index)) {\n      if (index === -1) {\n        return null;\n      }\n\n      return this.items[index];\n    }\n\n    const selected: ListItemBase[] = [];\n\n    for (const entry of index) {\n      selected.push(this.items[entry]);\n    }\n\n    return selected;\n  }\n\n  get index(): MWCListIndex {\n    if (this.mdcFoundation) {\n      return this.mdcFoundation.getSelectedIndex();\n    }\n\n    return -1;\n  }\n\n  override render() {\n    const role = this.innerRole === null ? undefined : this.innerRole;\n    const ariaLabel =\n        this.innerAriaLabel === null ? undefined : this.innerAriaLabel;\n    const tabindex = this.rootTabbable ? '0' : '-1';\n\n    return html`\n      <!-- @ts-ignore -->\n      <ul\n          tabindex=${tabindex}\n          role=\"${ifDefined(role)}\"\n          aria-label=\"${ifDefined(ariaLabel)}\"\n          class=\"mdc-deprecated-list\"\n          @keydown=${this.onKeydown}\n          @focusin=${this.onFocusIn}\n          @focusout=${this.onFocusOut}\n          @request-selected=${this.onRequestSelected}\n          @list-item-rendered=${this.onListItemConnected}>\n        <slot></slot>\n        ${this.renderPlaceholder()}\n      </ul>\n    `;\n  }\n\n  renderPlaceholder() {\n    const nodes = this.assignedElements ?? [];\n    if (this.emptyMessage !== undefined && nodes.length === 0) {\n      return html`\n        <mwc-list-item noninteractive>${this.emptyMessage}</mwc-list-item>\n      `;\n    }\n\n    return null;\n  }\n\n  override firstUpdated() {\n    super.firstUpdated();\n\n    if (!this.items.length) {\n      // required because this is called before observers\n      this.mdcFoundation.setMulti(this.multi);\n      // for when children upgrade before list\n      this.layout();\n    }\n  }\n\n  protected onFocusIn(evt: FocusEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusIn(evt, index);\n    }\n  }\n\n  protected onFocusOut(evt: FocusEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      this.mdcFoundation.handleFocusOut(evt, index);\n    }\n  }\n\n  protected onKeydown(evt: KeyboardEvent) {\n    if (this.mdcFoundation && this.mdcRoot) {\n      const index = this.getIndexOfTarget(evt);\n      const target = evt.target as Element;\n      const isRootListItem = isListItem(target);\n      this.mdcFoundation.handleKeydown(evt, isRootListItem, index);\n    }\n  }\n\n  protected onRequestSelected(evt: CustomEvent<RequestSelectedDetail>) {\n    if (this.mdcFoundation) {\n      let index = this.getIndexOfTarget(evt);\n\n      // might happen in shady dom slowness. Recalc children\n      if (index === -1) {\n        this.layout();\n        index = this.getIndexOfTarget(evt);\n\n        // still not found; may not be mwc-list-item. Unsupported case.\n        if (index === -1) {\n          return;\n        }\n      }\n\n      const element = this.items[index];\n\n      if (element.disabled) {\n        return;\n      }\n\n      const selected = evt.detail.selected;\n      const source = evt.detail.source;\n\n      this.mdcFoundation.handleSingleSelection(\n          index, source === 'interaction', selected);\n\n      evt.stopPropagation();\n    }\n  }\n\n  protected getIndexOfTarget(evt: Event): number {\n    const elements = this.items;\n    const path = evt.composedPath();\n\n    for (const pathItem of path as Node[]) {\n      let index = -1;\n      if (isNodeElement(pathItem) && isListItem(pathItem)) {\n        index = elements.indexOf(pathItem);\n      }\n\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  protected createAdapter(): MDCListAdapter {\n    this.mdcAdapter = {\n      getListItemCount: () => {\n        if (this.mdcRoot) {\n          return this.items.length;\n        }\n\n        return 0;\n      },\n      getFocusedElementIndex: this.getFocusedItemIndex,\n      getAttributeForElementIndex: (index, attr) => {\n        const listElement = this.mdcRoot;\n        if (!listElement) {\n          return '';\n        }\n\n        const element = this.items[index];\n        return element ? element.getAttribute(attr) : '';\n      },\n      setAttributeForElementIndex: (index, attr, val) => {\n        if (!this.mdcRoot) {\n          return;\n        }\n\n        const element = this.items[index];\n\n        if (element) {\n          element.setAttribute(attr, val);\n        }\n      },\n      focusItemAtIndex: (index) => {\n        const element = this.items[index];\n        if (element) {\n          element.focus();\n        }\n      },\n      setTabIndexForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (item) {\n          item.tabindex = value;\n        }\n      },\n      notifyAction: (index) => {\n        const init: CustomEventInit = {bubbles: true, composed: true};\n        init.detail = {index};\n        const ev = new CustomEvent<ActionDetail>('action', init);\n        this.dispatchEvent(ev);\n      },\n      notifySelected: (index, diff) => {\n        const init: CustomEventInit = {bubbles: true, composed: true};\n        init.detail = {index, diff};\n        const ev = new CustomEvent<SelectedDetail>('selected', init);\n        this.dispatchEvent(ev);\n      },\n      isFocusInsideList: () => {\n        return doesElementContainFocus(this);\n      },\n      isRootFocused: () => {\n        const mdcRoot = this.mdcRoot;\n        const root = mdcRoot.getRootNode() as unknown as DocumentOrShadowRoot;\n        return root.activeElement === mdcRoot;\n      },\n      setDisabledStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.disabled = value;\n      },\n      getDisabledStateForElementIndex: (index) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return false;\n        }\n\n        return item.disabled;\n      },\n      setSelectedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.selected = value;\n      },\n      getSelectedStateForElementIndex: (index) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return false;\n        }\n\n        return item.selected;\n      },\n      setActivatedStateForElementIndex: (index, value) => {\n        const item = this.items[index];\n\n        if (!item) {\n          return;\n        }\n\n        item.activated = value;\n      },\n    };\n\n    return this.mdcAdapter;\n  }\n\n  protected selectUi(index: number, activate = false) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = true;\n      item.activated = activate;\n    }\n  }\n\n  protected deselectUi(index: number) {\n    const item = this.items[index];\n    if (item) {\n      item.selected = false;\n      item.activated = false;\n    }\n  }\n\n  select(index: MWCListIndex) {\n    if (!this.mdcFoundation) {\n      return;\n    }\n\n    this.mdcFoundation.setSelectedIndex(index);\n  }\n\n  toggle(index: number, force?: boolean) {\n    if (this.multi) {\n      this.mdcFoundation.toggleMultiAtIndex(index, force);\n    }\n  }\n\n  protected onListItemConnected(e: CustomEvent) {\n    const target = e.target as ListItemBase;\n\n    this.layout(this.items.indexOf(target) === -1);\n  }\n\n  layout(updateItems = true) {\n    if (updateItems) {\n      this.updateItems();\n    }\n\n    const first: ListItemBase|undefined = this.items[0];\n\n    for (const item of this.items) {\n      item.tabindex = -1;\n    }\n\n    if (first) {\n      if (this.noninteractive) {\n        if (!this.previousTabindex) {\n          this.previousTabindex = first;\n        }\n      } else {\n        first.tabindex = 0;\n      }\n    }\n\n    this.itemsReadyResolver();\n  }\n\n  getFocusedItemIndex() {\n    if (!this.mdcRoot) {\n      return -1;\n    }\n\n    if (!this.items.length) {\n      return -1;\n    }\n\n    const activeElementPath = deepActiveElementPath();\n\n    if (!activeElementPath.length) {\n      return -1;\n    }\n\n    for (let i = activeElementPath.length - 1; i >= 0; i--) {\n      const activeItem = activeElementPath[i];\n\n      if (isListItem(activeItem)) {\n        return this.items.indexOf(activeItem);\n      }\n    }\n\n    return -1;\n  }\n\n  focusItemAtIndex(index: number) {\n    for (const item of this.items) {\n      if (item.tabindex === 0) {\n        item.tabindex = -1;\n        break;\n      }\n    }\n\n    this.items[index].tabindex = 0;\n    this.items[index].focus();\n  }\n\n  override focus() {\n    const root = this.mdcRoot;\n\n    if (root) {\n      root.focus();\n    }\n  }\n\n  override blur() {\n    const root = this.mdcRoot;\n\n    if (root) {\n      root.blur();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\nimport '@material/mwc-ripple/mwc-ripple.js';\n\nimport {observer} from '@material/mwc-base/observer.js';\nimport {Ripple} from '@material/mwc-ripple/mwc-ripple.js';\nimport {RippleHandlers} from '@material/mwc-ripple/ripple-handlers.js';\nimport {html, LitElement} from 'lit';\nimport {property, query, queryAsync, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nexport type SelectionSource = 'interaction'|'property';\nexport interface RequestSelectedDetail {\n  selected: boolean;\n  source: SelectionSource;\n}\n\nexport interface Layoutable {\n  layout: (updateItems?: boolean) => void;\n  debouncedLayout?: (updateItems?: boolean) => void | undefined;\n}\n\nexport type GraphicType = 'avatar'|'icon'|'medium'|'large'|'control'|null;\n\n/**\n * @fires request-selected {RequestSelectedDetail}\n * @fires list-item-rendered\n */\nexport class ListItemBase extends LitElement {\n  @query('slot') protected slotElement!: HTMLSlotElement|null;\n  @queryAsync('mwc-ripple') ripple!: Promise<Ripple|null>;\n\n  @property({type: String}) value = '';\n  @property({type: String, reflect: true}) group: string|null = null;\n  @property({type: Number, reflect: true}) tabindex = -1;\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: ListItemBase, value: boolean) {\n    if (value) {\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      this.setAttribute('aria-disabled', 'false');\n    }\n  })\n  disabled = false;\n  @property({type: Boolean, reflect: true}) twoline = false;\n  @property({type: Boolean, reflect: true}) activated = false;\n  @property({type: String, reflect: true}) graphic: GraphicType = null;\n  @property({type: Boolean}) multipleGraphics = false;\n  @property({type: Boolean}) hasMeta = false;\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: ListItemBase, value: boolean) {\n    if (value) {\n      this.removeAttribute('aria-checked');\n      this.removeAttribute('mwc-list-item');\n      this.selected = false;\n      this.activated = false;\n      this.tabIndex = -1;\n    } else {\n      this.setAttribute('mwc-list-item', '');\n    }\n  })\n  noninteractive = false;\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: ListItemBase, value: boolean) {\n    const role = this.getAttribute('role');\n    const isAriaSelectable = role === 'gridcell' || role === 'option' ||\n        role === 'row' || role === 'tab';\n\n    if (isAriaSelectable && value) {\n      this.setAttribute('aria-selected', 'true');\n    } else if (isAriaSelectable) {\n      this.setAttribute('aria-selected', 'false');\n    }\n\n    if (this._firstChanged) {\n      this._firstChanged = false;\n      return;\n    }\n\n    if (this._skipPropRequest) {\n      return;\n    }\n\n    this.fireRequestSelected(value, 'property');\n  })\n  selected = false;\n\n  @state() protected shouldRenderRipple = false;\n  @state() _managingList: Layoutable|null = null;\n\n  protected boundOnClick = this.onClick.bind(this);\n  protected _firstChanged = true;\n  protected _skipPropRequest = false;\n  protected rippleHandlers: RippleHandlers = new RippleHandlers(() => {\n    this.shouldRenderRipple = true;\n    return this.ripple;\n  });\n  protected listeners: ({\n    target: Element;\n    eventNames: string[];\n    cb: EventListenerOrEventListenerObject;\n  })[] =\n      [\n        {\n          target: this,\n          eventNames: ['click'],\n          cb:\n              () => {\n                this.onClick();\n              },\n        },\n        {\n          target: this,\n          eventNames: ['mouseenter'],\n          cb: this.rippleHandlers.startHover,\n        },\n        {\n          target: this,\n          eventNames: ['mouseleave'],\n          cb: this.rippleHandlers.endHover,\n        },\n        {\n          target: this,\n          eventNames: ['focus'],\n          cb: this.rippleHandlers.startFocus,\n        },\n        {\n          target: this,\n          eventNames: ['blur'],\n          cb: this.rippleHandlers.endFocus,\n        },\n        {\n          target: this,\n          eventNames: ['mousedown', 'touchstart'],\n          cb:\n              (e: Event) => {\n                const name = e.type;\n                this.onDown(name === 'mousedown' ? 'mouseup' : 'touchend', e);\n              },\n        },\n      ];\n\n  get text() {\n    const textContent = this.textContent;\n\n    return textContent ? textContent.trim() : '';\n  }\n\n  override render() {\n    const text = this.renderText();\n    const graphic = this.graphic ? this.renderGraphic() : html``;\n    const meta = this.hasMeta ? this.renderMeta() : html``;\n\n    return html`\n      ${this.renderRipple()}\n      ${graphic}\n      ${text}\n      ${meta}`;\n  }\n\n  protected renderRipple() {\n    if (this.shouldRenderRipple) {\n      return html`\n      <mwc-ripple\n        .activated=${this.activated}>\n      </mwc-ripple>`;\n    } else if (this.activated) {\n      return html`<div class=\"fake-activated-ripple\"></div>`;\n    } else {\n      return '';\n    }\n  }\n\n  protected renderGraphic() {\n    const graphicClasses = {\n      multi: this.multipleGraphics,\n    };\n\n    return html`\n      <span class=\"mdc-deprecated-list-item__graphic material-icons ${\n        classMap(graphicClasses)}\">\n        <slot name=\"graphic\"></slot>\n      </span>`;\n  }\n\n  protected renderMeta() {\n    return html`\n      <span class=\"mdc-deprecated-list-item__meta material-icons\">\n        <slot name=\"meta\"></slot>\n      </span>`;\n  }\n\n  protected renderText() {\n    const inner = this.twoline ? this.renderTwoline() : this.renderSingleLine();\n    return html`\n      <span class=\"mdc-deprecated-list-item__text\">\n        ${inner}\n      </span>`;\n  }\n\n  protected renderSingleLine() {\n    return html`<slot></slot>`;\n  }\n\n  protected renderTwoline() {\n    return html`\n      <span class=\"mdc-deprecated-list-item__primary-text\">\n        <slot></slot>\n      </span>\n      <span class=\"mdc-deprecated-list-item__secondary-text\">\n        <slot name=\"secondary\"></slot>\n      </span>\n    `;\n  }\n\n  protected onClick() {\n    this.fireRequestSelected(!this.selected, 'interaction');\n  }\n\n  protected onDown(upName: string, evt: Event) {\n    const onUp = () => {\n      window.removeEventListener(upName, onUp);\n      this.rippleHandlers.endPress();\n    };\n\n    window.addEventListener(upName, onUp);\n    this.rippleHandlers.startPress(evt);\n  }\n\n  protected fireRequestSelected(selected: boolean, source: SelectionSource) {\n    if (this.noninteractive) {\n      return;\n    }\n\n    const customEv = new CustomEvent<RequestSelectedDetail>(\n        'request-selected',\n        {bubbles: true, composed: true, detail: {source, selected}});\n\n    this.dispatchEvent(customEv);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.noninteractive) {\n      this.setAttribute('mwc-list-item', '');\n    }\n\n    for (const listener of this.listeners) {\n      for (const eventName of listener.eventNames) {\n        listener.target.addEventListener(\n            eventName, listener.cb, {passive: true});\n      }\n    }\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n\n    for (const listener of this.listeners) {\n      for (const eventName of listener.eventNames) {\n        listener.target.removeEventListener(eventName, listener.cb);\n      }\n    }\n\n    if (this._managingList) {\n      this._managingList.debouncedLayout ?\n          this._managingList.debouncedLayout(true) :\n          this._managingList.layout(true);\n    }\n  }\n\n  // composed flag, event fire through shadow root and up through composed tree\n  protected override firstUpdated() {\n    const ev = new Event('list-item-rendered', {bubbles: true, composed: true});\n    this.dispatchEvent(ev);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`:host{cursor:pointer;user-select:none;-webkit-tap-highlight-color:transparent;height:48px;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:var(--mdc-list-side-padding, 16px);padding-right:var(--mdc-list-side-padding, 16px);outline:none;height:48px;color:rgba(0,0,0,.87);color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}:host:focus{outline:none}:host([activated]){color:#6200ee;color:var(--mdc-theme-primary, #6200ee);--mdc-ripple-color: var( --mdc-theme-primary, #6200ee )}:host([activated]) .mdc-deprecated-list-item__graphic{color:#6200ee;color:var(--mdc-theme-primary, #6200ee)}:host([activated]) .fake-activated-ripple::before{position:absolute;display:block;top:0;bottom:0;left:0;right:0;width:100%;height:100%;pointer-events:none;z-index:1;content:\"\";opacity:0.12;opacity:var(--mdc-ripple-activated-opacity, 0.12);background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-deprecated-list-item__graphic{flex-shrink:0;align-items:center;justify-content:center;fill:currentColor;display:inline-flex}.mdc-deprecated-list-item__graphic ::slotted(*){flex-shrink:0;align-items:center;justify-content:center;fill:currentColor;width:100%;height:100%;text-align:center}.mdc-deprecated-list-item__meta{width:var(--mdc-list-item-meta-size, 24px);height:var(--mdc-list-item-meta-size, 24px);margin-left:auto;margin-right:0;color:rgba(0, 0, 0, 0.38);color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-deprecated-list-item__meta.multi{width:auto}.mdc-deprecated-list-item__meta ::slotted(*){width:var(--mdc-list-item-meta-size, 24px);line-height:var(--mdc-list-item-meta-size, 24px)}.mdc-deprecated-list-item__meta ::slotted(.material-icons),.mdc-deprecated-list-item__meta ::slotted(mwc-icon){line-height:var(--mdc-list-item-meta-size, 24px) !important}.mdc-deprecated-list-item__meta ::slotted(:not(.material-icons):not(mwc-icon)){-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.75rem;font-size:var(--mdc-typography-caption-font-size, 0.75rem);line-height:1.25rem;line-height:var(--mdc-typography-caption-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-caption-font-weight, 400);letter-spacing:0.0333333333em;letter-spacing:var(--mdc-typography-caption-letter-spacing, 0.0333333333em);text-decoration:inherit;text-decoration:var(--mdc-typography-caption-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-caption-text-transform, inherit)}[dir=rtl] .mdc-deprecated-list-item__meta,.mdc-deprecated-list-item__meta[dir=rtl]{margin-left:0;margin-right:auto}.mdc-deprecated-list-item__meta ::slotted(*){width:100%;height:100%}.mdc-deprecated-list-item__text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-deprecated-list-item__text ::slotted([for]),.mdc-deprecated-list-item__text[for]{pointer-events:none}.mdc-deprecated-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal;margin-bottom:-20px;display:block}.mdc-deprecated-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\"\";vertical-align:0}.mdc-deprecated-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\"\";vertical-align:-20px}.mdc-deprecated-list-item__secondary-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:0.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit);text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal;display:block}.mdc-deprecated-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\"\";vertical-align:0}.mdc-deprecated-list--dense .mdc-deprecated-list-item__secondary-text{font-size:inherit}* ::slotted(a),a{color:inherit;text-decoration:none}:host([twoline]){height:72px}:host([twoline]) .mdc-deprecated-list-item__text{align-self:flex-start}:host([disabled]),:host([noninteractive]){cursor:default;pointer-events:none}:host([disabled]) .mdc-deprecated-list-item__text ::slotted(*){opacity:.38}:host([disabled]) .mdc-deprecated-list-item__text ::slotted(*),:host([disabled]) .mdc-deprecated-list-item__primary-text ::slotted(*),:host([disabled]) .mdc-deprecated-list-item__secondary-text ::slotted(*){color:#000;color:var(--mdc-theme-on-surface, #000)}.mdc-deprecated-list-item__secondary-text ::slotted(*){color:rgba(0, 0, 0, 0.54);color:var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54))}.mdc-deprecated-list-item__graphic ::slotted(*){background-color:transparent;color:rgba(0, 0, 0, 0.38);color:var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38))}.mdc-deprecated-list-group__subheader ::slotted(*){color:rgba(0, 0, 0, 0.87);color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic{width:var(--mdc-list-item-graphic-size, 40px);height:var(--mdc-list-item-graphic-size, 40px)}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic.multi{width:auto}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(*){width:var(--mdc-list-item-graphic-size, 40px);line-height:var(--mdc-list-item-graphic-size, 40px)}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon){line-height:var(--mdc-list-item-graphic-size, 40px) !important}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(*){border-radius:50%}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic,:host([graphic=medium]) .mdc-deprecated-list-item__graphic,:host([graphic=large]) .mdc-deprecated-list-item__graphic,:host([graphic=control]) .mdc-deprecated-list-item__graphic{margin-left:0;margin-right:var(--mdc-list-item-graphic-margin, 16px)}[dir=rtl] :host([graphic=avatar]) .mdc-deprecated-list-item__graphic,[dir=rtl] :host([graphic=medium]) .mdc-deprecated-list-item__graphic,[dir=rtl] :host([graphic=large]) .mdc-deprecated-list-item__graphic,[dir=rtl] :host([graphic=control]) .mdc-deprecated-list-item__graphic,:host([graphic=avatar]) .mdc-deprecated-list-item__graphic[dir=rtl],:host([graphic=medium]) .mdc-deprecated-list-item__graphic[dir=rtl],:host([graphic=large]) .mdc-deprecated-list-item__graphic[dir=rtl],:host([graphic=control]) .mdc-deprecated-list-item__graphic[dir=rtl]{margin-left:var(--mdc-list-item-graphic-margin, 16px);margin-right:0}:host([graphic=icon]) .mdc-deprecated-list-item__graphic{width:var(--mdc-list-item-graphic-size, 24px);height:var(--mdc-list-item-graphic-size, 24px);margin-left:0;margin-right:var(--mdc-list-item-graphic-margin, 32px)}:host([graphic=icon]) .mdc-deprecated-list-item__graphic.multi{width:auto}:host([graphic=icon]) .mdc-deprecated-list-item__graphic ::slotted(*){width:var(--mdc-list-item-graphic-size, 24px);line-height:var(--mdc-list-item-graphic-size, 24px)}:host([graphic=icon]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=icon]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon){line-height:var(--mdc-list-item-graphic-size, 24px) !important}[dir=rtl] :host([graphic=icon]) .mdc-deprecated-list-item__graphic,:host([graphic=icon]) .mdc-deprecated-list-item__graphic[dir=rtl]{margin-left:var(--mdc-list-item-graphic-margin, 32px);margin-right:0}:host([graphic=avatar]:not([twoLine])),:host([graphic=icon]:not([twoLine])){height:56px}:host([graphic=medium]:not([twoLine])),:host([graphic=large]:not([twoLine])){height:72px}:host([graphic=medium]) .mdc-deprecated-list-item__graphic,:host([graphic=large]) .mdc-deprecated-list-item__graphic{width:var(--mdc-list-item-graphic-size, 56px);height:var(--mdc-list-item-graphic-size, 56px)}:host([graphic=medium]) .mdc-deprecated-list-item__graphic.multi,:host([graphic=large]) .mdc-deprecated-list-item__graphic.multi{width:auto}:host([graphic=medium]) .mdc-deprecated-list-item__graphic ::slotted(*),:host([graphic=large]) .mdc-deprecated-list-item__graphic ::slotted(*){width:var(--mdc-list-item-graphic-size, 56px);line-height:var(--mdc-list-item-graphic-size, 56px)}:host([graphic=medium]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=medium]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon),:host([graphic=large]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=large]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon){line-height:var(--mdc-list-item-graphic-size, 56px) !important}:host([graphic=large]){padding-left:0px}`;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport {css} from 'lit';\nexport const styles = css`@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}:host{display:block}.mdc-deprecated-list{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1rem;font-size:var(--mdc-typography-subtitle1-font-size, 1rem);line-height:1.75rem;line-height:var(--mdc-typography-subtitle1-line-height, 1.75rem);font-weight:400;font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:0.009375em;letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:inherit;text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-subtitle1-text-transform, inherit);line-height:1.5rem;margin:0;padding:8px 0;list-style-type:none;color:rgba(0, 0, 0, 0.87);color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));padding:var(--mdc-list-vertical-padding, 8px) 0}.mdc-deprecated-list:focus{outline:none}.mdc-deprecated-list-item{height:48px}.mdc-deprecated-list--dense{padding-top:4px;padding-bottom:4px;font-size:.812rem}.mdc-deprecated-list ::slotted([divider]){height:0;margin:0;border:none;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgba(0, 0, 0, 0.12)}.mdc-deprecated-list ::slotted([divider][padded]){margin:0 var(--mdc-list-side-padding, 16px)}.mdc-deprecated-list ::slotted([divider][inset]){margin-left:var(--mdc-list-inset-margin, 72px);margin-right:0;width:calc( 100% - var(--mdc-list-inset-margin, 72px) )}[dir=rtl] .mdc-deprecated-list ::slotted([divider][inset]),.mdc-deprecated-list ::slotted([divider][inset][dir=rtl]){margin-left:0;margin-right:var(--mdc-list-inset-margin, 72px)}.mdc-deprecated-list ::slotted([divider][inset][padded]){width:calc( 100% - var(--mdc-list-inset-margin, 72px) - var(--mdc-list-side-padding, 16px) )}.mdc-deprecated-list--dense ::slotted([mwc-list-item]){height:40px}.mdc-deprecated-list--dense ::slotted([mwc-list]){--mdc-list-item-graphic-size: 20px}.mdc-deprecated-list--two-line.mdc-deprecated-list--dense ::slotted([mwc-list-item]),.mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense ::slotted([mwc-list-item]){height:60px}.mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense ::slotted([mwc-list]){--mdc-list-item-graphic-size: 36px}:host([noninteractive]){pointer-events:none;cursor:default}.mdc-deprecated-list--dense ::slotted(.mdc-deprecated-list-item__primary-text){display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-deprecated-list--dense ::slotted(.mdc-deprecated-list-item__primary-text)::before{display:inline-block;width:0;height:24px;content:\"\";vertical-align:0}.mdc-deprecated-list--dense ::slotted(.mdc-deprecated-list-item__primary-text)::after{display:inline-block;width:0;height:20px;content:\"\";vertical-align:-20px}`;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n"],"names":["ListItem","ListItemBase","styles","__decorate","customElement","KEY","normalizedKeys","Set","add","KEY_CODE","mappedKeyCodes","Map","set","_a","_b","navigationKeys","normalizeKey","evt","key","has","mappedKey","get","keyCode","cssClasses","deprecatedClassNameMap","strings","ACTION_EVENT","SELECTION_CHANGE_EVENT","ARIA_CHECKED","ARIA_CHECKED_CHECKBOX_SELECTOR","ARIA_CHECKED_RADIO_SELECTOR","ARIA_CURRENT","ARIA_DISABLED","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_ROLE_CHECKBOX_SELECTOR","ARIA_SELECTED","ARIA_INTERACTIVE_ROLES_SELECTOR","ARIA_MULTI_SELECTABLE_SELECTOR","CHECKBOX_RADIO_SELECTOR","CHECKBOX_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","DEPRECATED_SELECTOR","FOCUSABLE_CHILD_ELEMENTS","RADIO_SELECTOR","SELECTED_ITEM_SELECTOR","numbers","UNSET_INDEX","TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS","integerSort","a","b","ELEMENTS_KEY_ALLOWED_IN","isIndexSet","selectedIndex","createSetFromIndex","index","entry","MDCListFoundation","MDCFoundation","defaultAdapter","focusItemAtIndex","getFocusedElementIndex","getListItemCount","isFocusInsideList","isRootFocused","notifyAction","notifySelected","getSelectedStateForElementIndex","setDisabledStateForElementIndex","getDisabledStateForElementIndex","setSelectedStateForElementIndex","setActivatedStateForElementIndex","setTabIndexForElementIndex","setAttributeForElementIndex","getAttributeForElementIndex","setWrapFocus","value","this","wrapFocus_","setMulti","isMulti_","currentIndex","selectedIndex_","isUnset","size","vals","Array","from","sort","setVerticalOrientation","isVertical_","setUseActivatedClass","useActivated","useActivatedClass_","getSelectedIndex","setSelectedIndex","isIndexValid_","setMultiSelectionAtIndex_","setSingleSelectionAtIndex_","handleFocusIn","_","listItemIndex","adapter","handleFocusOut","setTimeout","setTabindexToFirstSelectedItem_","handleKeydown","event","isRootListItem","isArrowLeft","isArrowUp","isArrowRight","isArrowDown","isHome","isEnd","isEnter","isSpace","preventDefault","focusLastElement","focusFirstElement","nextIndex","preventDefaultEvent","focusNextElement","focusPrevElement","target","tagName","setSelectedIndexOnAction_","focusedItemIndex_","undefined","setTabindexAtIndex_","handleSingleSelection","isInteraction","force","prevIndex","lastIndex","setEnabled","itemIndex","isEnabled","toLowerCase","indexOf","setAriaForSingleSelectionAtIndex_","newIndex","diff","findIndexDiff","oldSet","newSet","oldArr","newArr","added","removed","oldSorted","newSorted","i","j","length","oldVal","newVal","push","ariaCurrentAttrValue_","isAriaCurrent","ariaAttribute","ariaAttributeValue","targetIndex","Math","min","Error","isOneInRange","isIndexInRange_","listSize","checkedIndex","toggleMultiAtIndex","newSelectionValue","delete","constructor","super","Object","assign","isListItem","element","hasAttribute","clearAndCreateItemsReadyPromise","oldResolver","itemsReadyResolver","itemsReady","Promise","res","ListBase","BaseElement","getUpdateComplete","result","items","items_","updateItems","nodes","assignedElements","listItems","node","_managingList","setAttribute","selectedIndices","forEach","item","itemRoles","removeAttribute","selected","multi","select","entries","next","itemsUpdatedEv","Event","bubbles","composed","dispatchEvent","mdcFoundation","render","role","innerRole","ariaLabel","innerAriaLabel","tabindex","rootTabbable","html","ifDefined","onKeydown","onFocusIn","onFocusOut","onRequestSelected","onListItemConnected","renderPlaceholder","emptyMessage","firstUpdated","layout","mdcRoot","getIndexOfTarget","disabled","detail","source","stopPropagation","elements","path","composedPath","pathItem","isNodeElement","createAdapter","mdcAdapter","getFocusedItemIndex","attr","getAttribute","val","focus","init","ev","CustomEvent","doesElementContainFocus","getRootNode","activeElement","activated","selectUi","activate","deselectUi","toggle","e","first","noninteractive","previousTabindex","activeElementPath","deepActiveElementPath","activeItem","root","blur","mdcFoundationClass","activatable","wrapFocus","resolve","debouncedFunction","callback","waitInMS","timeoutId","clearTimeout","debounceLayout","bind","debouncedLayout","call","property","type","String","query","queryAssignedElements","flatten","selector","Boolean","observer","newValue","oldValue","_newValue","reflect","tabbable","tabbableElements","LitElement","text","textContent","trim","renderText","graphic","renderGraphic","meta","hasMeta","renderMeta","renderRipple","shouldRenderRipple","graphicClasses","multipleGraphics","classMap","inner","twoline","renderTwoline","renderSingleLine","onClick","fireRequestSelected","onDown","upName","onUp","window","removeEventListener","rippleHandlers","endPress","addEventListener","startPress","customEv","connectedCallback","listener","listeners","eventName","eventNames","cb","passive","disconnectedCallback","group","boundOnClick","_firstChanged","_skipPropRequest","RippleHandlers","ripple","startHover","endHover","startFocus","endFocus","name","queryAsync","Number","tabIndex","isAriaSelectable","state","css","r","l","s","t","c","dt","o","values","keys","update","d","p","isArray","ut","h","v","m","y","x","k","w","u","n","f"],"mappings":"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"}