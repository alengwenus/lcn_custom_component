{"version":3,"file":"35.5215bbd4b6999a71.js","sources":["webpack://lcn-frontend/./homeassistant-frontend/src/common/config/is_component_loaded.ts","webpack://lcn-frontend/./homeassistant-frontend/src/common/decorators/storage.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-checkbox.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-dialog-header.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-dialog.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-fab.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-icon-button-arrow-prev.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-icon-button.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-md-menu.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-md-button-menu.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-md-menu-item.ts","webpack://lcn-frontend/./homeassistant-frontend/src/data/persistent_notification.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-menu-button.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-svg-icon.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-textfield.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-tooltip.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-outlined-field.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-outlined-text-field.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/search-input-outlined.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/chips/ha-assist-chip.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/chips/ha-filter-chip.ts","webpack://lcn-frontend/./homeassistant-frontend/src/common/util/throttle.ts","webpack://lcn-frontend/./homeassistant-frontend/src/common/decorators/restore-scroll.ts","webpack://lcn-frontend/./homeassistant-frontend/src/common/util/group-by.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/search-input.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/data-table/sort-filter.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/data-table/ha-data-table.ts","webpack://lcn-frontend/./homeassistant-frontend/src/resources/virtualizer.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/data-table/show-dialog-data-table-settings.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-md-divider.ts","webpack://lcn-frontend/./homeassistant-frontend/src/mixins/keyboard-shortcut-mixin.ts","webpack://lcn-frontend/./homeassistant-frontend/src/common/array/ensure-array.ts","webpack://lcn-frontend/./homeassistant-frontend/src/common/config/can_show_page.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-ripple.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-tab.ts","webpack://lcn-frontend/./homeassistant-frontend/src/layouts/hass-tabs-subpage.ts","webpack://lcn-frontend/./homeassistant-frontend/src/layouts/hass-tabs-subpage-data-table.ts","webpack://lcn-frontend/./homeassistant-frontend/src/resources/styles.ts","webpack://lcn-frontend/./homeassistant-frontend/src/util/brands-url.ts","webpack://lcn-frontend/./src/components/events.ts","webpack://lcn-frontend/./src/helpers/address_conversion.ts","webpack://lcn-frontend/./src/helpers/brand_logo.ts","webpack://lcn-frontend/./src/version.ts"],"sourcesContent":["import type { HomeAssistant } from \"../../types\";\n\n/** Return if a component is loaded. */\nexport const isComponentLoaded = (\n  hass: HomeAssistant,\n  component: string\n): boolean => hass && hass.config.components.includes(component);\n","import type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport type { ReactiveElement } from \"lit\";\n\ntype Callback = (oldValue: any, newValue: any) => void;\n\ntype ReactiveStorageElement = ReactiveElement & {\n  __unbsubLocalStorage: UnsubscribeFunc | undefined;\n  __initialized: boolean;\n};\n\nclass StorageClass {\n  constructor(store = window.localStorage) {\n    this.storage = store;\n    if (this.storage !== window.localStorage) {\n      // storage events only work for localStorage\n      return;\n    }\n    window.addEventListener(\"storage\", (ev: StorageEvent) => {\n      if (ev.key && this.hasKey(ev.key)) {\n        this._storage[ev.key] = ev.newValue\n          ? JSON.parse(ev.newValue)\n          : ev.newValue;\n        if (this._listeners[ev.key]) {\n          this._listeners[ev.key].forEach((listener) =>\n            listener(\n              ev.oldValue ? JSON.parse(ev.oldValue) : ev.oldValue,\n              this._storage[ev.key!]\n            )\n          );\n        }\n      }\n    });\n  }\n\n  public storage: globalThis.Storage;\n\n  private _storage: Record<string, any> = {};\n\n  private _listeners: Record<string, Callback[]> = {};\n\n  public addFromStorage(storageKey: any): void {\n    if (!this._storage[storageKey]) {\n      const data = this.storage.getItem(storageKey);\n      if (data) {\n        this._storage[storageKey] = JSON.parse(data);\n      }\n    }\n  }\n\n  public subscribeChanges(\n    storageKey: string,\n    callback: Callback\n  ): UnsubscribeFunc {\n    if (this._listeners[storageKey]) {\n      this._listeners[storageKey].push(callback);\n    } else {\n      this._listeners[storageKey] = [callback];\n    }\n    return () => {\n      this.unsubscribeChanges(storageKey, callback);\n    };\n  }\n\n  public unsubscribeChanges(storageKey: string, callback: Callback) {\n    if (!(storageKey in this._listeners)) {\n      return;\n    }\n    const index = this._listeners[storageKey].indexOf(callback);\n    if (index !== -1) {\n      this._listeners[storageKey].splice(index, 1);\n    }\n  }\n\n  public hasKey(storageKey: string): any {\n    return storageKey in this._storage;\n  }\n\n  public getValue(storageKey: string): any {\n    return this._storage[storageKey];\n  }\n\n  public setValue(storageKey: string, value: any): any {\n    const oldValue = this._storage[storageKey];\n    this._storage[storageKey] = value;\n    try {\n      if (value === undefined) {\n        this.storage.removeItem(storageKey);\n      } else {\n        this.storage.setItem(storageKey, JSON.stringify(value));\n      }\n    } catch (_err: any) {\n      // Safari in private mode doesn't allow localstorage\n    } finally {\n      if (this._listeners[storageKey]) {\n        this._listeners[storageKey].forEach((listener) =>\n          listener(oldValue, value)\n        );\n      }\n    }\n  }\n}\n\nconst storages: Record<string, StorageClass> = {};\n\nexport function storage(options: {\n  key?: string;\n  storage?: \"localStorage\" | \"sessionStorage\";\n  subscribe?: boolean;\n  state?: boolean;\n  serializer?: (value: any) => any;\n  deserializer?: (value: any) => any;\n}) {\n  return <ElemClass extends ReactiveElement>(\n    proto: ElemClass,\n    propertyKey: string\n  ) => {\n    if (typeof propertyKey === \"object\") {\n      throw new Error(\"This decorator does not support this compilation type.\");\n    }\n\n    const storageName = options.storage || \"localStorage\";\n\n    let storageInstance: StorageClass;\n    if (storageName && storageName in storages) {\n      storageInstance = storages[storageName];\n    } else {\n      storageInstance = new StorageClass(window[storageName]);\n      storages[storageName] = storageInstance;\n    }\n\n    const storageKey = options.key || String(propertyKey);\n\n    storageInstance.addFromStorage(storageKey);\n\n    const subscribeChanges =\n      options.subscribe !== false\n        ? (el: ReactiveElement): UnsubscribeFunc =>\n            storageInstance.subscribeChanges(\n              storageKey!,\n              (oldValue, _newValue) => {\n                el.requestUpdate(propertyKey, oldValue);\n              }\n            )\n        : undefined;\n\n    const getValue = (): any =>\n      storageInstance.hasKey(storageKey!)\n        ? options.deserializer\n          ? options.deserializer(storageInstance.getValue(storageKey!))\n          : storageInstance.getValue(storageKey!)\n        : undefined;\n\n    const setValue = (el: ReactiveElement, value: any) => {\n      let oldValue: unknown | undefined;\n      if (options.state) {\n        oldValue = getValue();\n      }\n      storageInstance.setValue(\n        storageKey!,\n        options.serializer ? options.serializer(value) : value\n      );\n      if (options.state) {\n        el.requestUpdate(propertyKey, oldValue);\n      }\n    };\n\n    // @ts-ignore\n    const performUpdate = proto.performUpdate;\n    // @ts-ignore\n    proto.performUpdate = function () {\n      (this as unknown as ReactiveStorageElement).__initialized = true;\n      performUpdate.call(this);\n    };\n\n    if (options.subscribe) {\n      const connectedCallback = proto.connectedCallback;\n      const disconnectedCallback = proto.disconnectedCallback;\n\n      proto.connectedCallback = function () {\n        connectedCallback.call(this);\n        const el = this as unknown as ReactiveStorageElement;\n        if (!el.__unbsubLocalStorage) {\n          el.__unbsubLocalStorage = subscribeChanges?.(this);\n        }\n      };\n      proto.disconnectedCallback = function () {\n        disconnectedCallback.call(this);\n        const el = this as unknown as ReactiveStorageElement;\n        el.__unbsubLocalStorage?.();\n        el.__unbsubLocalStorage = undefined;\n      };\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(proto, propertyKey);\n    let newDescriptor: PropertyDescriptor;\n    if (descriptor === undefined) {\n      newDescriptor = {\n        get(this: ReactiveStorageElement) {\n          return getValue();\n        },\n        set(this: ReactiveStorageElement, value) {\n          // Don't set the initial value if we have a value in localStorage\n          if (this.__initialized || getValue() === undefined) {\n            setValue(this, value);\n            this.requestUpdate(propertyKey, undefined);\n          }\n        },\n        configurable: true,\n        enumerable: true,\n      };\n    } else {\n      const oldSetter = descriptor.set;\n      newDescriptor = {\n        ...descriptor,\n        set(this: ReactiveStorageElement, value) {\n          // Don't set the initial value if we have a value in localStorage\n          if (this.__initialized || getValue() === undefined) {\n            setValue(this, value);\n            this.requestUpdate(propertyKey, undefined);\n          }\n          oldSetter?.call(this, value);\n        },\n      };\n    }\n    Object.defineProperty(proto, propertyKey, newDescriptor);\n  };\n}\n","import { CheckboxBase } from \"@material/mwc-checkbox/mwc-checkbox-base\";\nimport { styles } from \"@material/mwc-checkbox/mwc-checkbox.css\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-checkbox\")\nexport class HaCheckbox extends CheckboxBase {\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --mdc-theme-secondary: var(--primary-color);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-checkbox\": HaCheckbox;\n  }\n}\n","import { css, html, LitElement } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-dialog-header\")\nexport class HaDialogHeader extends LitElement {\n  protected render() {\n    return html`\n      <header class=\"header\">\n        <div class=\"header-bar\">\n          <section class=\"header-navigation-icon\">\n            <slot name=\"navigationIcon\"></slot>\n          </section>\n          <section class=\"header-content\">\n            <div class=\"header-title\">\n              <slot name=\"title\"></slot>\n            </div>\n            <div class=\"header-subtitle\">\n              <slot name=\"subtitle\"></slot>\n            </div>\n          </section>\n          <section class=\"header-action-items\">\n            <slot name=\"actionItems\"></slot>\n          </section>\n        </div>\n        <slot></slot>\n      </header>\n    `;\n  }\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        :host([show-border]) {\n          border-bottom: 1px solid\n            var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n        .header-bar {\n          display: flex;\n          flex-direction: row;\n          align-items: flex-start;\n          padding: 4px;\n          box-sizing: border-box;\n        }\n        .header-content {\n          flex: 1;\n          padding: 10px 4px;\n          min-width: 0;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n        .header-title {\n          font-size: var(--ha-font-size-xl);\n          line-height: var(--ha-line-height-condensed);\n          font-weight: var(--ha-font-weight-normal);\n        }\n        .header-subtitle {\n          font-size: var(--ha-font-size-m);\n          line-height: 20px;\n          color: var(--secondary-text-color);\n        }\n        @media all and (min-width: 450px) and (min-height: 500px) {\n          .header-bar {\n            padding: 12px;\n          }\n        }\n        .header-navigation-icon {\n          flex: none;\n          min-width: 8px;\n          height: 100%;\n          display: flex;\n          flex-direction: row;\n        }\n        .header-action-items {\n          flex: none;\n          min-width: 8px;\n          height: 100%;\n          display: flex;\n          flex-direction: row;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog-header\": HaDialogHeader;\n  }\n}\n","import { DialogBase } from \"@material/mwc-dialog/mwc-dialog-base\";\nimport { styles } from \"@material/mwc-dialog/mwc-dialog.css\";\nimport { mdiClose } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { FOCUS_TARGET } from \"../dialogs/make-dialog-manager\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\nconst SUPPRESS_DEFAULT_PRESS_SELECTOR = [\"button\", \"ha-list-item\"];\n\nexport const createCloseHeading = (\n  hass: HomeAssistant | undefined,\n  title: string | TemplateResult\n) => html`\n  <div class=\"header_title\">\n    <ha-icon-button\n      .label=${hass?.localize(\"ui.common.close\") ?? \"Close\"}\n      .path=${mdiClose}\n      dialogAction=\"close\"\n      class=\"header_button\"\n    ></ha-icon-button>\n    <span>${title}</span>\n  </div>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends DialogBase {\n  protected readonly [FOCUS_TARGET];\n\n  public scrollToPos(x: number, y: number) {\n    this.contentElement?.scrollTo(x, y);\n  }\n\n  protected renderHeading() {\n    return html`<slot name=\"heading\"> ${super.renderHeading()} </slot>`;\n  }\n\n  protected firstUpdated(): void {\n    super.firstUpdated();\n    this.suppressDefaultPressSelector = [\n      this.suppressDefaultPressSelector,\n      SUPPRESS_DEFAULT_PRESS_SELECTOR,\n    ].join(\", \");\n    this._updateScrolledAttribute();\n    this.contentElement?.addEventListener(\"scroll\", this._onScroll, {\n      passive: true,\n    });\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.contentElement.removeEventListener(\"scroll\", this._onScroll);\n  }\n\n  private _onScroll = () => {\n    this._updateScrolledAttribute();\n  };\n\n  private _updateScrolledAttribute() {\n    if (!this.contentElement) return;\n    this.toggleAttribute(\"scrolled\", this.contentElement.scrollTop !== 0);\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host([scrolled]) ::slotted(ha-dialog-header) {\n        border-bottom: 1px solid\n          var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n      }\n      .mdc-dialog {\n        --mdc-dialog-scroll-divider-color: var(\n          --dialog-scroll-divider-color,\n          var(--divider-color)\n        );\n        z-index: var(--dialog-z-index, 8);\n        -webkit-backdrop-filter: var(\n          --ha-dialog-scrim-backdrop-filter,\n          var(--dialog-backdrop-filter, none)\n        );\n        backdrop-filter: var(\n          --ha-dialog-scrim-backdrop-filter,\n          var(--dialog-backdrop-filter, none)\n        );\n        --mdc-dialog-box-shadow: var(--dialog-box-shadow, none);\n        --mdc-typography-headline6-font-weight: var(--ha-font-weight-normal);\n        --mdc-typography-headline6-font-size: 1.574rem;\n      }\n      .mdc-dialog__actions {\n        justify-content: var(--justify-action-buttons, flex-end);\n        padding: 12px 24px max(var(--safe-area-inset-bottom), 12px) 24px;\n      }\n      .mdc-dialog__actions span:nth-child(1) {\n        flex: var(--secondary-action-button-flex, unset);\n      }\n      .mdc-dialog__actions span:nth-child(2) {\n        flex: var(--primary-action-button-flex, unset);\n      }\n      .mdc-dialog__container {\n        align-items: var(--vertical-align-dialog, center);\n      }\n      .mdc-dialog__title {\n        padding: 24px 24px 0 24px;\n      }\n      .mdc-dialog__title:has(span) {\n        padding: 12px 12px 0;\n      }\n      .mdc-dialog__title::before {\n        content: unset;\n      }\n      .mdc-dialog .mdc-dialog__content {\n        position: var(--dialog-content-position, relative);\n        padding: var(--dialog-content-padding, 24px);\n      }\n      :host([hideactions]) .mdc-dialog .mdc-dialog__content {\n        padding-bottom: max(\n          var(--dialog-content-padding, 24px),\n          var(--safe-area-inset-bottom)\n        );\n      }\n      .mdc-dialog .mdc-dialog__surface {\n        position: var(--dialog-surface-position, relative);\n        top: var(--dialog-surface-top);\n        margin-top: var(--dialog-surface-margin-top);\n        min-height: var(--mdc-dialog-min-height, auto);\n        border-radius: var(--ha-dialog-border-radius, 28px);\n        -webkit-backdrop-filter: var(--ha-dialog-surface-backdrop-filter, none);\n        backdrop-filter: var(--ha-dialog-surface-backdrop-filter, none);\n        background: var(\n          --ha-dialog-surface-background,\n          var(--mdc-theme-surface, #fff)\n        );\n      }\n      :host([flexContent]) .mdc-dialog .mdc-dialog__content {\n        display: flex;\n        flex-direction: column;\n      }\n      .header_title {\n        display: flex;\n        align-items: center;\n        direction: var(--direction);\n      }\n      .header_title span {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: block;\n        padding-left: 4px;\n      }\n      .header_button {\n        text-decoration: none;\n        color: inherit;\n        inset-inline-start: initial;\n        inset-inline-end: -12px;\n        direction: var(--direction);\n      }\n      .dialog-actions {\n        inset-inline-start: initial !important;\n        inset-inline-end: 0px !important;\n        direction: var(--direction);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import { FabBase } from \"@material/mwc-fab/mwc-fab-base\";\nimport { styles } from \"@material/mwc-fab/mwc-fab.css\";\nimport { customElement } from \"lit/decorators\";\nimport { css } from \"lit\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\n\n@customElement(\"ha-fab\")\nexport class HaFab extends FabBase {\n  protected firstUpdated(changedProperties) {\n    super.firstUpdated(changedProperties);\n    this.style.setProperty(\"--mdc-theme-secondary\", \"var(--primary-color)\");\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host .mdc-fab--extended .mdc-fab__icon {\n        margin-inline-start: -8px;\n        margin-inline-end: 12px;\n        direction: var(--direction);\n      }\n      :disabled {\n        --mdc-theme-secondary: var(--disabled-text-color);\n        pointer-events: none;\n      }\n    `,\n    // safari workaround - must be explicit\n    mainWindow.document.dir === \"rtl\"\n      ? css`\n          :host .mdc-fab--extended .mdc-fab__icon {\n            direction: rtl;\n          }\n        `\n      : css``,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { mdiArrowLeft, mdiArrowRight } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-icon-button-arrow-prev\")\nexport class HaIconButtonArrowPrev extends LitElement {\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property() public label?: string;\n\n  @state() private _icon =\n    mainWindow.document.dir === \"rtl\" ? mdiArrowRight : mdiArrowLeft;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-icon-button\n        .disabled=${this.disabled}\n        .label=${this.label || this.hass?.localize(\"ui.common.back\") || \"Back\"}\n        .path=${this._icon}\n      ></ha-icon-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button-arrow-prev\": HaIconButtonArrowPrev;\n  }\n}\n","import \"@material/mwc-icon-button\";\nimport type { IconButton } from \"@material/mwc-icon-button\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-icon-button\")\nexport class HaIconButton extends LitElement {\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  // SVG icon path (if you need a non SVG icon instead, use the provided slot to pass an <ha-icon> in)\n  @property({ type: String }) path?: string;\n\n  // Label that is used for ARIA support and as tooltip\n  @property({ type: String }) label?: string;\n\n  // These should always be set as properties, not attributes,\n  // so that only the <button> element gets the attribute\n  @property({ type: String, attribute: \"aria-haspopup\" })\n  override ariaHasPopup!: IconButton[\"ariaHasPopup\"];\n\n  @property({ attribute: \"hide-title\", type: Boolean }) hideTitle = false;\n\n  @query(\"mwc-icon-button\", true) private _button?: IconButton;\n\n  public override focus() {\n    this._button?.focus();\n  }\n\n  static shadowRootOptions: ShadowRootInit = {\n    mode: \"open\",\n    delegatesFocus: true,\n  };\n\n  protected render(): TemplateResult {\n    return html`\n      <mwc-icon-button\n        aria-label=${ifDefined(this.label)}\n        title=${ifDefined(this.hideTitle ? undefined : this.label)}\n        aria-haspopup=${ifDefined(this.ariaHasPopup)}\n        .disabled=${this.disabled}\n      >\n        ${this.path\n          ? html`<ha-svg-icon .path=${this.path}></ha-svg-icon>`\n          : html`<slot></slot>`}\n      </mwc-icon-button>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      outline: none;\n    }\n    :host([disabled]) {\n      pointer-events: none;\n    }\n    mwc-icon-button {\n      --mdc-theme-on-primary: currentColor;\n      --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button\": HaIconButton;\n  }\n}\n","import { Menu } from \"@material/web/menu/internal/menu\";\nimport { styles } from \"@material/web/menu/internal/menu-styles\";\nimport type { CloseMenuEvent } from \"@material/web/menu/menu\";\nimport {\n  CloseReason,\n  KeydownCloseKey,\n} from \"@material/web/menu/internal/controllers/shared\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport type { HaMdMenuItem } from \"./ha-md-menu-item\";\n\n@customElement(\"ha-md-menu\")\nexport class HaMdMenu extends Menu {\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.addEventListener(\"close-menu\", this._handleCloseMenu);\n  }\n\n  private _handleCloseMenu(ev: CloseMenuEvent) {\n    if (\n      ev.detail.reason.kind === CloseReason.KEYDOWN &&\n      ev.detail.reason.key === KeydownCloseKey.ESCAPE\n    ) {\n      return;\n    }\n    (ev.detail.initiator as HaMdMenuItem).clickAction?.(ev.detail.initiator);\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --md-sys-color-surface-container: var(--card-background-color);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-md-menu\": HaMdMenu;\n  }\n\n  interface HTMLElementEventMap {\n    \"close-menu\": CloseMenuEvent;\n  }\n}\n","import type { Button } from \"@material/mwc-button\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { FOCUS_TARGET } from \"../dialogs/make-dialog-manager\";\nimport type { HaIconButton } from \"./ha-icon-button\";\nimport \"./ha-md-menu\";\nimport type { HaMdMenu } from \"./ha-md-menu\";\n\n@customElement(\"ha-md-button-menu\")\nexport class HaMdButtonMenu extends LitElement {\n  protected readonly [FOCUS_TARGET];\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property() public positioning?: \"fixed\" | \"absolute\" | \"popover\";\n\n  @property({ type: Boolean, attribute: \"has-overflow\" }) public hasOverflow =\n    false;\n\n  @query(\"ha-md-menu\", true) private _menu!: HaMdMenu;\n\n  public get items() {\n    return this._menu.items;\n  }\n\n  public override focus() {\n    if (this._menu.open) {\n      this._menu.focus();\n    } else {\n      this._triggerButton?.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\" @slotchange=${this._setTriggerAria}></slot>\n      </div>\n      <ha-md-menu\n        .positioning=${this.positioning}\n        .hasOverflow=${this.hasOverflow}\n        @opening=${this._handleOpening}\n        @closing=${this._handleClosing}\n      >\n        <slot></slot>\n      </ha-md-menu>\n    `;\n  }\n\n  private _handleOpening(): void {\n    fireEvent(this, \"opening\", undefined, { composed: false });\n  }\n\n  private _handleClosing(): void {\n    fireEvent(this, \"closing\", undefined, { composed: false });\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu.anchorElement = this;\n    if (this._menu.open) {\n      this._menu.close();\n    } else {\n      this._menu.show();\n    }\n  }\n\n  private get _triggerButton() {\n    return this.querySelector(\n      'ha-icon-button[slot=\"trigger\"], mwc-button[slot=\"trigger\"], ha-assist-chip[slot=\"trigger\"]'\n    ) as HaIconButton | Button | null;\n  }\n\n  private _setTriggerAria() {\n    if (this._triggerButton) {\n      this._triggerButton.ariaHasPopup = \"menu\";\n    }\n  }\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      position: relative;\n    }\n    ::slotted([disabled]) {\n      color: var(--disabled-text-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-md-button-menu\": HaMdButtonMenu;\n  }\n}\n\ndeclare global {\n  interface HASSDomEvents {\n    opening: undefined;\n    closing: undefined;\n  }\n}\n","import { MenuItemEl } from \"@material/web/menu/internal/menuitem/menu-item\";\nimport { styles } from \"@material/web/menu/internal/menuitem/menu-item-styles\";\nimport { css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-md-menu-item\")\nexport class HaMdMenuItem extends MenuItemEl {\n  @property({ attribute: false }) clickAction?: (item?: HTMLElement) => void;\n\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --ha-icon-display: block;\n        --md-sys-color-primary: var(--primary-text-color);\n        --md-sys-color-on-primary: var(--primary-text-color);\n        --md-sys-color-secondary: var(--secondary-text-color);\n        --md-sys-color-surface: var(--card-background-color);\n        --md-sys-color-on-surface: var(--primary-text-color);\n        --md-sys-color-on-surface-variant: var(--secondary-text-color);\n        --md-sys-color-secondary-container: rgba(\n          var(--rgb-primary-color),\n          0.15\n        );\n        --md-sys-color-on-secondary-container: var(--text-primary-color);\n        --mdc-icon-size: 16px;\n\n        --md-sys-color-on-primary-container: var(--primary-text-color);\n        --md-sys-color-on-secondary-container: var(--primary-text-color);\n        --md-menu-item-label-text-font: Roboto, sans-serif;\n      }\n      :host(.warning) {\n        --md-menu-item-label-text-color: var(--error-color);\n        --md-menu-item-leading-icon-color: var(--error-color);\n      }\n      ::slotted([slot=\"headline\"]) {\n        text-wrap: nowrap;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-md-menu-item\": HaMdMenuItem;\n  }\n}\n","import type {\n  Connection,\n  HassEntity,\n  UnsubscribeFunc,\n} from \"home-assistant-js-websocket\";\n\nexport interface PersitentNotificationEntity extends HassEntity {\n  notification_id?: string;\n  created_at?: string;\n  title?: string;\n  message?: string;\n}\n\nexport interface PersistentNotification {\n  created_at: string;\n  message: string;\n  notification_id: string;\n  title: string;\n  status: \"read\" | \"unread\";\n}\n\nexport type PersistentNotifications = Record<string, PersistentNotification>;\n\nexport interface PersistentNotificationMessage {\n  type: \"added\" | \"removed\" | \"current\" | \"updated\";\n  notifications: PersistentNotifications;\n}\n\nexport const subscribeNotifications = (\n  conn: Connection,\n  onChange: (notifications: PersistentNotification[]) => void\n): UnsubscribeFunc => {\n  const params = {\n    type: \"persistent_notification/subscribe\",\n  };\n  const stream = new NotificationStream();\n  const subscription = conn.subscribeMessage<PersistentNotificationMessage>(\n    (message) => onChange(stream.processMessage(message)),\n    params\n  );\n  return () => {\n    subscription.then((unsub) => unsub?.());\n  };\n};\n\nclass NotificationStream {\n  notifications: PersistentNotifications;\n\n  constructor() {\n    this.notifications = {};\n  }\n\n  processMessage(\n    streamMessage: PersistentNotificationMessage\n  ): PersistentNotification[] {\n    if (streamMessage.type === \"removed\") {\n      for (const notificationId of Object.keys(streamMessage.notifications)) {\n        delete this.notifications[notificationId];\n      }\n    } else {\n      this.notifications = {\n        ...this.notifications,\n        ...streamMessage.notifications,\n      };\n    }\n    return Object.values(this.notifications);\n  }\n}\n","import { mdiMenu } from \"@mdi/js\";\nimport type { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { subscribeNotifications } from \"../data/persistent_notification\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\n\n@customElement(\"ha-menu-button\")\nclass HaMenuButton extends LitElement {\n  @property({ type: Boolean }) public hassio = false;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _hasNotifications = false;\n\n  @state() private _show = false;\n\n  private _alwaysVisible = false;\n\n  private _attachNotifOnConnect = false;\n\n  private _unsubNotifications?: UnsubscribeFunc;\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this._attachNotifOnConnect) {\n      this._attachNotifOnConnect = false;\n      this._subscribeNotifications();\n    }\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubNotifications) {\n      this._attachNotifOnConnect = true;\n      this._unsubNotifications();\n      this._unsubNotifications = undefined;\n    }\n  }\n\n  protected render() {\n    if (!this._show) {\n      return nothing;\n    }\n    const hasNotifications =\n      this._hasNotifications &&\n      (this.narrow || this.hass.dockedSidebar === \"always_hidden\");\n    return html`\n      <ha-icon-button\n        .label=${this.hass.localize(\"ui.sidebar.sidebar_toggle\")}\n        .path=${mdiMenu}\n        @click=${this._toggleMenu}\n      ></ha-icon-button>\n      ${hasNotifications ? html`<div class=\"dot\"></div>` : \"\"}\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    if (!this.hassio) {\n      return;\n    }\n    // This component is used on Hass.io too, but Hass.io might run the UI\n    // on older frontends too, that don't have an always visible menu button\n    // in the sidebar.\n    this._alwaysVisible =\n      (Number((window.parent as any).frontendVersion) || 0) < 20190710;\n  }\n\n  protected willUpdate(changedProps) {\n    super.willUpdate(changedProps);\n\n    if (!changedProps.has(\"narrow\") && !changedProps.has(\"hass\")) {\n      return;\n    }\n\n    const oldHass = changedProps.has(\"hass\")\n      ? (changedProps.get(\"hass\") as HomeAssistant | undefined)\n      : this.hass;\n    const oldNarrow = changedProps.has(\"narrow\")\n      ? (changedProps.get(\"narrow\") as boolean | undefined)\n      : this.narrow;\n\n    const oldShowButton =\n      oldNarrow || oldHass?.dockedSidebar === \"always_hidden\";\n    const showButton =\n      this.narrow || this.hass.dockedSidebar === \"always_hidden\";\n\n    if (this.hasUpdated && oldShowButton === showButton) {\n      return;\n    }\n\n    this._show = showButton || this._alwaysVisible;\n\n    if (!showButton) {\n      if (this._unsubNotifications) {\n        this._unsubNotifications();\n        this._unsubNotifications = undefined;\n      }\n      return;\n    }\n\n    this._subscribeNotifications();\n  }\n\n  private _subscribeNotifications() {\n    if (this._unsubNotifications) {\n      throw new Error(\"Already subscribed\");\n    }\n    this._unsubNotifications = subscribeNotifications(\n      this.hass.connection,\n      (notifications) => {\n        this._hasNotifications = notifications.length > 0;\n      }\n    );\n  }\n\n  private _toggleMenu(): void {\n    fireEvent(this, \"hass-toggle-menu\");\n  }\n\n  static styles = css`\n    :host {\n      position: relative;\n    }\n    .dot {\n      pointer-events: none;\n      position: absolute;\n      background-color: var(--accent-color);\n      width: 12px;\n      height: 12px;\n      top: 9px;\n      right: 7px;\n      inset-inline-end: 7px;\n      inset-inline-start: initial;\n      border-radius: 50%;\n      border: 2px solid var(--app-header-background-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-menu-button\": HaMenuButton;\n  }\n}\n","import type { SVGTemplateResult } from \"lit\";\nimport { css, LitElement, nothing, svg } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-svg-icon\")\nexport class HaSvgIcon extends LitElement {\n  @property() public path?: string;\n\n  @property({ attribute: false }) public secondaryPath?: string;\n\n  @property({ attribute: false }) public viewBox?: string;\n\n  protected render(): SVGTemplateResult {\n    return svg`\n    <svg\n      viewBox=${this.viewBox || \"0 0 24 24\"}\n      preserveAspectRatio=\"xMidYMid meet\"\n      focusable=\"false\"\n      role=\"img\"\n      aria-hidden=\"true\"\n    >\n      <g>\n        ${\n          this.path\n            ? svg`<path class=\"primary-path\" d=${this.path}></path>`\n            : nothing\n        }\n        ${\n          this.secondaryPath\n            ? svg`<path class=\"secondary-path\" d=${this.secondaryPath}></path>`\n            : nothing\n        }\n      </g>\n    </svg>`;\n  }\n\n  static styles = css`\n    :host {\n      display: var(--ha-icon-display, inline-flex);\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      vertical-align: middle;\n      fill: var(--icon-primary-color, currentcolor);\n      width: var(--mdc-icon-size, 24px);\n      height: var(--mdc-icon-size, 24px);\n    }\n    svg {\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      display: block;\n    }\n    path.primary-path {\n      opacity: var(--icon-primary-opactity, 1);\n    }\n    path.secondary-path {\n      fill: var(--icon-secondary-color, currentcolor);\n      opacity: var(--icon-secondary-opactity, 0.5);\n    }\n  `;\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-svg-icon\": HaSvgIcon;\n  }\n}\n","import { TextFieldBase } from \"@material/mwc-textfield/mwc-textfield-base\";\nimport { styles } from \"@material/mwc-textfield/mwc-textfield.css\";\nimport type { TemplateResult, PropertyValues } from \"lit\";\nimport { html, css } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { mainWindow } from \"../common/dom/get_main_window\";\n\n@customElement(\"ha-textfield\")\nexport class HaTextField extends TextFieldBase {\n  @property({ type: Boolean }) public invalid?: boolean;\n\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n\n  // @ts-ignore\n  @property({ type: Boolean }) public icon = false;\n\n  // @ts-ignore\n  // eslint-disable-next-line lit/attribute-names\n  @property({ type: Boolean }) public iconTrailing = false;\n\n  @property() public autocomplete?: string;\n\n  @property() public autocorrect?: string;\n\n  @property({ attribute: \"input-spellcheck\" })\n  public inputSpellcheck?: string;\n\n  @query(\"input\") public formElement!: HTMLInputElement;\n\n  override updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (\n      changedProperties.has(\"invalid\") ||\n      changedProperties.has(\"errorMessage\")\n    ) {\n      this.setCustomValidity(\n        this.invalid\n          ? this.errorMessage || this.validationMessage || \"Invalid\"\n          : \"\"\n      );\n      if (\n        this.invalid ||\n        this.validateOnInitialRender ||\n        (changedProperties.has(\"invalid\") &&\n          changedProperties.get(\"invalid\") !== undefined)\n      ) {\n        // Only report validity if the field is invalid or the invalid state has changed from\n        // true to false to prevent setting empty required fields to invalid on first render\n        this.reportValidity();\n      }\n    }\n    if (changedProperties.has(\"autocomplete\")) {\n      if (this.autocomplete) {\n        this.formElement.setAttribute(\"autocomplete\", this.autocomplete);\n      } else {\n        this.formElement.removeAttribute(\"autocomplete\");\n      }\n    }\n    if (changedProperties.has(\"autocorrect\")) {\n      if (this.autocorrect) {\n        this.formElement.setAttribute(\"autocorrect\", this.autocorrect);\n      } else {\n        this.formElement.removeAttribute(\"autocorrect\");\n      }\n    }\n    if (changedProperties.has(\"inputSpellcheck\")) {\n      if (this.inputSpellcheck) {\n        this.formElement.setAttribute(\"spellcheck\", this.inputSpellcheck);\n      } else {\n        this.formElement.removeAttribute(\"spellcheck\");\n      }\n    }\n  }\n\n  protected override renderIcon(\n    _icon: string,\n    isTrailingIcon = false\n  ): TemplateResult {\n    const type = isTrailingIcon ? \"trailing\" : \"leading\";\n\n    return html`\n      <span\n        class=\"mdc-text-field__icon mdc-text-field__icon--${type}\"\n        tabindex=${isTrailingIcon ? 1 : -1}\n      >\n        <slot name=\"${type}Icon\"></slot>\n      </span>\n    `;\n  }\n\n  static override styles = [\n    styles,\n    css`\n      .mdc-text-field__input {\n        width: var(--ha-textfield-input-width, 100%);\n      }\n      .mdc-text-field:not(.mdc-text-field--with-leading-icon) {\n        padding: var(--text-field-padding, 0px 16px);\n      }\n      .mdc-text-field__affix--suffix {\n        padding-left: var(--text-field-suffix-padding-left, 12px);\n        padding-right: var(--text-field-suffix-padding-right, 0px);\n        padding-inline-start: var(--text-field-suffix-padding-left, 12px);\n        padding-inline-end: var(--text-field-suffix-padding-right, 0px);\n        direction: ltr;\n      }\n      .mdc-text-field--with-leading-icon {\n        padding-inline-start: var(--text-field-suffix-padding-left, 0px);\n        padding-inline-end: var(--text-field-suffix-padding-right, 16px);\n        direction: var(--direction);\n      }\n\n      .mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n        padding-left: var(--text-field-suffix-padding-left, 0px);\n        padding-right: var(--text-field-suffix-padding-right, 0px);\n        padding-inline-start: var(--text-field-suffix-padding-left, 0px);\n        padding-inline-end: var(--text-field-suffix-padding-right, 0px);\n      }\n      .mdc-text-field:not(.mdc-text-field--disabled)\n        .mdc-text-field__affix--suffix {\n        color: var(--secondary-text-color);\n      }\n\n      .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon {\n        color: var(--secondary-text-color);\n      }\n\n      .mdc-text-field__icon--leading {\n        margin-inline-start: 16px;\n        margin-inline-end: 8px;\n        direction: var(--direction);\n      }\n\n      .mdc-text-field__icon--trailing {\n        padding: var(--textfield-icon-trailing-padding, 12px);\n      }\n\n      .mdc-floating-label:not(.mdc-floating-label--float-above) {\n        max-width: calc(100% - 16px);\n      }\n\n      .mdc-floating-label--float-above {\n        max-width: calc((100% - 16px) / 0.75);\n        transition: none;\n      }\n\n      input {\n        text-align: var(--text-field-text-align, start);\n      }\n\n      input[type=\"color\"] {\n        height: 20px;\n      }\n\n      /* Edge, hide reveal password icon */\n      ::-ms-reveal {\n        display: none;\n      }\n\n      /* Chrome, Safari, Edge, Opera */\n      :host([no-spinner]) input::-webkit-outer-spin-button,\n      :host([no-spinner]) input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n\n      input[type=\"color\"]::-webkit-color-swatch-wrapper {\n        padding: 0;\n      }\n\n      /* Firefox */\n      :host([no-spinner]) input[type=\"number\"] {\n        -moz-appearance: textfield;\n      }\n\n      .mdc-text-field__ripple {\n        overflow: hidden;\n      }\n\n      .mdc-text-field {\n        overflow: var(--text-field-overflow);\n      }\n\n      .mdc-floating-label {\n        padding-inline-end: 16px;\n        padding-inline-start: initial;\n        inset-inline-start: 16px !important;\n        inset-inline-end: initial !important;\n        transform-origin: var(--float-start);\n        direction: var(--direction);\n        text-align: var(--float-start);\n        box-sizing: border-box;\n        text-overflow: ellipsis;\n      }\n\n      .mdc-text-field--with-leading-icon.mdc-text-field--filled\n        .mdc-floating-label {\n        max-width: calc(\n          100% - 48px - var(--text-field-suffix-padding-left, 0px)\n        );\n        inset-inline-start: calc(\n          48px + var(--text-field-suffix-padding-left, 0px)\n        ) !important;\n        inset-inline-end: initial !important;\n        direction: var(--direction);\n      }\n\n      .mdc-text-field__input[type=\"number\"] {\n        direction: var(--direction);\n      }\n      .mdc-text-field__affix--prefix {\n        padding-right: var(--text-field-prefix-padding-right, 2px);\n        padding-inline-end: var(--text-field-prefix-padding-right, 2px);\n        padding-inline-start: initial;\n      }\n\n      .mdc-text-field:not(.mdc-text-field--disabled)\n        .mdc-text-field__affix--prefix {\n        color: var(--mdc-text-field-label-ink-color);\n      }\n      #helper-text ha-markdown {\n        display: inline-block;\n      }\n    `,\n    // safari workaround - must be explicit\n    mainWindow.document.dir === \"rtl\"\n      ? css`\n          .mdc-text-field--with-leading-icon,\n          .mdc-text-field__icon--leading,\n          .mdc-floating-label,\n          .mdc-text-field--with-leading-icon.mdc-text-field--filled\n            .mdc-floating-label,\n          .mdc-text-field__input[type=\"number\"] {\n            direction: rtl;\n            --direction: rtl;\n          }\n        `\n      : css``,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-textfield\": HaTextField;\n  }\n}\n","import SlTooltip from \"@shoelace-style/shoelace/dist/components/tooltip/tooltip.component\";\nimport styles from \"@shoelace-style/shoelace/dist/components/tooltip/tooltip.styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { setDefaultAnimation } from \"@shoelace-style/shoelace/dist/utilities/animation-registry\";\n\nsetDefaultAnimation(\"tooltip.show\", {\n  keyframes: [{ opacity: 0 }, { opacity: 1 }],\n  options: { duration: 150, easing: \"ease\" },\n});\n\nsetDefaultAnimation(\"tooltip.hide\", {\n  keyframes: [{ opacity: 1 }, { opacity: 0 }],\n  options: { duration: 400, easing: \"ease\" },\n});\n\n@customElement(\"ha-tooltip\")\nexport class HaTooltip extends SlTooltip {\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --sl-tooltip-background-color: var(--secondary-background-color);\n        --sl-tooltip-color: var(--primary-text-color);\n        --sl-tooltip-font-family: var(\n          --ha-tooltip-font-family,\n          var(--ha-font-family-body)\n        );\n        --sl-tooltip-font-size: var(\n          --ha-tooltip-font-size,\n          var(--ha-font-size-s)\n        );\n        --sl-tooltip-font-weight: var(\n          --ha-tooltip-font-weight,\n          var(--ha-font-weight-normal)\n        );\n        --sl-tooltip-line-height: var(\n          --ha-tooltip-line-height,\n          var(--ha-line-height-condensed)\n        );\n        --sl-tooltip-padding: 8px;\n        --sl-tooltip-border-radius: var(--ha-tooltip-border-radius, 4px);\n        --sl-tooltip-arrow-size: var(--ha-tooltip-arrow-size, 8px);\n        --sl-z-index-tooltip: var(--ha-tooltip-z-index, 1000);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tooltip\": HaTooltip;\n  }\n}\n","import { OutlinedField } from \"@material/web/field/internal/outlined-field\";\nimport { styles } from \"@material/web/field/internal/outlined-styles\";\nimport { styles as sharedStyles } from \"@material/web/field/internal/shared-styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { literal } from \"lit/static-html\";\n\n@customElement(\"ha-outlined-field\")\nexport class HaOutlinedField extends OutlinedField {\n  protected readonly fieldTag = literal`ha-outlined-field`;\n\n  static override styles = [\n    sharedStyles,\n    styles,\n    css`\n      .container::before {\n        display: block;\n        content: \"\";\n        position: absolute;\n        inset: 0;\n        background-color: var(--ha-outlined-field-container-color, transparent);\n        opacity: var(--ha-outlined-field-container-opacity, 1);\n        border-start-start-radius: var(--_container-shape-start-start);\n        border-start-end-radius: var(--_container-shape-start-end);\n        border-end-start-radius: var(--_container-shape-end-start);\n        border-end-end-radius: var(--_container-shape-end-end);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-outlined-field\": HaOutlinedField;\n  }\n}\n","import { OutlinedTextField } from \"@material/web/textfield/internal/outlined-text-field\";\nimport { styles } from \"@material/web/textfield/internal/outlined-styles\";\nimport { styles as sharedStyles } from \"@material/web/textfield/internal/shared-styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { literal } from \"lit/static-html\";\nimport \"./ha-outlined-field\";\n\n@customElement(\"ha-outlined-text-field\")\nexport class HaOutlinedTextField extends OutlinedTextField {\n  protected readonly fieldTag = literal`ha-outlined-field`;\n\n  static override styles = [\n    sharedStyles,\n    styles,\n    css`\n      :host {\n        --md-sys-color-on-surface: var(--primary-text-color);\n        --md-sys-color-primary: var(--primary-text-color);\n        --md-outlined-text-field-input-text-color: var(--primary-text-color);\n        --md-sys-color-on-surface-variant: var(--secondary-text-color);\n        --md-outlined-field-outline-color: var(--outline-color);\n        --md-outlined-field-focus-outline-color: var(--primary-color);\n        --md-outlined-field-hover-outline-color: var(--outline-hover-color);\n      }\n      :host([dense]) {\n        --md-outlined-field-top-space: 5.5px;\n        --md-outlined-field-bottom-space: 5.5px;\n        --md-outlined-field-container-shape-start-start: 10px;\n        --md-outlined-field-container-shape-start-end: 10px;\n        --md-outlined-field-container-shape-end-end: 10px;\n        --md-outlined-field-container-shape-end-start: 10px;\n        --md-outlined-field-focus-outline-width: 1px;\n        --md-outlined-field-with-leading-content-leading-space: 8px;\n        --md-outlined-field-with-trailing-content-trailing-space: 8px;\n        --md-outlined-field-content-space: 8px;\n        --mdc-icon-size: var(--md-input-chip-icon-size, 18px);\n      }\n      .input {\n        font-family: var(--ha-font-family-body);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-outlined-text-field\": HaOutlinedTextField;\n  }\n}\n","import { mdiClose, mdiMagnify } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-icon-button\";\nimport \"./ha-outlined-text-field\";\nimport type { HaOutlinedTextField } from \"./ha-outlined-text-field\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"search-input-outlined\")\nclass SearchInputOutlined extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public filter?: string;\n\n  @property({ type: Boolean })\n  public suffix = false;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: String })\n  public label?: string;\n\n  @property({ type: String })\n  public placeholder?: string;\n\n  public focus() {\n    this._input?.focus();\n  }\n\n  @query(\"ha-outlined-text-field\", true) private _input!: HaOutlinedTextField;\n\n  protected render(): TemplateResult {\n    const placeholder =\n      this.placeholder || this.hass.localize(\"ui.common.search\");\n\n    return html`\n      <ha-outlined-text-field\n        .autofocus=${this.autofocus}\n        .aria-label=${this.label || this.hass.localize(\"ui.common.search\")}\n        .placeholder=${placeholder}\n        .value=${this.filter || \"\"}\n        icon\n        .iconTrailing=${this.filter || this.suffix}\n        @input=${this._filterInputChanged}\n        dense\n      >\n        <slot name=\"prefix\" slot=\"leading-icon\">\n          <ha-svg-icon\n            tabindex=\"-1\"\n            class=\"prefix\"\n            .path=${mdiMagnify}\n          ></ha-svg-icon>\n        </slot>\n        ${this.filter\n          ? html`<ha-icon-button\n              aria-label=\"Clear input\"\n              slot=\"trailing-icon\"\n              @click=${this._clearSearch}\n              .path=${mdiClose}\n            >\n            </ha-icon-button>`\n          : nothing}\n      </ha-outlined-text-field>\n    `;\n  }\n\n  private async _filterChanged(value: string) {\n    fireEvent(this, \"value-changed\", { value: String(value) });\n  }\n\n  private async _filterInputChanged(e) {\n    this._filterChanged(e.target.value);\n  }\n\n  private async _clearSearch() {\n    this._filterChanged(\"\");\n  }\n\n  static styles = css`\n    :host {\n      display: inline-flex;\n      /* For iOS */\n      z-index: 0;\n    }\n    ha-outlined-text-field {\n      display: block;\n      width: 100%;\n      --ha-outlined-field-container-color: var(--card-background-color);\n    }\n    ha-svg-icon,\n    ha-icon-button {\n      --mdc-icon-button-size: 24px;\n      height: var(--mdc-icon-button-size);\n      display: flex;\n      color: var(--primary-text-color);\n    }\n    ha-svg-icon {\n      outline: none;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"search-input-outlined\": SearchInputOutlined;\n  }\n}\n","import { AssistChip } from \"@material/web/chips/internal/assist-chip\";\nimport { styles } from \"@material/web/chips/internal/assist-styles\";\n\nimport { styles as sharedStyles } from \"@material/web/chips/internal/shared-styles\";\nimport { styles as elevatedStyles } from \"@material/web/chips/internal/elevated-styles\";\n\nimport { css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-assist-chip\")\n// @ts-ignore\nexport class HaAssistChip extends AssistChip {\n  @property({ type: Boolean, reflect: true }) filled = false;\n\n  @property({ type: Boolean }) active = false;\n\n  static override styles = [\n    sharedStyles,\n    elevatedStyles,\n    styles,\n    css`\n      :host {\n        --md-sys-color-primary: var(--primary-text-color);\n        --md-sys-color-on-surface: var(--primary-text-color);\n        --md-assist-chip-container-shape: var(\n          --ha-assist-chip-container-shape,\n          16px\n        );\n        --md-assist-chip-outline-color: var(--outline-color);\n        --md-assist-chip-label-text-weight: 400;\n      }\n      /** Material 3 doesn't have a filled chip, so we have to make our own **/\n      .filled {\n        display: flex;\n        pointer-events: none;\n        border-radius: inherit;\n        inset: 0;\n        position: absolute;\n        background-color: var(--ha-assist-chip-filled-container-color);\n      }\n      /** Set the size of mdc icons **/\n      ::slotted([slot=\"icon\"]),\n      ::slotted([slot=\"trailing-icon\"]) {\n        display: flex;\n        --mdc-icon-size: var(--md-input-chip-icon-size, 18px);\n        font-size: var(--_label-text-size) !important;\n      }\n\n      .trailing.icon ::slotted(*),\n      .trailing.icon svg {\n        margin-inline-end: unset;\n        margin-inline-start: var(--_icon-label-space);\n      }\n      ::before {\n        background: var(--ha-assist-chip-container-color, transparent);\n        opacity: var(--ha-assist-chip-container-opacity, 1);\n      }\n      :where(.active)::before {\n        background: var(--ha-assist-chip-active-container-color);\n        opacity: var(--ha-assist-chip-active-container-opacity);\n      }\n      .label {\n        font-family: var(--ha-font-family-body);\n      }\n    `,\n  ];\n\n  protected override renderOutline() {\n    if (this.filled) {\n      return html`<span class=\"filled\"></span>`;\n    }\n\n    return super.renderOutline();\n  }\n\n  protected override getContainerClasses() {\n    return {\n      ...super.getContainerClasses(),\n      active: this.active,\n    };\n  }\n\n  protected override renderPrimaryContent() {\n    return html`\n      <span class=\"leading icon\" aria-hidden=\"true\">\n        ${this.renderLeadingIcon()}\n      </span>\n      <span class=\"label\">${this.label}</span>\n      <span class=\"touch\"></span>\n      <span class=\"trailing leading icon\" aria-hidden=\"true\">\n        ${this.renderTrailingIcon()}\n      </span>\n    `;\n  }\n\n  protected renderTrailingIcon() {\n    return html`<slot name=\"trailing-icon\"></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-assist-chip\": HaAssistChip;\n  }\n}\n","import { FilterChip } from \"@material/web/chips/internal/filter-chip\";\nimport { styles } from \"@material/web/chips/internal/filter-styles\";\nimport { styles as selectableStyles } from \"@material/web/chips/internal/selectable-styles\";\nimport { styles as sharedStyles } from \"@material/web/chips/internal/shared-styles\";\nimport { styles as trailingIconStyles } from \"@material/web/chips/internal/trailing-icon-styles\";\nimport { styles as elevatedStyles } from \"@material/web/chips/internal/elevated-styles\";\nimport { css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-filter-chip\")\nexport class HaFilterChip extends FilterChip {\n  @property({ type: Boolean, reflect: true, attribute: \"no-leading-icon\" })\n  noLeadingIcon = false;\n\n  static override styles = [\n    sharedStyles,\n    elevatedStyles,\n    trailingIconStyles,\n    selectableStyles,\n    styles,\n    css`\n      :host {\n        --md-sys-color-primary: var(--primary-text-color);\n        --md-sys-color-on-surface: var(--primary-text-color);\n        --md-sys-color-on-surface-variant: var(--primary-text-color);\n        --md-sys-color-on-secondary-container: var(--primary-text-color);\n        --md-filter-chip-container-shape: 16px;\n        --md-filter-chip-outline-color: var(--outline-color);\n        --md-filter-chip-selected-container-color: rgba(\n          var(--rgb-primary-text-color),\n          0.15\n        );\n      }\n    `,\n  ];\n\n  protected renderLeadingIcon() {\n    if (this.noLeadingIcon) {\n      // eslint-disable-next-line lit/prefer-nothing\n      return html``;\n    }\n    return super.renderLeadingIcon();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-filter-chip\": HaFilterChip;\n  }\n}\n","// From: underscore.js https://github.com/jashkenas/underscore/blob/master/underscore.js\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `false for leading`. To disable execution on the trailing edge, ditto.\nexport const throttle = <T extends any[]>(\n  func: (...args: T) => void,\n  wait: number,\n  leading = true,\n  trailing = true\n) => {\n  let timeout: number | undefined;\n  let previous = 0;\n  const throttledFunc = (...args: T): void => {\n    const later = () => {\n      previous = leading === false ? 0 : Date.now();\n      timeout = undefined;\n      func(...args);\n    };\n    const now = Date.now();\n    if (!previous && leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      previous = now;\n      func(...args);\n    } else if (!timeout && trailing !== false) {\n      timeout = window.setTimeout(later, remaining);\n    }\n  };\n  throttledFunc.cancel = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n    previous = 0;\n  };\n  return throttledFunc;\n};\n","import type { ReactiveElement } from \"lit\";\nimport { throttle } from \"../util/throttle\";\n\nconst throttleReplaceState = throttle((value) => {\n  history.replaceState({ scrollPosition: value }, \"\");\n}, 300);\n\nexport function restoreScroll(selector: string) {\n  return <ElemClass extends ReactiveElement>(\n    proto: ElemClass,\n    propertyKey: string\n  ) => {\n    if (typeof propertyKey === \"object\") {\n      throw new Error(\"This decorator does not support this compilation type.\");\n    }\n\n    const connectedCallback = proto.connectedCallback;\n    proto.connectedCallback = function () {\n      connectedCallback.call(this);\n\n      const scrollPos = this[propertyKey];\n\n      if (scrollPos) {\n        this.updateComplete.then(() => {\n          const target = this.renderRoot.querySelector(selector);\n          if (!target) {\n            return;\n          }\n          setTimeout(() => {\n            target.scrollTop = scrollPos;\n          }, 0);\n        });\n      }\n    };\n\n    const descriptor = Object.getOwnPropertyDescriptor(proto, propertyKey);\n    let newDescriptor: PropertyDescriptor;\n    if (descriptor === undefined) {\n      newDescriptor = {\n        get(this: ReactiveElement) {\n          return (\n            this[`__${String(propertyKey)}`] || history.state?.scrollPosition\n          );\n        },\n        set(this: ReactiveElement, value) {\n          throttleReplaceState(value);\n          this[`__${String(propertyKey)}`] = value;\n        },\n        configurable: true,\n        enumerable: true,\n      };\n    } else {\n      const oldSetter = descriptor.set;\n      newDescriptor = {\n        ...descriptor,\n        set(this: ReactiveElement, value) {\n          throttleReplaceState(value);\n          this[`__${String(propertyKey)}`] = value;\n          oldSetter?.call(this, value);\n        },\n      };\n    }\n    Object.defineProperty(proto, propertyKey, newDescriptor);\n  };\n}\n","export const groupBy = <T>(\n  list: T[],\n  keySelector: (item: T) => string\n): Record<string, T[]> => {\n  const result = {};\n  for (const item of list) {\n    const key = keySelector(item);\n    if (key in result) {\n      result[key].push(item);\n    } else {\n      result[key] = [item];\n    }\n  }\n  return result;\n};\n","import { mdiClose, mdiMagnify } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport \"./ha-icon-button\";\nimport \"./ha-svg-icon\";\nimport \"./ha-textfield\";\nimport type { HaTextField } from \"./ha-textfield\";\nimport type { HomeAssistant } from \"../types\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"search-input\")\nclass SearchInput extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public filter?: string;\n\n  @property({ type: Boolean })\n  public suffix = false;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: Boolean }) public autofocus = false;\n\n  @property({ type: String })\n  public label?: string;\n\n  public focus() {\n    this._input?.focus();\n  }\n\n  @query(\"ha-textfield\", true) private _input!: HaTextField;\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-textfield\n        .autofocus=${this.autofocus}\n        .label=${this.label || this.hass.localize(\"ui.common.search\")}\n        .value=${this.filter || \"\"}\n        icon\n        .iconTrailing=${this.filter || this.suffix}\n        @input=${this._filterInputChanged}\n      >\n        <slot name=\"prefix\" slot=\"leadingIcon\">\n          <ha-svg-icon\n            tabindex=\"-1\"\n            class=\"prefix\"\n            .path=${mdiMagnify}\n          ></ha-svg-icon>\n        </slot>\n        <div class=\"trailing\" slot=\"trailingIcon\">\n          ${this.filter &&\n          html`\n            <ha-icon-button\n              @click=${this._clearSearch}\n              .label=${this.hass.localize(\"ui.common.clear\")}\n              .path=${mdiClose}\n              class=\"clear-button\"\n            ></ha-icon-button>\n          `}\n          <slot name=\"suffix\"></slot>\n        </div>\n      </ha-textfield>\n    `;\n  }\n\n  private async _filterChanged(value: string) {\n    fireEvent(this, \"value-changed\", { value: String(value) });\n  }\n\n  private async _filterInputChanged(e) {\n    this._filterChanged(e.target.value);\n  }\n\n  private async _clearSearch() {\n    this._filterChanged(\"\");\n  }\n\n  static styles = css`\n    :host {\n      display: inline-flex;\n    }\n    ha-svg-icon,\n    ha-icon-button {\n      color: var(--primary-text-color);\n    }\n    ha-svg-icon {\n      outline: none;\n    }\n    .clear-button {\n      --mdc-icon-size: 20px;\n    }\n    ha-textfield {\n      display: inherit;\n    }\n    .trailing {\n      display: flex;\n      align-items: center;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"search-input\": SearchInput;\n  }\n}\n","import type { Remote } from \"comlink\";\nimport { wrap } from \"comlink\";\nimport type { Api } from \"./sort-filter-worker\";\n\ntype FilterDataType = Api[\"filterData\"];\ntype FilterDataParamTypes = Parameters<FilterDataType>;\n\ntype SortDataType = Api[\"sortData\"];\ntype SortDataParamTypes = Parameters<SortDataType>;\n\nlet worker: Remote<Api> | undefined;\n\nconst getWorker = () => {\n  if (!worker) {\n    worker = wrap(\n      new Worker(\n        /* webpackChunkName: \"sort-filter-worker\" */\n        new URL(\"./sort-filter-worker\", import.meta.url)\n      )\n    );\n  }\n  return worker;\n};\n\nexport const filterData = (\n  data: FilterDataParamTypes[0],\n  columns: FilterDataParamTypes[1],\n  filter: FilterDataParamTypes[2]\n): Promise<ReturnType<FilterDataType>> =>\n  getWorker().filterData(data, columns, filter);\n\nexport const sortData = (\n  data: SortDataParamTypes[0],\n  columns: SortDataParamTypes[1],\n  direction: SortDataParamTypes[2],\n  sortColumn: SortDataParamTypes[3],\n  language?: SortDataParamTypes[4]\n): Promise<ReturnType<SortDataType>> =>\n  getWorker().sortData(data, columns, direction, sortColumn, language);\n","import { mdiArrowDown, mdiArrowUp, mdiChevronUp } from \"@mdi/js\";\nimport deepClone from \"deep-clone-simple\";\nimport type { CSSResultGroup, PropertyValues, TemplateResult } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport {\n  customElement,\n  eventOptions,\n  property,\n  query,\n  state,\n} from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport memoizeOne from \"memoize-one\";\nimport { restoreScroll } from \"../../common/decorators/restore-scroll\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { stringCompare } from \"../../common/string/compare\";\nimport { debounce } from \"../../common/util/debounce\";\nimport { groupBy } from \"../../common/util/group-by\";\nimport { haStyleScrollbar } from \"../../resources/styles\";\nimport { loadVirtualizer } from \"../../resources/virtualizer\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../ha-checkbox\";\nimport type { HaCheckbox } from \"../ha-checkbox\";\nimport \"../ha-svg-icon\";\nimport \"../search-input\";\nimport { filterData, sortData } from \"./sort-filter\";\nimport type { LocalizeFunc } from \"../../common/translations/localize\";\nimport { nextRender } from \"../../common/util/render-status\";\n\nexport interface RowClickedEvent {\n  id: string;\n}\n\nexport interface SelectionChangedEvent {\n  value: string[];\n}\n\nexport interface CollapsedChangedEvent {\n  value: string[];\n}\n\nexport interface SortingChangedEvent {\n  column: string;\n  direction: SortingDirection;\n}\n\nexport type SortingDirection = \"desc\" | \"asc\" | null;\n\nexport type DataTableColumnContainer<T = any> = Record<\n  string,\n  DataTableColumnData<T>\n>;\n\nexport interface DataTableSortColumnData {\n  sortable?: boolean;\n  filterable?: boolean;\n  filterKey?: string;\n  valueColumn?: string;\n  direction?: SortingDirection;\n  groupable?: boolean;\n  moveable?: boolean;\n  hideable?: boolean;\n  defaultHidden?: boolean;\n  showNarrow?: boolean;\n}\n\nexport interface DataTableColumnData<T = any> extends DataTableSortColumnData {\n  main?: boolean;\n  title: TemplateResult | string;\n  label?: TemplateResult | string;\n  type?:\n    | \"numeric\"\n    | \"icon\"\n    | \"icon-button\"\n    | \"overflow\"\n    | \"overflow-menu\"\n    | \"flex\";\n  template?: (row: T) => TemplateResult | string | typeof nothing;\n  extraTemplate?: (row: T) => TemplateResult | string | typeof nothing;\n  minWidth?: string;\n  maxWidth?: string;\n  flex?: number;\n  forceLTR?: boolean;\n  hidden?: boolean;\n}\n\nexport type ClonedDataTableColumnData = Omit<DataTableColumnData, \"title\"> & {\n  title?: TemplateResult | string;\n};\n\nexport interface DataTableRowData {\n  [key: string]: any;\n  selectable?: boolean;\n}\n\nexport type SortableColumnContainer = Record<string, ClonedDataTableColumnData>;\n\nconst UNDEFINED_GROUP_KEY = \"zzzzz_undefined\";\n\n@customElement(\"ha-data-table\")\nexport class HaDataTable extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public localizeFunc?: LocalizeFunc;\n\n  @property({ type: Boolean }) public narrow = false;\n\n  @property({ type: Object }) public columns: DataTableColumnContainer = {};\n\n  @property({ type: Array }) public data: DataTableRowData[] = [];\n\n  @property({ type: Boolean }) public selectable = false;\n\n  @property({ type: Boolean }) public clickable = false;\n\n  @property({ attribute: \"has-fab\", type: Boolean }) public hasFab = false;\n\n  /**\n   * Add an extra row at the bottom of the data table\n   * @type {TemplateResult}\n   */\n  @property({ attribute: false }) public appendRow?;\n\n  @property({ type: Boolean, attribute: \"auto-height\" })\n  public autoHeight = false;\n\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: String }) public id = \"id\";\n\n  @property({ attribute: false, type: String }) public noDataText?: string;\n\n  @property({ attribute: false, type: String }) public searchLabel?: string;\n\n  @property({ type: Boolean, attribute: \"no-label-float\" })\n  public noLabelFloat? = false;\n\n  @property({ type: String }) public filter = \"\";\n\n  @property({ attribute: false }) public groupColumn?: string;\n\n  @property({ attribute: false }) public groupOrder?: string[];\n\n  @property({ attribute: false }) public sortColumn?: string;\n\n  @property({ attribute: false }) public sortDirection: SortingDirection = null;\n\n  @property({ attribute: false }) public initialCollapsedGroups?: string[];\n\n  @property({ attribute: false }) public hiddenColumns?: string[];\n\n  @property({ attribute: false }) public columnOrder?: string[];\n\n  @state() private _filterable = false;\n\n  @state() private _filter = \"\";\n\n  @state() private _filteredData: DataTableRowData[] = [];\n\n  @state() private _headerHeight = 0;\n\n  @query(\"slot[name='header']\") private _header!: HTMLSlotElement;\n\n  @state() private _collapsedGroups: string[] = [];\n\n  @state() private _lastSelectedRowId: string | null = null;\n\n  private _checkableRowsCount?: number;\n\n  private _checkedRows: string[] = [];\n\n  private _sortColumns: SortableColumnContainer = {};\n\n  private _curRequest = 0;\n\n  private _lastUpdate = 0;\n\n  // @ts-ignore\n  @restoreScroll(\".scroller\") private _savedScrollPos?: number;\n\n  private _debounceSearch = debounce(\n    (value: string) => {\n      this._filter = value;\n    },\n    100,\n    false\n  );\n\n  public clearSelection(): void {\n    this._checkedRows = [];\n    this._lastSelectedRowId = null;\n    this._checkedRowsChanged();\n  }\n\n  public selectAll(): void {\n    this._checkedRows = this._filteredData\n      .filter((data) => data.selectable !== false)\n      .map((data) => data[this.id]);\n    this._lastSelectedRowId = null;\n    this._checkedRowsChanged();\n  }\n\n  public select(ids: string[], clear?: boolean): void {\n    if (clear) {\n      this._checkedRows = [];\n    }\n    ids.forEach((id) => {\n      const row = this._filteredData.find((data) => data[this.id] === id);\n      if (row?.selectable !== false && !this._checkedRows.includes(id)) {\n        this._checkedRows.push(id);\n      }\n    });\n    this._lastSelectedRowId = null;\n    this._checkedRowsChanged();\n  }\n\n  public unselect(ids: string[]): void {\n    ids.forEach((id) => {\n      const index = this._checkedRows.indexOf(id);\n      if (index > -1) {\n        this._checkedRows.splice(index, 1);\n      }\n    });\n    this._lastSelectedRowId = null;\n    this._checkedRowsChanged();\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (this._filteredData.length) {\n      // Force update of location of rows\n      this._filteredData = [...this._filteredData];\n    }\n  }\n\n  protected firstUpdated() {\n    this.updateComplete.then(() => this._calcTableHeight());\n  }\n\n  protected updated() {\n    const header = this.renderRoot.querySelector(\".mdc-data-table__header-row\");\n    if (!header) {\n      return;\n    }\n    if (header.scrollWidth > header.clientWidth) {\n      this.style.setProperty(\"--table-row-width\", `${header.scrollWidth}px`);\n    } else {\n      this.style.removeProperty(\"--table-row-width\");\n    }\n  }\n\n  public willUpdate(properties: PropertyValues) {\n    super.willUpdate(properties);\n\n    if (!this.hasUpdated) {\n      loadVirtualizer();\n    }\n\n    if (properties.has(\"columns\")) {\n      this._filterable = Object.values(this.columns).some(\n        (column) => column.filterable\n      );\n\n      if (!this.sortColumn) {\n        for (const columnId in this.columns) {\n          if (this.columns[columnId].direction) {\n            this.sortDirection = this.columns[columnId].direction!;\n            this.sortColumn = columnId;\n            this._lastSelectedRowId = null;\n\n            fireEvent(this, \"sorting-changed\", {\n              column: columnId,\n              direction: this.sortDirection,\n            });\n\n            break;\n          }\n        }\n      }\n\n      const clonedColumns: DataTableColumnContainer = deepClone(this.columns);\n      Object.values(clonedColumns).forEach(\n        (column: ClonedDataTableColumnData) => {\n          delete column.title;\n          delete column.template;\n          delete column.extraTemplate;\n        }\n      );\n\n      this._sortColumns = clonedColumns;\n    }\n\n    if (properties.has(\"filter\")) {\n      this._debounceSearch(this.filter);\n      this._lastSelectedRowId = null;\n    }\n\n    if (properties.has(\"data\")) {\n      this._checkableRowsCount = this.data.filter(\n        (row) => row.selectable !== false\n      ).length;\n    }\n\n    if (!this.hasUpdated && this.initialCollapsedGroups) {\n      this._collapsedGroups = this.initialCollapsedGroups;\n      this._lastSelectedRowId = null;\n      fireEvent(this, \"collapsed-changed\", { value: this._collapsedGroups });\n    } else if (properties.has(\"groupColumn\")) {\n      this._collapsedGroups = [];\n      this._lastSelectedRowId = null;\n      fireEvent(this, \"collapsed-changed\", { value: this._collapsedGroups });\n    }\n\n    if (\n      properties.has(\"data\") ||\n      properties.has(\"columns\") ||\n      properties.has(\"_filter\") ||\n      properties.has(\"sortColumn\") ||\n      properties.has(\"sortDirection\")\n    ) {\n      this._sortFilterData();\n    }\n\n    if (\n      properties.has(\"_filter\") ||\n      properties.has(\"sortColumn\") ||\n      properties.has(\"sortDirection\")\n    ) {\n      this._lastSelectedRowId = null;\n    }\n\n    if (properties.has(\"selectable\") || properties.has(\"hiddenColumns\")) {\n      this._filteredData = [...this._filteredData];\n    }\n  }\n\n  private _sortedColumns = memoizeOne(\n    (columns: DataTableColumnContainer, columnOrder?: string[]) => {\n      if (!columnOrder || !columnOrder.length) {\n        return columns;\n      }\n\n      return Object.keys(columns)\n        .sort((a, b) => {\n          const orderA = columnOrder!.indexOf(a);\n          const orderB = columnOrder!.indexOf(b);\n          if (orderA !== orderB) {\n            if (orderA === -1) {\n              return 1;\n            }\n            if (orderB === -1) {\n              return -1;\n            }\n          }\n          return orderA - orderB;\n        })\n        .reduce((obj, key) => {\n          obj[key] = columns[key];\n          return obj;\n        }, {}) as DataTableColumnContainer;\n    }\n  );\n\n  protected render() {\n    const localize = this.localizeFunc || this.hass.localize;\n\n    const columns = this._sortedColumns(this.columns, this.columnOrder);\n\n    const renderRow = (row: DataTableRowData, index: number) =>\n      this._renderRow(columns, this.narrow, row, index);\n\n    return html`\n      <div class=\"mdc-data-table\">\n        <slot name=\"header\" @slotchange=${this._calcTableHeight}>\n          ${this._filterable\n            ? html`\n                <div class=\"table-header\">\n                  <search-input\n                    .hass=${this.hass}\n                    @value-changed=${this._handleSearchChange}\n                    .label=${this.searchLabel}\n                    .noLabelFloat=${this.noLabelFloat}\n                  ></search-input>\n                </div>\n              `\n            : \"\"}\n        </slot>\n        <div\n          class=\"mdc-data-table__table ${classMap({\n            \"auto-height\": this.autoHeight,\n          })}\"\n          role=\"table\"\n          aria-rowcount=${this._filteredData.length + 1}\n          style=${styleMap({\n            height: this.autoHeight\n              ? `${(this._filteredData.length || 1) * 53 + 53}px`\n              : `calc(100% - ${this._headerHeight}px)`,\n          })}\n        >\n          <div\n            class=\"mdc-data-table__header-row\"\n            role=\"row\"\n            aria-rowindex=\"1\"\n            @scroll=${this._scrollContent}\n          >\n            <slot name=\"header-row\">\n              ${this.selectable\n                ? html`\n                    <div\n                      class=\"mdc-data-table__header-cell mdc-data-table__header-cell--checkbox\"\n                      role=\"columnheader\"\n                    >\n                      <ha-checkbox\n                        class=\"mdc-data-table__row-checkbox\"\n                        @change=${this._handleHeaderRowCheckboxClick}\n                        .indeterminate=${this._checkedRows.length &&\n                        this._checkedRows.length !== this._checkableRowsCount}\n                        .checked=${this._checkedRows.length &&\n                        this._checkedRows.length === this._checkableRowsCount}\n                      >\n                      </ha-checkbox>\n                    </div>\n                  `\n                : \"\"}\n              ${Object.entries(columns).map(([key, column]) => {\n                if (\n                  column.hidden ||\n                  (this.columnOrder && this.columnOrder.includes(key)\n                    ? (this.hiddenColumns?.includes(key) ??\n                      column.defaultHidden)\n                    : column.defaultHidden)\n                ) {\n                  return nothing;\n                }\n                const sorted = key === this.sortColumn;\n                const classes = {\n                  \"mdc-data-table__header-cell--numeric\":\n                    column.type === \"numeric\",\n                  \"mdc-data-table__header-cell--icon\": column.type === \"icon\",\n                  \"mdc-data-table__header-cell--icon-button\":\n                    column.type === \"icon-button\",\n                  \"mdc-data-table__header-cell--overflow-menu\":\n                    column.type === \"overflow-menu\",\n                  \"mdc-data-table__header-cell--overflow\":\n                    column.type === \"overflow\",\n                  sortable: Boolean(column.sortable),\n                  \"not-sorted\": Boolean(column.sortable && !sorted),\n                };\n                return html`\n                  <div\n                    aria-label=${ifDefined(column.label)}\n                    class=\"mdc-data-table__header-cell ${classMap(classes)}\"\n                    style=${styleMap({\n                      minWidth: column.minWidth,\n                      maxWidth: column.maxWidth,\n                      flex: column.flex || 1,\n                    })}\n                    role=\"columnheader\"\n                    aria-sort=${ifDefined(\n                      sorted\n                        ? this.sortDirection === \"desc\"\n                          ? \"descending\"\n                          : \"ascending\"\n                        : undefined\n                    )}\n                    @click=${this._handleHeaderClick}\n                    .columnId=${key}\n                    title=${ifDefined(column.title)}\n                  >\n                    ${column.sortable\n                      ? html`\n                          <ha-svg-icon\n                            .path=${sorted && this.sortDirection === \"desc\"\n                              ? mdiArrowDown\n                              : mdiArrowUp}\n                          ></ha-svg-icon>\n                        `\n                      : \"\"}\n                    <span>${column.title}</span>\n                  </div>\n                `;\n              })}\n            </slot>\n          </div>\n          ${!this._filteredData.length\n            ? html`\n                <div class=\"mdc-data-table__content\">\n                  <div class=\"mdc-data-table__row\" role=\"row\">\n                    <div class=\"mdc-data-table__cell grows center\" role=\"cell\">\n                      ${this.noDataText ||\n                      localize(\"ui.components.data-table.no-data\")}\n                    </div>\n                  </div>\n                </div>\n              `\n            : html`\n                <lit-virtualizer\n                  scroller\n                  class=\"mdc-data-table__content scroller ha-scrollbar\"\n                  @scroll=${this._saveScrollPos}\n                  .items=${this._groupData(\n                    this._filteredData,\n                    localize,\n                    this.appendRow,\n                    this.hasFab,\n                    this.groupColumn,\n                    this.groupOrder,\n                    this._collapsedGroups\n                  )}\n                  .keyFunction=${this._keyFunction}\n                  .renderItem=${renderRow}\n                ></lit-virtualizer>\n              `}\n        </div>\n      </div>\n    `;\n  }\n\n  private _keyFunction = (row: DataTableRowData) => row?.[this.id] || row;\n\n  private _renderRow = (\n    columns: DataTableColumnContainer,\n    narrow: boolean,\n    row: DataTableRowData,\n    index: number\n  ) => {\n    // not sure how this happens...\n    if (!row) {\n      return nothing;\n    }\n    if (row.append) {\n      return html`<div class=\"mdc-data-table__row\">${row.content}</div>`;\n    }\n    if (row.empty) {\n      return html`<div class=\"mdc-data-table__row empty-row\"></div>`;\n    }\n    return html`\n      <div\n        aria-rowindex=${index + 2}\n        role=\"row\"\n        .rowId=${row[this.id]}\n        @click=${this._handleRowClick}\n        class=\"mdc-data-table__row ${classMap({\n          \"mdc-data-table__row--selected\": this._checkedRows.includes(\n            String(row[this.id])\n          ),\n          clickable: this.clickable,\n        })}\"\n        aria-selected=${ifDefined(\n          this._checkedRows.includes(String(row[this.id])) ? true : undefined\n        )}\n        .selectable=${row.selectable !== false}\n      >\n        ${this.selectable\n          ? html`\n              <div\n                class=\"mdc-data-table__cell mdc-data-table__cell--checkbox\"\n                role=\"cell\"\n              >\n                <ha-checkbox\n                  class=\"mdc-data-table__row-checkbox\"\n                  @click=${this._handleRowCheckboxClicked}\n                  .rowId=${row[this.id]}\n                  .disabled=${row.selectable === false}\n                  .checked=${this._checkedRows.includes(String(row[this.id]))}\n                >\n                </ha-checkbox>\n              </div>\n            `\n          : \"\"}\n        ${Object.entries(columns).map(([key, column]) => {\n          if (\n            (narrow && !column.main && !column.showNarrow) ||\n            column.hidden ||\n            (this.columnOrder && this.columnOrder.includes(key)\n              ? (this.hiddenColumns?.includes(key) ?? column.defaultHidden)\n              : column.defaultHidden)\n          ) {\n            return nothing;\n          }\n          return html`\n            <div\n              @mouseover=${this._setTitle}\n              @focus=${this._setTitle}\n              role=${column.main ? \"rowheader\" : \"cell\"}\n              class=\"mdc-data-table__cell ${classMap({\n                \"mdc-data-table__cell--flex\": column.type === \"flex\",\n                \"mdc-data-table__cell--numeric\": column.type === \"numeric\",\n                \"mdc-data-table__cell--icon\": column.type === \"icon\",\n                \"mdc-data-table__cell--icon-button\":\n                  column.type === \"icon-button\",\n                \"mdc-data-table__cell--overflow-menu\":\n                  column.type === \"overflow-menu\",\n                \"mdc-data-table__cell--overflow\": column.type === \"overflow\",\n                forceLTR: Boolean(column.forceLTR),\n              })}\"\n              style=${styleMap({\n                minWidth: column.minWidth,\n                maxWidth: column.maxWidth,\n                flex: column.flex || 1,\n              })}\n            >\n              ${column.template\n                ? column.template(row)\n                : narrow && column.main\n                  ? html`<div class=\"primary\">${row[key]}</div>\n                      <div class=\"secondary\">\n                        ${Object.entries(columns)\n                          .filter(\n                            ([key2, column2]) =>\n                              !column2.hidden &&\n                              !column2.main &&\n                              !column2.showNarrow &&\n                              !(this.columnOrder &&\n                              this.columnOrder.includes(key2)\n                                ? (this.hiddenColumns?.includes(key2) ??\n                                  column2.defaultHidden)\n                                : column2.defaultHidden)\n                          )\n                          .map(\n                            ([key2, column2], i) =>\n                              html`${i !== 0\n                                ? \" · \"\n                                : nothing}${column2.template\n                                ? column2.template(row)\n                                : row[key2]}`\n                          )}\n                      </div>\n                      ${column.extraTemplate\n                        ? column.extraTemplate(row)\n                        : nothing}`\n                  : html`${row[key]}${column.extraTemplate\n                      ? column.extraTemplate(row)\n                      : nothing}`}\n            </div>\n          `;\n        })}\n      </div>\n    `;\n  };\n\n  private async _sortFilterData() {\n    const startTime = new Date().getTime();\n    const timeBetweenUpdate = startTime - this._lastUpdate;\n    const timeBetweenRequest = startTime - this._curRequest;\n    this._curRequest = startTime;\n\n    const forceUpdate =\n      !this._lastUpdate ||\n      (timeBetweenUpdate > 500 && timeBetweenRequest < 500);\n\n    let filteredData = this.data;\n    if (this._filter) {\n      filteredData = await this._memFilterData(\n        this.data,\n        this._sortColumns,\n        this._filter.trim()\n      );\n    }\n\n    if (!forceUpdate && this._curRequest !== startTime) {\n      return;\n    }\n\n    const prom =\n      this.sortColumn && this._sortColumns[this.sortColumn]\n        ? sortData(\n            filteredData,\n            this._sortColumns[this.sortColumn],\n            this.sortDirection,\n            this.sortColumn,\n            this.hass.locale.language\n          )\n        : filteredData;\n\n    const [data] = await Promise.all([prom, nextRender]);\n\n    const curTime = new Date().getTime();\n    const elapsed = curTime - startTime;\n\n    if (elapsed < 100) {\n      await new Promise((resolve) => {\n        setTimeout(resolve, 100 - elapsed);\n      });\n    }\n\n    if (!forceUpdate && this._curRequest !== startTime) {\n      return;\n    }\n\n    this._lastUpdate = startTime;\n    this._filteredData = data;\n  }\n\n  private _groupData = memoizeOne(\n    (\n      data: DataTableRowData[],\n      localize: LocalizeFunc,\n      appendRow,\n      hasFab: boolean,\n      groupColumn: string | undefined,\n      groupOrder: string[] | undefined,\n      collapsedGroups: string[]\n    ) => {\n      if (appendRow || hasFab || groupColumn) {\n        let items = [...data];\n\n        if (groupColumn) {\n          const grouped = groupBy(items, (item) => item[groupColumn]);\n          if (grouped.undefined) {\n            // make sure ungrouped items are at the bottom\n            grouped[UNDEFINED_GROUP_KEY] = grouped.undefined;\n            delete grouped.undefined;\n          }\n          const sorted: Record<string, DataTableRowData[]> = Object.keys(\n            grouped\n          )\n            .sort((a, b) => {\n              const orderA = groupOrder?.indexOf(a) ?? -1;\n              const orderB = groupOrder?.indexOf(b) ?? -1;\n              if (orderA !== orderB) {\n                if (orderA === -1) {\n                  return 1;\n                }\n                if (orderB === -1) {\n                  return -1;\n                }\n                return orderA - orderB;\n              }\n              return stringCompare(\n                [\"\", \"-\", \"—\"].includes(a) ? \"zzz\" : a,\n                [\"\", \"-\", \"—\"].includes(b) ? \"zzz\" : b,\n                this.hass.locale.language\n              );\n            })\n            .reduce((obj, key) => {\n              obj[key] = grouped[key];\n              return obj;\n            }, {});\n          const groupedItems: DataTableRowData[] = [];\n          Object.entries(sorted).forEach(([groupName, rows]) => {\n            const collapsed = collapsedGroups.includes(groupName);\n            groupedItems.push({\n              append: true,\n              selectable: false,\n              content: html`<div\n                class=\"mdc-data-table__cell group-header\"\n                role=\"cell\"\n                .group=${groupName}\n                @click=${this._collapseGroup}\n              >\n                <ha-icon-button\n                  .path=${mdiChevronUp}\n                  .label=${this.hass.localize(\n                    `ui.components.data-table.${collapsed ? \"expand\" : \"collapse\"}`\n                  )}\n                  class=${collapsed ? \"collapsed\" : \"\"}\n                >\n                </ha-icon-button>\n                ${groupName === UNDEFINED_GROUP_KEY\n                  ? localize(\"ui.components.data-table.ungrouped\")\n                  : groupName || \"\"}\n              </div>`,\n            });\n            if (!collapsedGroups.includes(groupName)) {\n              groupedItems.push(...rows);\n            }\n          });\n          items = groupedItems;\n        }\n\n        if (appendRow) {\n          items.push({ append: true, selectable: false, content: appendRow });\n        }\n\n        if (hasFab) {\n          items.push({ empty: true });\n        }\n\n        return items;\n      }\n      return data;\n    }\n  );\n\n  private _memFilterData = memoizeOne(\n    (\n      data: DataTableRowData[],\n      columns: SortableColumnContainer,\n      filter: string\n    ): Promise<DataTableRowData[]> => filterData(data, columns, filter)\n  );\n\n  private _handleHeaderClick(ev: Event) {\n    const columnId = (ev.currentTarget as any).columnId;\n    if (!this.columns[columnId].sortable) {\n      return;\n    }\n    if (!this.sortDirection || this.sortColumn !== columnId) {\n      this.sortDirection = \"asc\";\n    } else if (this.sortDirection === \"asc\") {\n      this.sortDirection = \"desc\";\n    } else {\n      this.sortDirection = null;\n    }\n\n    this.sortColumn = this.sortDirection === null ? undefined : columnId;\n\n    fireEvent(this, \"sorting-changed\", {\n      column: columnId,\n      direction: this.sortDirection,\n    });\n  }\n\n  private _handleHeaderRowCheckboxClick(ev: Event) {\n    const checkbox = ev.target as HaCheckbox;\n    if (checkbox.checked) {\n      this.selectAll();\n    } else {\n      this._checkedRows = [];\n      this._checkedRowsChanged();\n    }\n    this._lastSelectedRowId = null;\n  }\n\n  private _handleRowCheckboxClicked = (ev: Event) => {\n    const checkbox = ev.currentTarget as HaCheckbox;\n    const rowId = (checkbox as any).rowId;\n\n    const groupedData = this._groupData(\n      this._filteredData,\n      this.localizeFunc || this.hass.localize,\n      this.appendRow,\n      this.hasFab,\n      this.groupColumn,\n      this.groupOrder,\n      this._collapsedGroups\n    );\n\n    if (\n      groupedData.find((data) => data[this.id] === rowId)?.selectable === false\n    ) {\n      return;\n    }\n\n    const rowIndex = groupedData.findIndex((data) => data[this.id] === rowId);\n\n    if (\n      ev instanceof MouseEvent &&\n      ev.shiftKey &&\n      this._lastSelectedRowId !== null\n    ) {\n      const lastSelectedRowIndex = groupedData.findIndex(\n        (data) => data[this.id] === this._lastSelectedRowId\n      );\n\n      if (lastSelectedRowIndex > -1 && rowIndex > -1) {\n        this._checkedRows = [\n          ...this._checkedRows,\n          ...this._selectRange(groupedData, lastSelectedRowIndex, rowIndex),\n        ];\n      }\n    } else if (!checkbox.checked) {\n      if (!this._checkedRows.includes(rowId)) {\n        this._checkedRows = [...this._checkedRows, rowId];\n      }\n    } else {\n      this._checkedRows = this._checkedRows.filter((row) => row !== rowId);\n    }\n\n    if (rowIndex > -1) {\n      this._lastSelectedRowId = rowId;\n    }\n    this._checkedRowsChanged();\n  };\n\n  private _selectRange(\n    groupedData: DataTableRowData[],\n    startIndex: number,\n    endIndex: number\n  ) {\n    const start = Math.min(startIndex, endIndex);\n    const end = Math.max(startIndex, endIndex);\n\n    const checkedRows: string[] = [];\n\n    for (let i = start; i <= end; i++) {\n      const row = groupedData[i];\n      if (\n        row &&\n        row.selectable !== false &&\n        !this._checkedRows.includes(row[this.id])\n      ) {\n        checkedRows.push(row[this.id]);\n      }\n    }\n\n    return checkedRows;\n  }\n\n  private _handleRowClick = (ev: Event) => {\n    if (\n      ev\n        .composedPath()\n        .find((el) =>\n          [\n            \"ha-checkbox\",\n            \"mwc-button\",\n            \"ha-button\",\n            \"ha-icon-button\",\n            \"ha-assist-chip\",\n          ].includes((el as HTMLElement).localName)\n        )\n    ) {\n      return;\n    }\n    const rowId = (ev.currentTarget as any).rowId;\n    fireEvent(this, \"row-click\", { id: rowId }, { bubbles: false });\n  };\n\n  private _setTitle(ev: Event) {\n    const target = ev.currentTarget as HTMLElement;\n    if (target.scrollWidth > target.offsetWidth) {\n      target.setAttribute(\"title\", target.innerText);\n    }\n  }\n\n  private _checkedRowsChanged() {\n    // force scroller to update, change it's items\n    if (this._filteredData.length) {\n      this._filteredData = [...this._filteredData];\n    }\n    fireEvent(this, \"selection-changed\", {\n      value: this._checkedRows,\n    });\n  }\n\n  private _handleSearchChange(ev: CustomEvent): void {\n    if (this.filter) {\n      return;\n    }\n    this._lastSelectedRowId = null;\n    this._debounceSearch(ev.detail.value);\n  }\n\n  private async _calcTableHeight() {\n    if (this.autoHeight) {\n      return;\n    }\n    await this.updateComplete;\n    this._headerHeight = this._header.clientHeight;\n  }\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n\n    this.renderRoot.querySelector(\".mdc-data-table__header-row\")!.scrollLeft = (\n      e.target as HTMLDivElement\n    ).scrollLeft;\n  }\n\n  @eventOptions({ passive: true })\n  private _scrollContent(e: Event) {\n    this.renderRoot.querySelector(\"lit-virtualizer\")!.scrollLeft = (\n      e.target as HTMLDivElement\n    ).scrollLeft;\n  }\n\n  private _collapseGroup = (ev: Event) => {\n    const groupName = (ev.currentTarget as any).group;\n    if (this._collapsedGroups.includes(groupName)) {\n      this._collapsedGroups = this._collapsedGroups.filter(\n        (grp) => grp !== groupName\n      );\n    } else {\n      this._collapsedGroups = [...this._collapsedGroups, groupName];\n    }\n    this._lastSelectedRowId = null;\n    fireEvent(this, \"collapsed-changed\", { value: this._collapsedGroups });\n  };\n\n  public expandAllGroups() {\n    this._collapsedGroups = [];\n    this._lastSelectedRowId = null;\n    fireEvent(this, \"collapsed-changed\", { value: this._collapsedGroups });\n  }\n\n  public collapseAllGroups() {\n    if (\n      !this.groupColumn ||\n      !this.data.some((item) => item[this.groupColumn!])\n    ) {\n      return;\n    }\n    const grouped = groupBy(this.data, (item) => item[this.groupColumn!]);\n    if (grouped.undefined) {\n      // undefined is a reserved group name\n      grouped[UNDEFINED_GROUP_KEY] = grouped.undefined;\n      delete grouped.undefined;\n    }\n    this._collapsedGroups = Object.keys(grouped);\n    this._lastSelectedRowId = null;\n    fireEvent(this, \"collapsed-changed\", { value: this._collapsedGroups });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleScrollbar,\n      css`\n        /* default mdc styles, colors changed, without checkbox styles */\n        :host {\n          height: 100%;\n        }\n        .mdc-data-table__content {\n          font-family: var(--ha-font-family-body);\n          -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n          -webkit-font-smoothing: var(--ha-font-smoothing);\n          font-size: 0.875rem;\n          line-height: var(--ha-line-height-condensed);\n          font-weight: var(--ha-font-weight-normal);\n          letter-spacing: 0.0178571429em;\n          text-decoration: inherit;\n          text-transform: inherit;\n        }\n\n        .mdc-data-table {\n          background-color: var(--data-table-background-color);\n          border-radius: 4px;\n          border-width: 1px;\n          border-style: solid;\n          border-color: var(--divider-color);\n          display: inline-flex;\n          flex-direction: column;\n          box-sizing: border-box;\n          overflow: hidden;\n        }\n\n        .mdc-data-table__row--selected {\n          background-color: rgba(var(--rgb-primary-color), 0.04);\n        }\n\n        .mdc-data-table__row {\n          display: flex;\n          height: var(--data-table-row-height, 52px);\n          width: var(--table-row-width, 100%);\n        }\n\n        .mdc-data-table__row.empty-row {\n          height: var(\n            --data-table-empty-row-height,\n            var(--data-table-row-height, 52px)\n          );\n        }\n\n        .mdc-data-table__row ~ .mdc-data-table__row {\n          border-top: 1px solid var(--divider-color);\n        }\n\n        .mdc-data-table__row.clickable:not(\n            .mdc-data-table__row--selected\n          ):hover {\n          background-color: rgba(var(--rgb-primary-text-color), 0.04);\n        }\n\n        .mdc-data-table__header-cell {\n          color: var(--primary-text-color);\n        }\n\n        .mdc-data-table__cell {\n          color: var(--primary-text-color);\n        }\n\n        .mdc-data-table__header-row {\n          height: 56px;\n          display: flex;\n          border-bottom: 1px solid var(--divider-color);\n          overflow: auto;\n        }\n\n        /* Hide scrollbar for Chrome, Safari and Opera */\n        .mdc-data-table__header-row::-webkit-scrollbar {\n          display: none;\n        }\n\n        /* Hide scrollbar for IE, Edge and Firefox */\n        .mdc-data-table__header-row {\n          -ms-overflow-style: none; /* IE and Edge */\n          scrollbar-width: none; /* Firefox */\n        }\n\n        .mdc-data-table__cell,\n        .mdc-data-table__header-cell {\n          padding-right: 16px;\n          padding-left: 16px;\n          min-width: 150px;\n          align-self: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          flex-shrink: 0;\n          box-sizing: border-box;\n        }\n\n        .mdc-data-table__cell.mdc-data-table__cell--flex {\n          display: flex;\n          overflow: initial;\n        }\n\n        .mdc-data-table__cell.mdc-data-table__cell--icon {\n          overflow: initial;\n        }\n\n        .mdc-data-table__header-cell--checkbox,\n        .mdc-data-table__cell--checkbox {\n          /* @noflip */\n          padding-left: 16px;\n          /* @noflip */\n          padding-right: 0;\n          /* @noflip */\n          padding-inline-start: 16px;\n          /* @noflip */\n          padding-inline-end: initial;\n          width: 60px;\n          min-width: 60px;\n        }\n\n        .mdc-data-table__table {\n          height: 100%;\n          width: 100%;\n          border: 0;\n          white-space: nowrap;\n          position: relative;\n        }\n\n        .mdc-data-table__cell {\n          font-family: var(--ha-font-family-body);\n          -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n          -webkit-font-smoothing: var(--ha-font-smoothing);\n          font-size: 0.875rem;\n          line-height: var(--ha-line-height-condensed);\n          font-weight: var(--ha-font-weight-normal);\n          letter-spacing: 0.0178571429em;\n          text-decoration: inherit;\n          text-transform: inherit;\n          flex-grow: 0;\n          flex-shrink: 0;\n        }\n\n        .mdc-data-table__cell a {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        .mdc-data-table__cell--numeric {\n          text-align: var(--float-end);\n        }\n\n        .mdc-data-table__cell--icon {\n          color: var(--secondary-text-color);\n          text-align: center;\n        }\n\n        .mdc-data-table__header-cell--icon,\n        .mdc-data-table__cell--icon {\n          min-width: 64px;\n          flex: 0 0 64px !important;\n        }\n\n        .mdc-data-table__cell--icon img {\n          width: 24px;\n          height: 24px;\n        }\n\n        .mdc-data-table__header-cell.mdc-data-table__header-cell--icon {\n          text-align: center;\n        }\n\n        .mdc-data-table__header-cell.sortable.mdc-data-table__header-cell--icon:hover,\n        .mdc-data-table__header-cell.sortable.mdc-data-table__header-cell--icon:not(\n            .not-sorted\n          ) {\n          text-align: var(--float-start);\n        }\n\n        .mdc-data-table__cell--icon:first-child img,\n        .mdc-data-table__cell--icon:first-child ha-icon,\n        .mdc-data-table__cell--icon:first-child ha-svg-icon,\n        .mdc-data-table__cell--icon:first-child ha-state-icon,\n        .mdc-data-table__cell--icon:first-child ha-domain-icon,\n        .mdc-data-table__cell--icon:first-child ha-service-icon {\n          margin-left: 8px;\n          margin-inline-start: 8px;\n          margin-inline-end: initial;\n        }\n\n        .mdc-data-table__cell--icon:first-child state-badge {\n          margin-right: -8px;\n          margin-inline-end: -8px;\n          margin-inline-start: initial;\n        }\n\n        .mdc-data-table__cell--overflow-menu,\n        .mdc-data-table__header-cell--overflow-menu,\n        .mdc-data-table__header-cell--icon-button,\n        .mdc-data-table__cell--icon-button {\n          min-width: 64px;\n          flex: 0 0 64px !important;\n          padding: 8px;\n        }\n\n        .mdc-data-table__header-cell--icon-button,\n        .mdc-data-table__cell--icon-button {\n          min-width: 56px;\n          width: 56px;\n        }\n\n        .mdc-data-table__cell--overflow-menu,\n        .mdc-data-table__cell--icon-button {\n          color: var(--secondary-text-color);\n          text-overflow: clip;\n        }\n\n        .mdc-data-table__header-cell--icon-button:first-child,\n        .mdc-data-table__cell--icon-button:first-child,\n        .mdc-data-table__header-cell--icon-button:last-child,\n        .mdc-data-table__cell--icon-button:last-child {\n          width: 64px;\n        }\n\n        .mdc-data-table__cell--overflow-menu:first-child,\n        .mdc-data-table__header-cell--overflow-menu:first-child,\n        .mdc-data-table__header-cell--icon-button:first-child,\n        .mdc-data-table__cell--icon-button:first-child {\n          padding-left: 16px;\n          padding-inline-start: 16px;\n          padding-inline-end: initial;\n        }\n\n        .mdc-data-table__cell--overflow-menu:last-child,\n        .mdc-data-table__header-cell--overflow-menu:last-child,\n        .mdc-data-table__header-cell--icon-button:last-child,\n        .mdc-data-table__cell--icon-button:last-child {\n          padding-right: 16px;\n          padding-inline-end: 16px;\n          padding-inline-start: initial;\n        }\n        .mdc-data-table__cell--overflow-menu,\n        .mdc-data-table__cell--overflow,\n        .mdc-data-table__header-cell--overflow-menu,\n        .mdc-data-table__header-cell--overflow {\n          overflow: initial;\n        }\n        .mdc-data-table__cell--icon-button a {\n          color: var(--secondary-text-color);\n        }\n\n        .mdc-data-table__header-cell {\n          font-family: var(--ha-font-family-body);\n          -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n          -webkit-font-smoothing: var(--ha-font-smoothing);\n          font-size: var(--ha-font-size-s);\n          line-height: var(--ha-line-height-normal);\n          font-weight: var(--ha-font-weight-medium);\n          letter-spacing: 0.0071428571em;\n          text-decoration: inherit;\n          text-transform: inherit;\n          text-align: var(--float-start);\n        }\n\n        .mdc-data-table__header-cell--numeric {\n          text-align: var(--float-end);\n        }\n        .mdc-data-table__header-cell--numeric.sortable:hover,\n        .mdc-data-table__header-cell--numeric.sortable:not(.not-sorted) {\n          text-align: var(--float-start);\n        }\n\n        /* custom from here */\n\n        .group-header {\n          padding-top: 12px;\n          height: var(--data-table-row-height, 52px);\n          padding-left: 12px;\n          padding-inline-start: 12px;\n          padding-inline-end: initial;\n          width: 100%;\n          font-weight: var(--ha-font-weight-medium);\n          display: flex;\n          align-items: center;\n          cursor: pointer;\n          background-color: var(--primary-background-color);\n        }\n\n        .group-header ha-icon-button {\n          transition: transform 0.2s ease;\n        }\n\n        .group-header ha-icon-button.collapsed {\n          transform: rotate(180deg);\n        }\n\n        :host {\n          display: block;\n        }\n\n        .mdc-data-table {\n          display: block;\n          border-width: var(--data-table-border-width, 1px);\n          height: 100%;\n        }\n        .mdc-data-table__header-cell {\n          overflow: hidden;\n          position: relative;\n        }\n        .mdc-data-table__header-cell span {\n          position: relative;\n          left: 0px;\n          inset-inline-start: 0px;\n          inset-inline-end: initial;\n        }\n\n        .mdc-data-table__header-cell.sortable {\n          cursor: pointer;\n        }\n        .mdc-data-table__header-cell > * {\n          transition: var(--float-start) 0.2s ease;\n        }\n        .mdc-data-table__header-cell ha-svg-icon {\n          top: -3px;\n          position: absolute;\n        }\n        .mdc-data-table__header-cell.not-sorted ha-svg-icon {\n          left: -20px;\n          inset-inline-start: -20px;\n          inset-inline-end: initial;\n        }\n        .mdc-data-table__header-cell.sortable:not(.not-sorted) span,\n        .mdc-data-table__header-cell.sortable.not-sorted:hover span {\n          left: 24px;\n          inset-inline-start: 24px;\n          inset-inline-end: initial;\n        }\n        .mdc-data-table__header-cell.sortable:not(.not-sorted) ha-svg-icon,\n        .mdc-data-table__header-cell.sortable:hover.not-sorted ha-svg-icon {\n          left: 12px;\n          inset-inline-start: 12px;\n          inset-inline-end: initial;\n        }\n        .table-header {\n          border-bottom: 1px solid var(--divider-color);\n        }\n        search-input {\n          display: block;\n          flex: 1;\n          --mdc-text-field-fill-color: var(--sidebar-background-color);\n          --mdc-text-field-idle-line-color: transparent;\n        }\n        slot[name=\"header\"] {\n          display: block;\n        }\n        .center {\n          text-align: center;\n        }\n        .secondary {\n          color: var(--secondary-text-color);\n        }\n        .scroller {\n          height: calc(100% - 57px);\n          overflow: overlay !important;\n        }\n\n        .mdc-data-table__table.auto-height .scroller {\n          overflow-y: hidden !important;\n        }\n        .grows {\n          flex-grow: 1;\n          flex-shrink: 1;\n        }\n        .forceLTR {\n          direction: ltr;\n        }\n        .clickable {\n          cursor: pointer;\n        }\n        lit-virtualizer {\n          contain: size layout !important;\n          overscroll-behavior: contain;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-data-table\": HaDataTable;\n  }\n\n  // for fire event\n  interface HASSDomEvents {\n    \"selection-changed\": SelectionChangedEvent;\n    \"row-click\": RowClickedEvent;\n    \"sorting-changed\": SortingChangedEvent;\n    \"collapsed-changed\": CollapsedChangedEvent;\n  }\n}\n","export const loadVirtualizer = async () => {\n  await import(\"@lit-labs/virtualizer\");\n};\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport type { LocalizeFunc } from \"../../common/translations/localize\";\nimport type { DataTableColumnContainer } from \"./ha-data-table\";\n\nexport interface DataTableSettingsDialogParams {\n  columns: DataTableColumnContainer;\n  onUpdate: (\n    columnOrder: string[] | undefined,\n    hiddenColumns: string[] | undefined\n  ) => void;\n  hiddenColumns?: string[];\n  columnOrder?: string[];\n  localizeFunc?: LocalizeFunc;\n}\n\nexport const loadDataTableSettingsDialog = () =>\n  import(\"./dialog-data-table-settings\");\n\nexport const showDataTableSettingsDialog = (\n  element: HTMLElement,\n  dialogParams: DataTableSettingsDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-data-table-settings\",\n    dialogImport: loadDataTableSettingsDialog,\n    dialogParams,\n  });\n};\n","import { Divider } from \"@material/web/divider/internal/divider\";\nimport { styles } from \"@material/web/divider/internal/divider-styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-md-divider\")\nexport class HaMdDivider extends Divider {\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --md-divider-color: var(--divider-color);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-md-divider\": HaMdDivider;\n  }\n}\n","import type { LitElement } from \"lit\";\nimport type { Constructor } from \"../types\";\n\ndeclare global {\n  type SupportedShortcuts = Record<string, () => void>;\n}\n\nexport const KeyboardShortcutMixin = <T extends Constructor<LitElement>>(\n  superClass: T\n) =>\n  class extends superClass {\n    private _keydownEvent = (event: KeyboardEvent) => {\n      const supportedShortcuts = this.supportedShortcuts();\n      if ((event.ctrlKey || event.metaKey) && event.key in supportedShortcuts) {\n        event.preventDefault();\n        supportedShortcuts[event.key]();\n      }\n    };\n\n    public connectedCallback() {\n      super.connectedCallback();\n      window.addEventListener(\"keydown\", this._keydownEvent);\n    }\n\n    public disconnectedCallback() {\n      window.removeEventListener(\"keydown\", this._keydownEvent);\n      super.disconnectedCallback();\n    }\n\n    protected supportedShortcuts(): SupportedShortcuts {\n      return {};\n    }\n  };\n","type NonNullUndefined<T> = T extends undefined\n  ? never\n  : T extends null\n    ? never\n    : T;\n\n/**\n * Ensure that the input is an array or wrap it in an array\n * @param value - The value to ensure is an array\n */\nexport function ensureArray(value: undefined): undefined;\nexport function ensureArray(value: null): null;\nexport function ensureArray<T>(\n  value: T | T[] | readonly T[]\n): NonNullUndefined<T>[];\nexport function ensureArray(value) {\n  if (value === undefined || value === null || Array.isArray(value)) {\n    return value;\n  }\n  return [value];\n}\n","import type { PageNavigation } from \"../../layouts/hass-tabs-subpage\";\nimport type { HomeAssistant } from \"../../types\";\nimport { ensureArray } from \"../array/ensure-array\";\nimport { isComponentLoaded } from \"./is_component_loaded\";\n\nexport const canShowPage = (hass: HomeAssistant, page: PageNavigation) =>\n  (isCore(page) || isLoadedIntegration(hass, page)) &&\n  !hideAdvancedPage(hass, page) &&\n  isNotLoadedIntegration(hass, page);\n\nexport const isLoadedIntegration = (\n  hass: HomeAssistant,\n  page: PageNavigation\n) =>\n  !page.component ||\n  ensureArray(page.component).some((integration) =>\n    isComponentLoaded(hass, integration)\n  );\n\nexport const isNotLoadedIntegration = (\n  hass: HomeAssistant,\n  page: PageNavigation\n) =>\n  !page.not_component ||\n  !ensureArray(page.not_component).some((integration) =>\n    isComponentLoaded(hass, integration)\n  );\n\nexport const isCore = (page: PageNavigation) => page.core;\nexport const isAdvancedPage = (page: PageNavigation) => page.advancedOnly;\nexport const userWantsAdvanced = (hass: HomeAssistant) =>\n  hass.userData?.showAdvanced;\nexport const hideAdvancedPage = (hass: HomeAssistant, page: PageNavigation) =>\n  isAdvancedPage(page) && !userWantsAdvanced(hass);\n","import { AttachableController } from \"@material/web/internal/controller/attachable-controller\";\nimport { Ripple } from \"@material/web/ripple/internal/ripple\";\nimport { styles } from \"@material/web/ripple/internal/ripple-styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-ripple\")\nexport class HaRipple extends Ripple {\n  private readonly attachableTouchController = new AttachableController(\n    this,\n    this._onTouchControlChange.bind(this)\n  );\n\n  attach(control: HTMLElement) {\n    super.attach(control);\n    this.attachableTouchController.attach(control);\n  }\n\n  detach() {\n    super.detach();\n    this.attachableTouchController.detach();\n  }\n\n  private _handleTouchEnd = () => {\n    if (!this.disabled) {\n      // @ts-ignore\n      super.endPressAnimation();\n    }\n  };\n\n  private _onTouchControlChange(\n    prev: HTMLElement | null,\n    next: HTMLElement | null\n  ) {\n    // Add touchend event to clean ripple on touch devices using action handler\n    prev?.removeEventListener(\"touchend\", this._handleTouchEnd);\n    next?.addEventListener(\"touchend\", this._handleTouchEnd);\n  }\n\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --md-ripple-hover-opacity: var(--ha-ripple-hover-opacity, 0.08);\n        --md-ripple-pressed-opacity: var(--ha-ripple-pressed-opacity, 0.12);\n        --md-ripple-hover-color: var(\n          --ha-ripple-hover-color,\n          var(--ha-ripple-color, var(--secondary-text-color))\n        );\n        --md-ripple-pressed-color: var(\n          --ha-ripple-pressed-color,\n          var(--ha-ripple-color, var(--secondary-text-color))\n        );\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-ripple\": HaRipple;\n  }\n}\n","import type { TemplateResult } from \"lit\";\nimport { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { ifDefined } from \"lit/directives/if-defined\";\nimport \"./ha-ripple\";\n\n@customElement(\"ha-tab\")\nexport class HaTab extends LitElement {\n  @property({ type: Boolean, reflect: true }) public active = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property() public name?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <div\n        tabindex=\"0\"\n        role=\"tab\"\n        aria-selected=${this.active}\n        aria-label=${ifDefined(this.name)}\n        @keydown=${this._handleKeyDown}\n      >\n        ${this.narrow ? html`<slot name=\"icon\"></slot>` : \"\"}\n        <span class=\"name\">${this.name}</span>\n        <ha-ripple></ha-ripple>\n      </div>\n    `;\n  }\n\n  private _handleKeyDown(ev: KeyboardEvent): void {\n    if (ev.key === \"Enter\") {\n      (ev.target as HTMLElement).click();\n    }\n  }\n\n  static styles = css`\n    div {\n      padding: 0 32px;\n      display: flex;\n      flex-direction: column;\n      text-align: center;\n      box-sizing: border-box;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: var(--header-height);\n      cursor: pointer;\n      position: relative;\n      outline: none;\n    }\n\n    .name {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n    }\n\n    :host([active]) {\n      color: var(--primary-color);\n    }\n\n    :host(:not([narrow])[active]) div {\n      border-bottom: 2px solid var(--primary-color);\n    }\n\n    :host([narrow]) {\n      min-width: 0;\n      display: flex;\n      justify-content: center;\n      overflow: hidden;\n    }\n\n    :host([narrow]) div {\n      padding: 0 4px;\n    }\n\n    div:focus-visible:before {\n      position: absolute;\n      display: block;\n      content: \"\";\n      inset: 0;\n      background-color: var(--secondary-text-color);\n      opacity: 0.08;\n    }\n  `;\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tab\": HaTab;\n  }\n}\n","import type { CSSResultGroup, PropertyValues, TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, eventOptions, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport memoizeOne from \"memoize-one\";\nimport { canShowPage } from \"../common/config/can_show_page\";\nimport { restoreScroll } from \"../common/decorators/restore-scroll\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-svg-icon\";\nimport \"../components/ha-tab\";\nimport { haStyleScrollbar } from \"../resources/styles\";\nimport type { HomeAssistant, Route } from \"../types\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string | string[];\n  name?: string;\n  not_component?: string | string[];\n  core?: boolean;\n  advancedOnly?: boolean;\n  iconPath?: string;\n  description?: string;\n  iconColor?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public supervisor = false;\n\n  @property({ attribute: false }) public localizeFunc?: LocalizeFunc;\n\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  @property({ attribute: false }) public backCallback?: () => void;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @property({ attribute: false }) public tabs!: PageNavigation[];\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean, reflect: true, attribute: \"is-wide\" })\n  public isWide = false;\n\n  @property({ type: Boolean }) public pane = false;\n\n  /**\n   * Do we need to add padding for a fab.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean, attribute: \"has-fab\" }) public hasFab = false;\n\n  @state() private _activeTab?: PageNavigation;\n\n  // @ts-ignore\n  @restoreScroll(\".content\") private _savedScrollPos?: number;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: PageNavigation | undefined,\n      _components,\n      _language,\n      _narrow,\n      localizeFunc\n    ) => {\n      const shownTabs = tabs.filter((page) => canShowPage(this.hass, page));\n\n      if (shownTabs.length < 2) {\n        if (shownTabs.length === 1) {\n          const page = shownTabs[0];\n          return [\n            page.translationKey ? localizeFunc(page.translationKey) : page.name,\n          ];\n        }\n        return [\"\"];\n      }\n\n      return shownTabs.map(\n        (page) => html`\n          <a href=${page.path}>\n            <ha-tab\n              .hass=${this.hass}\n              .active=${page.path === activeTab?.path}\n              .narrow=${this.narrow}\n              .name=${page.translationKey\n                ? localizeFunc(page.translationKey)\n                : page.name}\n            >\n              ${page.iconPath\n                ? html`<ha-svg-icon\n                    slot=\"icon\"\n                    .path=${page.iconPath}\n                  ></ha-svg-icon>`\n                : \"\"}\n            </ha-tab>\n          </a>\n        `\n      );\n    }\n  );\n\n  public willUpdate(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.find((tab) =>\n        `${this.route.prefix}${this.route.path}`.includes(tab.path)\n      );\n    }\n    super.willUpdate(changedProperties);\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.config.components,\n      this.hass.language,\n      this.narrow,\n      this.localizeFunc || this.hass.localize\n    );\n    const showTabs = tabs.length > 1;\n    return html`\n      <div class=\"toolbar\">\n        <slot name=\"toolbar\">\n          <div class=\"toolbar-content\">\n            ${this.mainPage || (!this.backPath && history.state?.root)\n              ? html`\n                  <ha-menu-button\n                    .hassio=${this.supervisor}\n                    .hass=${this.hass}\n                    .narrow=${this.narrow}\n                  ></ha-menu-button>\n                `\n              : this.backPath\n                ? html`\n                    <a href=${this.backPath}>\n                      <ha-icon-button-arrow-prev\n                        .hass=${this.hass}\n                      ></ha-icon-button-arrow-prev>\n                    </a>\n                  `\n                : html`\n                    <ha-icon-button-arrow-prev\n                      .hass=${this.hass}\n                      @click=${this._backTapped}\n                    ></ha-icon-button-arrow-prev>\n                  `}\n            ${this.narrow || !showTabs\n              ? html`<div class=\"main-title\">\n                  <slot name=\"header\">${!showTabs ? tabs[0] : \"\"}</slot>\n                </div>`\n              : \"\"}\n            ${showTabs && !this.narrow\n              ? html`<div id=\"tabbar\">${tabs}</div>`\n              : \"\"}\n            <div id=\"toolbar-icon\">\n              <slot name=\"toolbar-icon\"></slot>\n            </div>\n          </div>\n        </slot>\n        ${showTabs && this.narrow\n          ? html`<div id=\"tabbar\" class=\"bottom-bar\">${tabs}</div>`\n          : \"\"}\n      </div>\n      <div class=\"container\">\n        ${this.pane\n          ? html`<div class=\"pane\">\n              <div class=\"shadow-container\"></div>\n              <div class=\"ha-scrollbar\">\n                <slot name=\"pane\"></slot>\n              </div>\n            </div>`\n          : nothing}\n        <div\n          class=\"content ha-scrollbar ${classMap({ tabs: showTabs })}\"\n          @scroll=${this._saveScrollPos}\n        >\n          <slot></slot>\n          ${this.hasFab ? html`<div class=\"fab-bottom-space\"></div>` : nothing}\n        </div>\n      </div>\n      <div id=\"fab\" class=${classMap({ tabs: showTabs })}>\n        <slot name=\"fab\"></slot>\n      </div>\n    `;\n  }\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n  }\n\n  private _backTapped(): void {\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleScrollbar,\n      css`\n        :host {\n          display: block;\n          height: 100%;\n          background-color: var(--primary-background-color);\n        }\n\n        :host([narrow]) {\n          width: 100%;\n          position: fixed;\n        }\n\n        .container {\n          display: flex;\n          height: calc(100% - var(--header-height));\n        }\n\n        :host([narrow]) .container {\n          height: 100%;\n        }\n\n        ha-menu-button {\n          margin-right: 24px;\n          margin-inline-end: 24px;\n          margin-inline-start: initial;\n        }\n\n        .toolbar {\n          font-size: var(--ha-font-size-xl);\n          height: var(--header-height);\n          background-color: var(--sidebar-background-color);\n          font-weight: var(--ha-font-weight-normal);\n          border-bottom: 1px solid var(--divider-color);\n          box-sizing: border-box;\n        }\n        .toolbar-content {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n          height: 100%;\n          box-sizing: border-box;\n        }\n        @media (max-width: 599px) {\n          .toolbar-content {\n            padding: 4px;\n          }\n        }\n        .toolbar a {\n          color: var(--sidebar-text-color);\n          text-decoration: none;\n        }\n        .bottom-bar a {\n          width: 25%;\n        }\n\n        #tabbar {\n          display: flex;\n          font-size: var(--ha-font-size-m);\n          overflow: hidden;\n        }\n\n        #tabbar > a {\n          overflow: hidden;\n          max-width: 45%;\n        }\n\n        #tabbar.bottom-bar {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          padding: 0 16px;\n          box-sizing: border-box;\n          background-color: var(--sidebar-background-color);\n          border-top: 1px solid var(--divider-color);\n          justify-content: space-around;\n          z-index: 2;\n          font-size: var(--ha-font-size-s);\n          width: 100%;\n          padding-bottom: var(--safe-area-inset-bottom);\n        }\n\n        #tabbar:not(.bottom-bar) {\n          flex: 1;\n          justify-content: center;\n        }\n\n        :host(:not([narrow])) #toolbar-icon {\n          min-width: 40px;\n        }\n\n        ha-menu-button,\n        ha-icon-button-arrow-prev,\n        ::slotted([slot=\"toolbar-icon\"]) {\n          display: flex;\n          flex-shrink: 0;\n          pointer-events: auto;\n          color: var(--sidebar-icon-color);\n        }\n\n        .main-title {\n          flex: 1;\n          max-height: var(--header-height);\n          line-height: var(--ha-line-height-normal);\n          color: var(--sidebar-text-color);\n          margin: var(--main-title-margin, var(--margin-title));\n        }\n\n        .content {\n          position: relative;\n          width: calc(\n            100% - var(--safe-area-inset-left) - var(--safe-area-inset-right)\n          );\n          margin-left: var(--safe-area-inset-left);\n          margin-right: var(--safe-area-inset-right);\n          margin-inline-start: var(--safe-area-inset-left);\n          margin-inline-end: var(--safe-area-inset-right);\n          overflow: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        :host([narrow]) .content {\n          height: calc(100% - var(--header-height));\n          height: calc(\n            100% - var(--header-height) - var(--safe-area-inset-bottom)\n          );\n        }\n\n        :host([narrow]) .content.tabs {\n          height: calc(100% - 2 * var(--header-height));\n          height: calc(\n            100% - 2 * var(--header-height) - var(--safe-area-inset-bottom)\n          );\n        }\n\n        .content .fab-bottom-space {\n          height: calc(64px + var(--safe-area-inset-bottom));\n        }\n\n        :host([narrow]) .content.tabs .fab-bottom-space {\n          height: calc(80px + var(--safe-area-inset-bottom));\n        }\n\n        #fab {\n          position: fixed;\n          right: calc(16px + var(--safe-area-inset-right));\n          inset-inline-end: calc(16px + var(--safe-area-inset-right));\n          inset-inline-start: initial;\n          bottom: calc(16px + var(--safe-area-inset-bottom));\n          z-index: 1;\n          display: flex;\n          flex-wrap: wrap;\n          justify-content: flex-end;\n          gap: 8px;\n        }\n        :host([narrow]) #fab.tabs {\n          bottom: calc(84px + var(--safe-area-inset-bottom));\n        }\n        #fab[is-wide] {\n          bottom: 24px;\n          right: 24px;\n          inset-inline-end: 24px;\n          inset-inline-start: initial;\n        }\n\n        .pane {\n          border-right: 1px solid var(--divider-color);\n          border-inline-end: 1px solid var(--divider-color);\n          border-inline-start: initial;\n          box-sizing: border-box;\n          display: flex;\n          flex: 0 0 var(--sidepane-width, 250px);\n          width: var(--sidepane-width, 250px);\n          flex-direction: column;\n          position: relative;\n        }\n        .pane .ha-scrollbar {\n          flex: 1;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","import { ResizeController } from \"@lit-labs/observers/resize-controller\";\nimport \"@material/mwc-button/mwc-button\";\nimport {\n  mdiArrowDown,\n  mdiArrowUp,\n  mdiClose,\n  mdiFilterVariant,\n  mdiFilterVariantRemove,\n  mdiFormatListChecks,\n  mdiMenuDown,\n  mdiTableCog,\n  mdiUnfoldLessHorizontal,\n  mdiUnfoldMoreHorizontal,\n} from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, css, html, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport type { LocalizeFunc } from \"../common/translations/localize\";\nimport \"../components/chips/ha-assist-chip\";\nimport \"../components/chips/ha-filter-chip\";\nimport \"../components/data-table/ha-data-table\";\nimport type {\n  DataTableColumnContainer,\n  DataTableRowData,\n  HaDataTable,\n  SortingDirection,\n} from \"../components/data-table/ha-data-table\";\nimport { showDataTableSettingsDialog } from \"../components/data-table/show-dialog-data-table-settings\";\nimport \"../components/ha-dialog\";\nimport \"../components/ha-dialog-header\";\nimport \"../components/ha-md-button-menu\";\nimport \"../components/ha-md-divider\";\nimport \"../components/ha-md-menu-item\";\nimport \"../components/search-input-outlined\";\nimport { KeyboardShortcutMixin } from \"../mixins/keyboard-shortcut-mixin\";\nimport type { HomeAssistant, Route } from \"../types\";\nimport \"./hass-tabs-subpage\";\nimport type { PageNavigation } from \"./hass-tabs-subpage\";\n\n@customElement(\"hass-tabs-subpage-data-table\")\nexport class HaTabsSubpageDataTable extends KeyboardShortcutMixin(LitElement) {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public localizeFunc?: LocalizeFunc;\n\n  @property({ attribute: \"is-wide\", type: Boolean }) public isWide = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public supervisor = false;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property({ attribute: false }) public initialCollapsedGroups: string[] = [];\n\n  /**\n   * Object with the columns.\n   * @type {Object}\n   */\n  @property({ type: Object }) public columns: DataTableColumnContainer = {};\n\n  /**\n   * Data to show in the table.\n   * @type {Array}\n   */\n  @property({ type: Array }) public data: DataTableRowData[] = [];\n\n  /**\n   * Should rows be selectable.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public selectable = false;\n\n  /**\n   * Should rows be clickable.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public clickable = false;\n\n  /**\n   * Do we need to add padding for a fab.\n   * @type {Boolean}\n   */\n  @property({ attribute: \"has-fab\", type: Boolean }) public hasFab = false;\n\n  /**\n   * Add an extra row at the bottom of the data table\n   * @type {TemplateResult}\n   */\n  @property({ attribute: false }) public appendRow?: TemplateResult;\n\n  /**\n   * Field with a unique id per entry in data.\n   * @type {String}\n   */\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: String }) public id = \"id\";\n\n  /**\n   * String to filter the data in the data table on.\n   * @type {String}\n   */\n  @property({ type: String }) public filter = \"\";\n\n  @property({ attribute: false }) public searchLabel?: string;\n\n  /**\n   * Number of active filters.\n   * @type {Number}\n   */\n  @property({ type: Number }) public filters?;\n\n  /**\n   * Number of current selections.\n   * @type {Number}\n   */\n  @property({ type: Number }) public selected?;\n\n  /**\n   * What path to use when the back button is pressed.\n   * @type {String}\n   * @attr back-path\n   */\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n\n  /**\n   * Function to call when the back button is pressed.\n   * @type {() => void}\n   */\n  @property({ attribute: false }) public backCallback?: () => void;\n\n  /**\n   * String to show when there are no records in the data table.\n   * @type {String}\n   */\n  @property({ attribute: false, type: String }) public noDataText?: string;\n\n  /**\n   * Hides the data table and show an empty message.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public empty = false;\n\n  @property({ attribute: false }) public route!: Route;\n\n  /**\n   * Array of tabs to show on the page.\n   * @type {Array}\n   */\n  @property({ attribute: false }) public tabs: PageNavigation[] = [];\n\n  /**\n   * Show the filter menu.\n   * @type {Boolean}\n   */\n  @property({ attribute: \"has-filters\", type: Boolean })\n  public hasFilters = false;\n\n  @property({ attribute: \"show-filters\", type: Boolean })\n  public showFilters = false;\n\n  @property({ attribute: false }) public initialSorting?: {\n    column: string;\n    direction: SortingDirection;\n  };\n\n  @property({ attribute: false }) public initialGroupColumn?: string;\n\n  @property({ attribute: false }) public groupOrder?: string[];\n\n  @property({ attribute: false }) public columnOrder?: string[];\n\n  @property({ attribute: false }) public hiddenColumns?: string[];\n\n  @state() private _sortColumn?: string;\n\n  @state() private _sortDirection: SortingDirection = null;\n\n  @state() private _groupColumn?: string;\n\n  @state() private _selectMode = false;\n\n  @query(\"ha-data-table\", true) private _dataTable!: HaDataTable;\n\n  @query(\"search-input-outlined\") private _searchInput!: HTMLElement;\n\n  protected supportedShortcuts(): SupportedShortcuts {\n    return {\n      f: () => this._searchInput.focus(),\n    };\n  }\n\n  private _showPaneController = new ResizeController(this, {\n    callback: (entries) => entries[0]?.contentRect.width > 750,\n  });\n\n  public clearSelection() {\n    this._dataTable.clearSelection();\n  }\n\n  protected willUpdate() {\n    if (this.hasUpdated) {\n      return;\n    }\n    if (this.initialGroupColumn && this.columns[this.initialGroupColumn]) {\n      this._setGroupColumn(this.initialGroupColumn);\n    }\n    if (this.initialSorting && this.columns[this.initialSorting.column]) {\n      this._sortColumn = this.initialSorting.column;\n      this._sortDirection = this.initialSorting.direction;\n    }\n  }\n\n  protected render(): TemplateResult {\n    const localize = this.localizeFunc || this.hass.localize;\n    const showPane = this._showPaneController.value ?? !this.narrow;\n    const filterButton = this.hasFilters\n      ? html`<div class=\"relative\">\n          <ha-assist-chip\n            .label=${localize(\"ui.components.subpage-data-table.filters\")}\n            .active=${this.filters}\n            @click=${this._toggleFilters}\n          >\n            <ha-svg-icon slot=\"icon\" .path=${mdiFilterVariant}></ha-svg-icon>\n          </ha-assist-chip>\n          ${this.filters\n            ? html`<div class=\"badge\">${this.filters}</div>`\n            : nothing}\n        </div>`\n      : nothing;\n\n    const selectModeBtn =\n      this.selectable && !this._selectMode\n        ? html`<ha-assist-chip\n            class=\"has-dropdown select-mode-chip\"\n            .active=${this._selectMode}\n            @click=${this._enableSelectMode}\n            .title=${localize(\n              \"ui.components.subpage-data-table.enter_selection_mode\"\n            )}\n          >\n            <ha-svg-icon slot=\"icon\" .path=${mdiFormatListChecks}></ha-svg-icon>\n          </ha-assist-chip>`\n        : nothing;\n\n    const searchBar = html`<search-input-outlined\n      .hass=${this.hass}\n      .filter=${this.filter}\n      @value-changed=${this._handleSearchChange}\n      .label=${this.searchLabel}\n      .placeholder=${this.searchLabel}\n    >\n    </search-input-outlined>`;\n\n    const sortByMenu = Object.values(this.columns).find((col) => col.sortable)\n      ? html`\n          <ha-md-button-menu positioning=\"popover\">\n            <ha-assist-chip\n              slot=\"trigger\"\n              .label=${localize(\"ui.components.subpage-data-table.sort_by\", {\n                sortColumn:\n                  this._sortColumn && this.columns[this._sortColumn]\n                    ? ` ${this.columns[this._sortColumn].title || this.columns[this._sortColumn].label}` ||\n                      \"\"\n                    : \"\",\n              })}\n            >\n              <ha-svg-icon\n                slot=\"trailing-icon\"\n                .path=${mdiMenuDown}\n              ></ha-svg-icon>\n            </ha-assist-chip>\n            ${Object.entries(this.columns).map(([id, column]) =>\n              column.sortable\n                ? html`\n                    <ha-md-menu-item\n                      .value=${id}\n                      @click=${this._handleSortBy}\n                      @keydown=${this._handleSortBy}\n                      keep-open\n                      .selected=${id === this._sortColumn}\n                      class=${classMap({ selected: id === this._sortColumn })}\n                    >\n                      ${this._sortColumn === id\n                        ? html`\n                            <ha-svg-icon\n                              slot=\"end\"\n                              .path=${this._sortDirection === \"desc\"\n                                ? mdiArrowDown\n                                : mdiArrowUp}\n                            ></ha-svg-icon>\n                          `\n                        : nothing}\n                      ${column.title || column.label}\n                    </ha-md-menu-item>\n                  `\n                : nothing\n            )}\n          </ha-md-button-menu>\n        `\n      : nothing;\n\n    const groupByMenu = Object.values(this.columns).find((col) => col.groupable)\n      ? html`\n          <ha-md-button-menu positioning=\"popover\">\n            <ha-assist-chip\n              .label=${localize(\"ui.components.subpage-data-table.group_by\", {\n                groupColumn:\n                  this._groupColumn && this.columns[this._groupColumn]\n                    ? ` ${this.columns[this._groupColumn].title || this.columns[this._groupColumn].label}`\n                    : \"\",\n              })}\n              slot=\"trigger\"\n            >\n              <ha-svg-icon\n                slot=\"trailing-icon\"\n                .path=${mdiMenuDown}\n              ></ha-svg-icon\n            ></ha-assist-chip>\n            ${Object.entries(this.columns).map(([id, column]) =>\n              column.groupable\n                ? html`\n                    <ha-md-menu-item\n                      .value=${id}\n                      .clickAction=${this._handleGroupBy}\n                      .selected=${id === this._groupColumn}\n                      class=${classMap({ selected: id === this._groupColumn })}\n                    >\n                      ${column.title || column.label}\n                    </ha-md-menu-item>\n                  `\n                : nothing\n            )}\n            <ha-md-menu-item\n              .value=${\"\"}\n              .clickAction=${this._handleGroupBy}\n              .selected=${!this._groupColumn}\n              class=${classMap({ selected: !this._groupColumn })}\n            >\n              ${localize(\"ui.components.subpage-data-table.dont_group_by\")}\n            </ha-md-menu-item>\n            <ha-md-divider role=\"separator\" tabindex=\"-1\"></ha-md-divider>\n            <ha-md-menu-item\n              .clickAction=${this._collapseAllGroups}\n              .disabled=${!this._groupColumn}\n            >\n              <ha-svg-icon\n                slot=\"start\"\n                .path=${mdiUnfoldLessHorizontal}\n              ></ha-svg-icon>\n              ${localize(\n                \"ui.components.subpage-data-table.collapse_all_groups\"\n              )}\n            </ha-md-menu-item>\n            <ha-md-menu-item\n              .clickAction=${this._expandAllGroups}\n              .disabled=${!this._groupColumn}\n            >\n              <ha-svg-icon\n                slot=\"start\"\n                .path=${mdiUnfoldMoreHorizontal}\n              ></ha-svg-icon>\n              ${localize(\"ui.components.subpage-data-table.expand_all_groups\")}\n            </ha-md-menu-item>\n          </ha-md-button-menu>\n        `\n      : nothing;\n\n    const settingsButton = html`<ha-assist-chip\n      class=\"has-dropdown select-mode-chip\"\n      @click=${this._openSettings}\n      .title=${localize(\"ui.components.subpage-data-table.settings\")}\n    >\n      <ha-svg-icon slot=\"icon\" .path=${mdiTableCog}></ha-svg-icon>\n    </ha-assist-chip>`;\n\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .localizeFunc=${this.localizeFunc}\n        .narrow=${this.narrow}\n        .isWide=${this.isWide}\n        .backPath=${this.backPath}\n        .backCallback=${this.backCallback}\n        .route=${this.route}\n        .tabs=${this.tabs}\n        .mainPage=${this.mainPage}\n        .supervisor=${this.supervisor}\n        .pane=${showPane && this.showFilters}\n        @sorting-changed=${this._sortingChanged}\n      >\n        ${this._selectMode\n          ? html`<div class=\"selection-bar\" slot=\"toolbar\">\n              <div class=\"selection-controls\">\n                <ha-icon-button\n                  .path=${mdiClose}\n                  @click=${this._disableSelectMode}\n                  .label=${localize(\n                    \"ui.components.subpage-data-table.exit_selection_mode\"\n                  )}\n                ></ha-icon-button>\n                <ha-md-button-menu>\n                  <ha-assist-chip\n                    .label=${localize(\n                      \"ui.components.subpage-data-table.select\"\n                    )}\n                    slot=\"trigger\"\n                  >\n                    <ha-svg-icon\n                      slot=\"icon\"\n                      .path=${mdiFormatListChecks}\n                    ></ha-svg-icon>\n                    <ha-svg-icon\n                      slot=\"trailing-icon\"\n                      .path=${mdiMenuDown}\n                    ></ha-svg-icon\n                  ></ha-assist-chip>\n                  <ha-md-menu-item\n                    .value=${undefined}\n                    .clickAction=${this._selectAll}\n                  >\n                    <div slot=\"headline\">\n                      ${localize(\"ui.components.subpage-data-table.select_all\")}\n                    </div>\n                  </ha-md-menu-item>\n                  <ha-md-menu-item\n                    .value=${undefined}\n                    .clickAction=${this._selectNone}\n                  >\n                    <div slot=\"headline\">\n                      ${localize(\n                        \"ui.components.subpage-data-table.select_none\"\n                      )}\n                    </div>\n                  </ha-md-menu-item>\n                  <ha-md-divider role=\"separator\" tabindex=\"-1\"></ha-md-divider>\n                  <ha-md-menu-item\n                    .value=${undefined}\n                    .clickAction=${this._disableSelectMode}\n                  >\n                    <div slot=\"headline\">\n                      ${localize(\n                        \"ui.components.subpage-data-table.exit_selection_mode\"\n                      )}\n                    </div>\n                  </ha-md-menu-item>\n                </ha-md-button-menu>\n                ${this.selected !== undefined\n                  ? html`<p>\n                      ${localize(\"ui.components.subpage-data-table.selected\", {\n                        selected: this.selected || \"0\",\n                      })}\n                    </p>`\n                  : nothing}\n              </div>\n              <div class=\"center-vertical\">\n                <slot name=\"selection-bar\"></slot>\n              </div>\n            </div>`\n          : nothing}\n        ${this.showFilters\n          ? !showPane\n            ? nothing\n            : html`<div class=\"pane\" slot=\"pane\">\n                <div class=\"table-header\">\n                  <ha-assist-chip\n                    .label=${localize(\n                      \"ui.components.subpage-data-table.filters\"\n                    )}\n                    active\n                    @click=${this._toggleFilters}\n                  >\n                    <ha-svg-icon\n                      slot=\"icon\"\n                      .path=${mdiFilterVariant}\n                    ></ha-svg-icon>\n                  </ha-assist-chip>\n                  ${this.filters\n                    ? html`<ha-icon-button\n                        .path=${mdiFilterVariantRemove}\n                        @click=${this._clearFilters}\n                        .label=${localize(\n                          \"ui.components.subpage-data-table.clear_filter\"\n                        )}\n                      ></ha-icon-button>`\n                    : nothing}\n                </div>\n                <div class=\"pane-content\">\n                  <slot name=\"filter-pane\"></slot>\n                </div>\n              </div>`\n          : nothing}\n        ${this.empty\n          ? html`<div class=\"center\">\n              <slot name=\"empty\">${this.noDataText}</slot>\n            </div>`\n          : html`<div slot=\"toolbar-icon\">\n                <slot name=\"toolbar-icon\"></slot>\n              </div>\n              ${this.narrow\n                ? html`\n                    <div slot=\"header\">\n                      <slot name=\"header\">\n                        <div class=\"search-toolbar\">${searchBar}</div>\n                      </slot>\n                    </div>\n                  `\n                : \"\"}\n              <ha-data-table\n                .hass=${this.hass}\n                .localize=${localize}\n                .narrow=${this.narrow}\n                .columns=${this.columns}\n                .data=${this.data}\n                .noDataText=${this.noDataText}\n                .filter=${this.filter}\n                .selectable=${this._selectMode}\n                .hasFab=${this.hasFab}\n                .id=${this.id}\n                .clickable=${this.clickable}\n                .appendRow=${this.appendRow}\n                .sortColumn=${this._sortColumn}\n                .sortDirection=${this._sortDirection}\n                .groupColumn=${this._groupColumn}\n                .groupOrder=${this.groupOrder}\n                .initialCollapsedGroups=${this.initialCollapsedGroups}\n                .columnOrder=${this.columnOrder}\n                .hiddenColumns=${this.hiddenColumns}\n              >\n                ${!this.narrow\n                  ? html`\n                      <div slot=\"header\">\n                        <slot name=\"top-header\"></slot>\n                        <slot name=\"header\">\n                          <div class=\"table-header\">\n                            ${this.hasFilters && !this.showFilters\n                              ? html`${filterButton}`\n                              : nothing}${selectModeBtn}${searchBar}${groupByMenu}${sortByMenu}${settingsButton}\n                          </div>\n                        </slot>\n                      </div>\n                    `\n                  : html`\n                      <div slot=\"header\">\n                        <slot name=\"top-header\"></slot>\n                      </div>\n                      <div slot=\"header-row\" class=\"narrow-header-row\">\n                        ${this.hasFilters && !this.showFilters\n                          ? html`${filterButton}`\n                          : nothing}\n                        ${selectModeBtn}\n                        <div class=\"flex\"></div>\n                        ${groupByMenu}${sortByMenu}${settingsButton}\n                      </div>\n                    `}\n              </ha-data-table>`}\n        <div slot=\"fab\"><slot name=\"fab\"></slot></div>\n      </hass-tabs-subpage>\n      ${this.showFilters && !showPane\n        ? html`<ha-dialog\n            open\n            .heading=${localize(\"ui.components.subpage-data-table.filters\")}\n          >\n            <ha-dialog-header slot=\"heading\">\n              <ha-icon-button\n                slot=\"navigationIcon\"\n                .path=${mdiClose}\n                @click=${this._toggleFilters}\n                .label=${localize(\n                  \"ui.components.subpage-data-table.close_filter\"\n                )}\n              ></ha-icon-button>\n              <span slot=\"title\"\n                >${localize(\"ui.components.subpage-data-table.filters\")}</span\n              >\n              ${this.filters\n                ? html`<ha-icon-button\n                    slot=\"actionItems\"\n                    @click=${this._clearFilters}\n                    .path=${mdiFilterVariantRemove}\n                    .label=${localize(\n                      \"ui.components.subpage-data-table.clear_filter\"\n                    )}\n                  ></ha-icon-button>`\n                : nothing}\n            </ha-dialog-header>\n            <div class=\"filter-dialog-content\">\n              <slot name=\"filter-pane\"></slot>\n            </div>\n            <div slot=\"primaryAction\">\n              <ha-button @click=${this._toggleFilters}>\n                ${localize(\"ui.components.subpage-data-table.show_results\", {\n                  number: this.data.length,\n                })}\n              </ha-button>\n            </div>\n          </ha-dialog>`\n        : nothing}\n    `;\n  }\n\n  private _clearFilters() {\n    fireEvent(this, \"clear-filter\");\n  }\n\n  private _toggleFilters() {\n    this.showFilters = !this.showFilters;\n  }\n\n  private _sortingChanged(ev) {\n    this._sortDirection = ev.detail.direction;\n    this._sortColumn = this._sortDirection ? ev.detail.column : undefined;\n  }\n\n  private _handleSortBy(ev) {\n    if (ev.type === \"keydown\" && ev.key !== \"Enter\" && ev.key !== \" \") return;\n\n    const columnId = ev.currentTarget.value;\n    if (!this._sortDirection || this._sortColumn !== columnId) {\n      this._sortDirection = \"asc\";\n    } else if (this._sortDirection === \"asc\") {\n      this._sortDirection = \"desc\";\n    } else {\n      this._sortDirection = null;\n    }\n    this._sortColumn = this._sortDirection === null ? undefined : columnId;\n\n    fireEvent(this, \"sorting-changed\", {\n      column: columnId,\n      direction: this._sortDirection,\n    });\n  }\n\n  private _handleGroupBy = (item) => {\n    this._setGroupColumn(item.value);\n  };\n\n  private _setGroupColumn(columnId: string) {\n    this._groupColumn = columnId;\n    fireEvent(this, \"grouping-changed\", { value: columnId });\n  }\n\n  private _openSettings() {\n    showDataTableSettingsDialog(this, {\n      columns: this.columns,\n      hiddenColumns: this.hiddenColumns,\n      columnOrder: this.columnOrder,\n      onUpdate: (\n        columnOrder: string[] | undefined,\n        hiddenColumns: string[] | undefined\n      ) => {\n        this.columnOrder = columnOrder;\n        this.hiddenColumns = hiddenColumns;\n        fireEvent(this, \"columns-changed\", { columnOrder, hiddenColumns });\n      },\n      localizeFunc: this.localizeFunc,\n    });\n  }\n\n  private _collapseAllGroups = () => {\n    this._dataTable.collapseAllGroups();\n  };\n\n  private _expandAllGroups = () => {\n    this._dataTable.expandAllGroups();\n  };\n\n  private _enableSelectMode() {\n    this._selectMode = true;\n  }\n\n  private _disableSelectMode = () => {\n    this._selectMode = false;\n    this._dataTable.clearSelection();\n  };\n\n  private _selectAll = () => {\n    this._dataTable.selectAll();\n  };\n\n  private _selectNone = () => {\n    this._dataTable.clearSelection();\n  };\n\n  private _handleSearchChange(ev: CustomEvent) {\n    if (this.filter === ev.detail.value) {\n      return;\n    }\n    this.filter = ev.detail.value;\n    fireEvent(this, \"search-changed\", { value: this.filter });\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      height: 100%;\n    }\n\n    ha-data-table {\n      width: 100%;\n      height: 100%;\n      --data-table-border-width: 0;\n    }\n    :host(:not([narrow])) ha-data-table,\n    .pane {\n      height: calc(100vh - 1px - var(--header-height));\n      display: block;\n    }\n\n    .pane-content {\n      height: calc(100vh - 1px - var(--header-height) - var(--header-height));\n      display: flex;\n      flex-direction: column;\n    }\n\n    :host([narrow]) hass-tabs-subpage {\n      --main-title-margin: 0;\n    }\n    :host([narrow]) {\n      --expansion-panel-summary-padding: 0 16px;\n    }\n    .table-header {\n      display: flex;\n      align-items: center;\n      --mdc-shape-small: 0;\n      height: 56px;\n      width: 100%;\n      justify-content: space-between;\n      padding: 0 16px;\n      gap: 16px;\n      box-sizing: border-box;\n      background: var(--primary-background-color);\n      border-bottom: 1px solid var(--divider-color);\n    }\n    search-input-outlined {\n      flex: 1;\n    }\n    .search-toolbar {\n      display: flex;\n      align-items: center;\n      color: var(--secondary-text-color);\n    }\n    .filters {\n      --mdc-text-field-fill-color: var(--input-fill-color);\n      --mdc-text-field-idle-line-color: var(--input-idle-line-color);\n      --mdc-shape-small: 4px;\n      --text-field-overflow: initial;\n      display: flex;\n      justify-content: flex-end;\n      color: var(--primary-text-color);\n    }\n    .active-filters {\n      color: var(--primary-text-color);\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 2px 2px 2px 8px;\n      margin-left: 4px;\n      margin-inline-start: 4px;\n      margin-inline-end: initial;\n      font-size: var(--ha-font-size-m);\n      width: max-content;\n      cursor: initial;\n      direction: var(--direction);\n    }\n    .active-filters ha-svg-icon {\n      color: var(--primary-color);\n    }\n    .active-filters mwc-button {\n      margin-left: 8px;\n      margin-inline-start: 8px;\n      margin-inline-end: initial;\n      direction: var(--direction);\n    }\n    .active-filters::before {\n      background-color: var(--primary-color);\n      opacity: 0.12;\n      border-radius: 4px;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      content: \"\";\n    }\n    .center {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      box-sizing: border-box;\n      height: 100%;\n      width: 100%;\n      padding: 16px;\n    }\n\n    .badge {\n      position: absolute;\n      top: -4px;\n      right: -4px;\n      inset-inline-end: -4px;\n      inset-inline-start: initial;\n      min-width: 16px;\n      box-sizing: border-box;\n      border-radius: 50%;\n      font-size: var(--ha-font-size-xs);\n      font-weight: var(--ha-font-weight-normal);\n      background-color: var(--primary-color);\n      line-height: var(--ha-line-height-normal);\n      text-align: center;\n      padding: 0px 2px;\n      color: var(--text-primary-color);\n    }\n\n    .narrow-header-row {\n      display: flex;\n      align-items: center;\n      min-width: 100%;\n      gap: 16px;\n      padding: 0 16px;\n      box-sizing: border-box;\n      overflow-x: scroll;\n      -ms-overflow-style: none;\n      scrollbar-width: none;\n    }\n\n    .narrow-header-row .flex {\n      flex: 1;\n      margin-left: -16px;\n    }\n\n    .selection-bar {\n      background: rgba(var(--rgb-primary-color), 0.1);\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 8px 12px;\n      box-sizing: border-box;\n      font-size: var(--ha-font-size-m);\n      --ha-assist-chip-container-color: var(--card-background-color);\n    }\n\n    .selection-controls {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .selection-controls p {\n      margin-left: 8px;\n      margin-inline-start: 8px;\n      margin-inline-end: initial;\n    }\n\n    .center-vertical {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .relative {\n      position: relative;\n    }\n\n    ha-assist-chip {\n      --ha-assist-chip-container-shape: 10px;\n      --ha-assist-chip-container-color: var(--card-background-color);\n    }\n\n    .select-mode-chip {\n      --md-assist-chip-icon-label-space: 0;\n      --md-assist-chip-trailing-space: 8px;\n    }\n\n    ha-dialog {\n      --mdc-dialog-min-width: calc(\n        100vw - var(--safe-area-inset-right) - var(--safe-area-inset-left)\n      );\n      --mdc-dialog-max-width: calc(\n        100vw - var(--safe-area-inset-right) - var(--safe-area-inset-left)\n      );\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --vertical-align-dialog: flex-end;\n      --ha-dialog-border-radius: 0;\n      --dialog-content-padding: 0;\n    }\n\n    .filter-dialog-content {\n      height: calc(100vh - 1px - 61px - var(--header-height));\n      display: flex;\n      flex-direction: column;\n    }\n\n    ha-md-button-menu ha-assist-chip {\n      --md-assist-chip-trailing-space: 8px;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage-data-table\": HaTabsSubpageDataTable;\n  }\n\n  // for fire event\n  interface HASSDomEvents {\n    \"search-changed\": { value: string };\n    \"grouping-changed\": { value: string };\n    \"columns-changed\": {\n      columnOrder: string[] | undefined;\n      hiddenColumns: string[] | undefined;\n    };\n    \"clear-filter\": undefined;\n  }\n}\n","import { css } from \"lit\";\n\nexport const buttonLinkStyle = css`\n  button.link {\n    background: none;\n    color: inherit;\n    border: none;\n    padding: 0;\n    font: inherit;\n    text-align: left;\n    text-decoration: underline;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nexport const haStyle = css`\n  :host {\n    font-family: var(--ha-font-family-body);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    font-size: var(--ha-font-size-m);\n    font-weight: var(--ha-font-weight-normal);\n    line-height: var(--ha-line-height-normal);\n  }\n\n  app-header div[sticky] {\n    height: 48px;\n  }\n\n  app-toolbar [main-title] {\n    margin-left: 20px;\n    margin-inline-start: 20px;\n    margin-inline-end: initial;\n  }\n\n  h1 {\n    font-family: var(--ha-font-family-heading);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    font-size: var(--ha-font-size-2xl);\n    font-weight: var(--ha-font-weight-normal);\n    line-height: var(--ha-line-height-condensed);\n  }\n\n  h2 {\n    font-family: var(--ha-font-family-body);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: var(--ha-font-size-xl);\n    font-weight: var(--ha-font-weight-medium);\n    line-height: var(--ha-line-height-normal);\n  }\n\n  h3 {\n    font-family: var(--ha-font-family-body);\n    -webkit-font-smoothing: var(--ha-font-smoothing);\n    -moz-osx-font-smoothing: var(--ha-moz-osx-font-smoothing);\n    font-size: var(--ha-font-size-l);\n    font-weight: var(--ha-font-weight-normal);\n    line-height: var(--ha-line-height-normal);\n  }\n\n  a {\n    color: var(--primary-color);\n  }\n\n  .secondary {\n    color: var(--secondary-text-color);\n  }\n\n  .error {\n    color: var(--error-color);\n  }\n\n  .warning {\n    color: var(--error-color);\n  }\n\n  ha-button.warning,\n  mwc-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n\n  ${buttonLinkStyle}\n\n  .card-actions a {\n    text-decoration: none;\n  }\n\n  .card-actions .warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n\n  .layout.horizontal,\n  .layout.vertical {\n    display: flex;\n  }\n  .layout.inline {\n    display: inline-flex;\n  }\n  .layout.horizontal {\n    flex-direction: row;\n  }\n  .layout.vertical {\n    flex-direction: column;\n  }\n  .layout.wrap {\n    flex-wrap: wrap;\n  }\n  .layout.no-wrap {\n    flex-wrap: nowrap;\n  }\n  .layout.center,\n  .layout.center-center {\n    align-items: center;\n  }\n  .layout.bottom {\n    align-items: flex-end;\n  }\n  .layout.center-justified,\n  .layout.center-center {\n    justify-content: center;\n  }\n  .flex {\n    flex: 1;\n    flex-basis: 0.000000001px;\n  }\n  .flex-auto {\n    flex: 1 1 auto;\n  }\n  .flex-none {\n    flex: none;\n  }\n  .layout.justified {\n    justify-content: space-between;\n  }\n`;\n\nexport const haStyleDialog = css`\n  /* mwc-dialog (ha-dialog) styles */\n  ha-dialog {\n    --mdc-dialog-min-width: 400px;\n    --mdc-dialog-max-width: 600px;\n    --mdc-dialog-max-width: min(600px, 95vw);\n    --justify-action-buttons: space-between;\n  }\n\n  ha-dialog .form {\n    color: var(--primary-text-color);\n  }\n\n  a {\n    color: var(--primary-color);\n  }\n\n  /* make dialog fullscreen on small screens */\n  @media all and (max-width: 450px), all and (max-height: 500px) {\n    ha-dialog {\n      --mdc-dialog-min-width: calc(\n        100vw - var(--safe-area-inset-right) - var(--safe-area-inset-left)\n      );\n      --mdc-dialog-max-width: calc(\n        100vw - var(--safe-area-inset-right) - var(--safe-area-inset-left)\n      );\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --vertical-align-dialog: flex-end;\n      --ha-dialog-border-radius: 0;\n    }\n  }\n  mwc-button.warning,\n  ha-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n  .error {\n    color: var(--error-color);\n  }\n`;\n\nexport const haStyleScrollbar = css`\n  .ha-scrollbar::-webkit-scrollbar {\n    width: 0.4rem;\n    height: 0.4rem;\n  }\n\n  .ha-scrollbar::-webkit-scrollbar-thumb {\n    -webkit-border-radius: 4px;\n    border-radius: 4px;\n    background: var(--scrollbar-thumb-color);\n  }\n\n  .ha-scrollbar {\n    overflow-y: auto;\n    scrollbar-color: var(--scrollbar-thumb-color) transparent;\n    scrollbar-width: thin;\n  }\n`;\n\nexport const baseEntrypointStyles = css`\n  body {\n    background-color: var(--primary-background-color);\n    color: var(--primary-text-color);\n    height: calc(100vh - 32px);\n    width: 100vw;\n  }\n`;\n","export interface BrandsOptions {\n  domain: string;\n  type: \"icon\" | \"logo\" | \"icon@2x\" | \"logo@2x\";\n  useFallback?: boolean;\n  darkOptimized?: boolean;\n  brand?: boolean;\n}\n\nexport interface HardwareBrandsOptions {\n  category: string;\n  model?: string;\n  manufacturer: string;\n  darkOptimized?: boolean;\n}\n\nexport const brandsUrl = (options: BrandsOptions): string =>\n  `https://brands.home-assistant.io/${options.brand ? \"brands/\" : \"\"}${\n    options.useFallback ? \"_/\" : \"\"\n  }${options.domain}/${options.darkOptimized ? \"dark_\" : \"\"}${\n    options.type\n  }.png`;\n\nexport const hardwareBrandsUrl = (options: HardwareBrandsOptions): string =>\n  `https://brands.home-assistant.io/hardware/${options.category}/${\n    options.darkOptimized ? \"dark_\" : \"\"\n  }${options.manufacturer}${options.model ? `_${options.model}` : \"\"}.png`;\n\nexport const extractDomainFromBrandUrl = (url: string) => url.split(\"/\")[4];\n\nexport const isBrandUrl = (thumbnail: string | \"\"): boolean =>\n  thumbnail.startsWith(\"https://brands.home-assistant.io/\");\n","export function updateDeviceConfigs(node: HTMLElement | Window) {\n  node.dispatchEvent(\n    new CustomEvent(\"lcn-update-device-configs\", {\n      bubbles: true,\n      composed: true,\n    }),\n  );\n}\n\nexport function updateEntityConfigs(node: HTMLElement | Window) {\n  node.dispatchEvent(\n    new CustomEvent(\"lcn-update-entity-configs\", {\n      bubbles: true,\n      composed: true,\n    }),\n  );\n}\n","import type { LcnAddress } from \"types/lcn\";\n\nexport function addressToString(address: LcnAddress): string {\n  const result =\n    (address[2] ? \"g\" : \"m\") +\n    address[0].toString().padStart(3, \"0\") +\n    address[1].toString().padStart(3, \"0\");\n  return result;\n}\n\nexport function stringToAddress(address: string): LcnAddress {\n  const isGroup = address.substring(0, 1) === \"g\";\n  const addressId = +address.substring(1, 4);\n  const segmentId = +address.substring(4, 7);\n  const lcnAddress: LcnAddress = [addressId, segmentId, isGroup];\n  return lcnAddress;\n}\n\nexport function addressToHumanString(address: LcnAddress): string {\n  return `S${address[0]} ${address[2] ? \"G\" : \"M\"}${address[1]}`;\n}\n","import \"@ha/components/ha-tooltip\";\nimport type { HaTabsSubpageDataTable } from \"@ha/layouts/hass-tabs-subpage-data-table\";\nimport { brandsUrl } from \"@ha/util/brands-url\";\nimport { VERSION } from \"version\";\n\nexport async function renderBrandLogo(hassTabsSubpageDataTable: HaTabsSubpageDataTable) {\n  const brandHTML = `\n    <ha-tooltip\n      placement=\"bottom\"\n      distance=-5\n    >\n      <span slot=\"content\">\n        LCN Frontend Panel<br/>Version: ${VERSION}\n      </span>\n      <img\n        id=\"brand-logo\"\n        alt=\"\"\n        crossorigin=\"anonymous\"\n        referrerpolicy=\"no-referrer\"\n        height=48,\n        src=${brandsUrl({\n          domain: \"lcn\",\n          type: \"icon\",\n        })}\n      />\n      </ha-tooltip>\n  `;\n\n  const toolbarContent = hassTabsSubpageDataTable\n    .shadowRoot!.querySelector(\"hass-tabs-subpage\")!\n    .shadowRoot!.querySelector(\".toolbar-content\")!;\n\n  const tabbar = toolbarContent.querySelector(\"#tabbar\");\n\n  if (!toolbarContent?.querySelector(\"#brand-logo\"))\n    tabbar?.insertAdjacentHTML(\"beforebegin\", brandHTML);\n}\n","// This is replaced by git tag name on release. See ReleaseActions.yml\nexport const VERSION = \"dev\";\n"],"names":["isComponentLoaded","hass","component","config","components","includes","StorageClass","addFromStorage","storageKey","this","_storage","data","storage","getItem","JSON","parse","subscribeChanges","callback","_listeners","push","unsubscribeChanges","index","indexOf","splice","hasKey","getValue","setValue","value","oldValue","undefined","removeItem","setItem","stringify","_err","forEach","listener","constructor","store","window","localStorage","addEventListener","ev","key","newValue","storages","options","proto","propertyKey","Error","storageName","storageInstance","String","subscribe","el","_newValue","requestUpdate","deserializer","state","serializer","performUpdate","__initialized","call","connectedCallback","disconnectedCallback","__unbsubLocalStorage","descriptor","Object","getOwnPropertyDescriptor","newDescriptor","get","set","configurable","enumerable","oldSetter","defineProperty","HaCheckbox","CheckboxBase","styles","css","HaDialogHeader","LitElement","render","html","SUPPRESS_DEFAULT_PRESS_SELECTOR","createCloseHeading","title","localize","HaDialog","DialogBase","scrollToPos","x","y","contentElement","scrollTo","renderHeading","firstUpdated","super","suppressDefaultPressSelector","join","_updateScrolledAttribute","_onScroll","passive","removeEventListener","toggleAttribute","scrollTop","args","HaFab","FabBase","changedProperties","style","setProperty","mainWindow","HaIconButtonArrowPrev","disabled","label","_icon","attribute","type","Boolean","HaIconButton","focus","_button","ifDefined","hideTitle","ariaHasPopup","path","shadowRootOptions","mode","delegatesFocus","reflect","HaMdMenu","Menu","_handleCloseMenu","detail","reason","kind","CloseReason","KeydownCloseKey","initiator","clickAction","HaMdButtonMenu","items","_menu","open","_triggerButton","_handleClick","_setTriggerAria","positioning","hasOverflow","_handleOpening","_handleClosing","fireEvent","composed","anchorElement","close","show","querySelector","HaMdMenuItem","MenuItemEl","NotificationStream","processMessage","streamMessage","notificationId","keys","notifications","values","HaMenuButton","_attachNotifOnConnect","_subscribeNotifications","_unsubNotifications","_show","nothing","hasNotifications","_hasNotifications","narrow","dockedSidebar","_toggleMenu","changedProps","hassio","_alwaysVisible","Number","parent","frontendVersion","willUpdate","has","oldHass","oldShowButton","showButton","hasUpdated","subscribeNotifications","conn","onChange","stream","subscription","subscribeMessage","message","then","unsub","connection","length","HaSvgIcon","svg","viewBox","secondaryPath","HaTextField","TextFieldBase","updated","setCustomValidity","invalid","errorMessage","validationMessage","validateOnInitialRender","reportValidity","autocomplete","formElement","setAttribute","removeAttribute","autocorrect","inputSpellcheck","renderIcon","isTrailingIcon","icon","iconTrailing","setDefaultAnimation","keyframes","opacity","duration","easing","HaTooltip","SlTooltip","HaOutlinedField","OutlinedField","fieldTag","literal","sharedStyles","HaOutlinedTextField","OutlinedTextField","SearchInputOutlined","_input","placeholder","autofocus","filter","suffix","_filterInputChanged","_clearSearch","_filterChanged","e","target","HaAssistChip","AssistChip","renderOutline","filled","getContainerClasses","active","renderPrimaryContent","renderLeadingIcon","renderTrailingIcon","elevatedStyles","HaFilterChip","FilterChip","noLeadingIcon","trailingIconStyles","selectableStyles","throttleReplaceState","throttle","func","wait","leading","trailing","timeout","previous","throttledFunc","later","Date","now","remaining","clearTimeout","setTimeout","cancel","history","replaceState","scrollPosition","restoreScroll","selector","scrollPos","updateComplete","renderRoot","groupBy","list","keySelector","result","item","SearchInput","worker","getWorker","wrap","Worker","URL","UNDEFINED_GROUP_KEY","HaDataTable","clearSelection","_checkedRows","_lastSelectedRowId","_checkedRowsChanged","selectAll","_filteredData","selectable","map","id","select","ids","clear","row","find","unselect","_calcTableHeight","header","scrollWidth","clientWidth","removeProperty","properties","loadVirtualizer","_filterable","columns","some","column","filterable","sortColumn","columnId","direction","sortDirection","clonedColumns","deepClone","template","extraTemplate","_sortColumns","_debounceSearch","_checkableRowsCount","initialCollapsedGroups","_collapsedGroups","_sortFilterData","localizeFunc","_sortedColumns","columnOrder","_handleSearchChange","searchLabel","noLabelFloat","classMap","autoHeight","styleMap","height","_headerHeight","_scrollContent","_handleHeaderRowCheckboxClick","entries","hidden","hiddenColumns","defaultHidden","sorted","classes","sortable","minWidth","maxWidth","flex","_handleHeaderClick","_saveScrollPos","_groupData","appendRow","hasFab","groupColumn","groupOrder","_keyFunction","renderRow","_renderRow","noDataText","startTime","getTime","timeBetweenUpdate","_lastUpdate","timeBetweenRequest","_curRequest","forceUpdate","filteredData","_filter","_memFilterData","trim","prom","sortData","language","locale","Promise","all","nextRender","elapsed","resolve","currentTarget","checked","_selectRange","groupedData","startIndex","endIndex","start","Math","min","end","max","checkedRows","i","_setTitle","offsetWidth","innerText","_header","clientHeight","_savedScrollPos","scrollLeft","expandAllGroups","collapseAllGroups","grouped","haStyleScrollbar","clickable","debounce","memoizeOne","sort","a","b","orderA","orderB","reduce","obj","append","content","empty","_handleRowClick","_handleRowCheckboxClicked","main","showNarrow","forceLTR","key2","column2","collapsedGroups","stringCompare","groupedItems","groupName","rows","collapsed","_collapseGroup","filterData","checkbox","rowId","rowIndex","findIndex","MouseEvent","shiftKey","lastSelectedRowIndex","composedPath","localName","bubbles","group","grp","Array","loadDataTableSettingsDialog","HaMdDivider","Divider","KeyboardShortcutMixin","superClass","_keydownEvent","supportedShortcuts","event","ctrlKey","metaKey","preventDefault","ensureArray","isArray","isLoadedIntegration","page","integration","isNotLoadedIntegration","not_component","isCore","core","hideAdvancedPage","advancedOnly","isAdvancedPage","userData","showAdvanced","userWantsAdvanced","HaRipple","Ripple","attach","control","attachableTouchController","detach","_onTouchControlChange","prev","next","_handleTouchEnd","AttachableController","bind","endPressAnimation","HaTab","name","_handleKeyDown","click","HassTabsSubpage","_activeTab","tabs","tab","route","prefix","_getTabs","showTabs","mainPage","backPath","root","supervisor","_backTapped","pane","backCallback","back","isWide","activeTab","_components","_language","_narrow","shownTabs","canShowPage","translationKey","iconPath","mdiClose","mdiFilterVariant","mdiFilterVariantRemove","mdiFormatListChecks","mdiMenuDown","HaTabsSubpageDataTable","f","_searchInput","_dataTable","initialGroupColumn","_setGroupColumn","initialSorting","_sortColumn","_sortDirection","showPane","_showPaneController","filterButton","hasFilters","filters","_toggleFilters","selectModeBtn","_selectMode","_enableSelectMode","searchBar","sortByMenu","col","_handleSortBy","selected","groupByMenu","groupable","_groupColumn","_handleGroupBy","_collapseAllGroups","_expandAllGroups","settingsButton","_openSettings","showFilters","_sortingChanged","_disableSelectMode","_selectAll","_selectNone","_clearFilters","number","showDataTableSettingsDialog","element","dialogParams","onUpdate","dialogTag","dialogImport","ResizeController","contentRect","width","buttonLinkStyle","haStyle","haStyleDialog","brandsUrl","brand","useFallback","domain","darkOptimized","updateDeviceConfigs","node","dispatchEvent","CustomEvent","updateEntityConfigs","addressToString","address","toString","padStart","stringToAddress","isGroup","substring","addressToHumanString","async","renderBrandLogo","hassTabsSubpageDataTable","brandHTML","VERSION","toolbarContent","shadowRoot","tabbar","insertAdjacentHTML"],"mappings":"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"}